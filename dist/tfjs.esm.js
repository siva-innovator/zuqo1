
  /*
  Human library
  homepage: <https://zuqo.io>
  author: <https://github.com/siva>'
  */

var rV=Object.create,Vh=Object.defineProperty,nV=Object.getPrototypeOf,oV=Object.prototype.hasOwnProperty,sV=Object.getOwnPropertyNames,iV=Object.getOwnPropertyDescriptor;var $I=r=>Vh(r,"__esModule",{value:!0});var xt=(r,e)=>()=>(e||(e={exports:{}},r(e.exports,e)),e.exports),Ze=(r,e)=>{$I(r);for(var t in e)Vh(r,t,{get:e[t],enumerable:!0})},aV=(r,e,t)=>{if($I(r),e&&typeof e=="object"||typeof e=="function")for(let n of sV(e))!oV.call(r,n)&&n!=="default"&&Vh(r,n,{get:()=>e[n],enumerable:!(t=iV(e,n))||t.enumerable});return r},Ec=r=>r&&r.__esModule?r:aV(Vh(r!=null?rV(nV(r)):{},"default",{value:r,enumerable:!0}),r);var vS=xt(()=>{});var tN=xt((eN,Ww)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=u.toString();for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(eN,typeof Ww=="object"&&Ww,typeof define=="function"&&define)});var nN=xt((rN,jw)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(rN,typeof jw=="object"&&jw,typeof define=="function"&&define)});var sN=xt((oN,Gw)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(oN,typeof Gw=="object"&&Gw,typeof define=="function"&&define)});var aN=xt((iN,Uw)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(iN,typeof Uw=="object"&&Uw,typeof define=="function"&&define)});var uN=xt((lN,qw)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(lN,typeof qw=="object"&&qw,typeof define=="function"&&define)});var pN=xt((cN,Hw)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(cN,typeof Hw=="object"&&Hw,typeof define=="function"&&define)});var ug=xt(()=>{});var mN=xt((Mbe,cg)=>{(function(r,e){var t=this,n=256,o=6,s=52,a="random",i=e.pow(n,o),l=e.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var T=g(h(_.entropy?[w,b(r)]:w==null?x():w,3),E),F=new f(E),O=function(){for(var M=F.g(o),j=i,W=0;M<l;)M=(M+W)*n,j*=n,W=F.g(1);for(;M>=u;)M/=2,j/=2,W>>>=1;return(M+W)/j};return O.int32=function(){return F.g(4)|0},O.quick=function(){return F.g(4)/4294967296},O.double=O,g(b(F.S),r),(_.pass||k||function(M,j,W,U){return U&&(U.S&&d(U,F),M.state=function(){return d(F,{})}),W?(e[a]=M,j):M})(O,T,"global"in _?_.global:this==e,_.state)}e["seed"+a]=m;function f(w){var _,k=w.length,E=this,T=0,F=E.i=E.j=0,O=E.S=[];for(k||(w=[k++]);T<n;)O[T]=T++;for(T=0;T<n;T++)O[T]=O[F=c&F+w[T%k]+(_=O[T])],O[F]=_;(E.g=function(M){for(var j,W=0,U=E.i,Y=E.j,K=E.S;M--;)j=K[U=c&U+1],W=W*n+K[c&(K[U]=K[Y=c&Y+j])+(K[Y]=j)];return E.i=U,E.j=Y,W})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,T;if(_&&E=="object")for(T in w)try{k.push(h(w[T],_-1))}catch(F){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,T=0;T<k.length;)_[c&T]=c&(E^=_[c&T]*19)+k.charCodeAt(T++);return b(_)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(t.crypto||t.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=t.navigator,k=_&&_.plugins;return[+new Date,t,k,t.screen,b(r)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),r),typeof cg=="object"&&cg.exports){cg.exports=m;try{p=ug()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)});var dN=xt((Lbe,fN)=>{var A4=tN(),D4=nN(),$4=sN(),R4=aN(),F4=uN(),O4=pN(),Ou=mN();Ou.alea=A4;Ou.xor128=D4;Ou.xorwow=$4;Ou.xorshift7=R4;Ou.xor4096=F4;Ou.tychei=O4;fN.exports=Ou});var a2=xt((i2,Y_)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=u.toString();for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(i2,typeof Y_=="object"&&Y_,typeof define=="function"&&define)});var u2=xt((l2,Z_)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(l2,typeof Z_=="object"&&Z_,typeof define=="function"&&define)});var p2=xt((c2,J_)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(c2,typeof J_=="object"&&J_,typeof define=="function"&&define)});var f2=xt((m2,Q_)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(m2,typeof Q_=="object"&&Q_,typeof define=="function"&&define)});var h2=xt((d2,ev)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(d2,typeof ev=="object"&&ev,typeof define=="function"&&define)});var x2=xt((g2,tv)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(g2,typeof tv=="object"&&tv,typeof define=="function"&&define)});var y2=xt((Aet,Eg)=>{(function(r,e){var t=this,n=256,o=6,s=52,a="random",i=e.pow(n,o),l=e.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var T=g(h(_.entropy?[w,b(r)]:w==null?x():w,3),E),F=new f(E),O=function(){for(var M=F.g(o),j=i,W=0;M<l;)M=(M+W)*n,j*=n,W=F.g(1);for(;M>=u;)M/=2,j/=2,W>>>=1;return(M+W)/j};return O.int32=function(){return F.g(4)|0},O.quick=function(){return F.g(4)/4294967296},O.double=O,g(b(F.S),r),(_.pass||k||function(M,j,W,U){return U&&(U.S&&d(U,F),M.state=function(){return d(F,{})}),W?(e[a]=M,j):M})(O,T,"global"in _?_.global:this==e,_.state)}e["seed"+a]=m;function f(w){var _,k=w.length,E=this,T=0,F=E.i=E.j=0,O=E.S=[];for(k||(w=[k++]);T<n;)O[T]=T++;for(T=0;T<n;T++)O[T]=O[F=c&F+w[T%k]+(_=O[T])],O[F]=_;(E.g=function(M){for(var j,W=0,U=E.i,Y=E.j,K=E.S;M--;)j=K[U=c&U+1],W=W*n+K[c&(K[U]=K[Y=c&Y+j])+(K[Y]=j)];return E.i=U,E.j=Y,W})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,T;if(_&&E=="object")for(T in w)try{k.push(h(w[T],_-1))}catch(F){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,T=0;T<k.length;)_[c&T]=c&(E^=_[c&T]*19)+k.charCodeAt(T++);return b(_)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(t.crypto||t.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=t.navigator,k=_&&_.plugins;return[+new Date,t,k,t.screen,b(r)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),r),typeof Eg=="object"&&Eg.exports){Eg.exports=m;try{p=ug()}catch(w){}}else typeof define=="function"&&define.amd&&define(function(){return m})})([],Math)});var w2=xt((Det,b2)=>{var F6=a2(),O6=u2(),P6=p2(),M6=f2(),L6=h2(),z6=x2(),Xu=y2();Xu.alea=F6;Xu.xor128=O6;Xu.xorwow=P6;Xu.xorshift7=M6;Xu.xor4096=L6;Xu.tychei=z6;b2.exports=Xu});var Cp=xt(()=>{});var HM=xt(()=>{});var KM=xt(()=>{});var XM=xt((ux,E0)=>{var A0=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};function t(){return X.buffer!=Ke&&Cr(X.buffer),Ot}function n(){return X.buffer!=Ke&&Cr(X.buffer),hn}function o(){return X.buffer!=Ke&&Cr(X.buffer),kr}function s(){return X.buffer!=Ke&&Cr(X.buffer),Gn}function a(){return X.buffer!=Ke&&Cr(X.buffer),xn}var i=typeof e!="undefined"?e:{},l={},u;for(u in i)i.hasOwnProperty(u)&&(l[u]=i[u]);var c=[],p="./this.program",m=function(I,$){throw $},f=!1,d=!1,h=!1,g=!1;f=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g=!f&&!h&&!d;var x=i.ENVIRONMENT_IS_PTHREAD||!1;x&&(Ke=i.buffer,os=i.DYNAMIC_BASE,Dn=i.DYNAMICTOP_PTR);var b="";function w(I){return i.locateFile?i.locateFile(I,b):b+I}var _,k,E,T,F,O;if(h){d?b=Cp().dirname(b)+"/":b=__dirname+"/",_=function($,L){return F||(F=require("fs")),O||(O=Cp()),$=O.normalize($),F.readFileSync($,L?null:"utf8")},E=function($){var L=_($,!0);return L.buffer||(L=new Uint8Array(L)),ye(L.buffer),L},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(I){if(!(I instanceof AI))throw I}),process.on("unhandledRejection",ea),m=function(I){process.exit(I)},i.inspect=function(){return"[Emscripten Module object]"};var M;try{M=HM()}catch(I){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),I}Worker=M.Worker}else g?(typeof read!="undefined"&&(_=function($){return read($)}),E=function($){var L;return typeof readbuffer=="function"?new Uint8Array(readbuffer($)):(L=read($,"binary"),ye(typeof L=="object"),L)},typeof scriptArgs!="undefined"?c=scriptArgs:typeof arguments!="undefined"&&(c=arguments),typeof quit=="function"&&(m=function(I){quit(I)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(f||d)&&(d?b=self.location.href:document.currentScript&&(b=document.currentScript.src),typeof r!="undefined"&&r&&(b=r),b.indexOf("blob:")!==0?b=b.substr(0,b.lastIndexOf("/")+1):b="",h?(_=function($,L){return F||(F=require("fs")),O||(O=Cp()),$=O.normalize($),F.readFileSync($,L?null:"utf8")},E=function($){var L=_($,!0);return L.buffer||(L=new Uint8Array(L)),ye(L.buffer),L}):(_=function($){var L=new XMLHttpRequest;return L.open("GET",$,!1),L.send(null),L.responseText},d&&(E=function($){var L=new XMLHttpRequest;return L.open("GET",$,!1),L.responseType="arraybuffer",L.send(null),new Uint8Array(L.response)}),k=function($,L,q){var de=new XMLHttpRequest;de.open("GET",$,!0),de.responseType="arraybuffer",de.onload=function(){if(de.status==200||de.status==0&&de.response){L(de.response);return}q()},de.onerror=q,de.send(null)}),T=function(I){document.title=I});h&&typeof performance=="undefined"&&(performance=KM().performance);var j=i.print||console.log.bind(console),W=i.printErr||console.warn.bind(console);for(u in l)l.hasOwnProperty(u)&&(i[u]=l[u]);l=null,i.arguments&&(c=i.arguments),i.thisProgram&&(p=i.thisProgram),i.quit&&(m=i.quit);var U=Atomics.load,Y=Atomics.store,K=Atomics.compareExchange,Z;i.wasmBinary&&(Z=i.wasmBinary);var re;i.noExitRuntime&&(re=i.noExitRuntime),typeof WebAssembly!="object"&&W("no native wasm support detected");var X,oe=new WebAssembly.Table({initial:169,maximum:169+0,element:"anyfunc"}),ae,ie=0,pe=0,le=!1,ge=0;function ye(I,$){I||ea("Assertion failed: "+$)}function be(I){var $=i["_"+I];return ye($,"Cannot call unknown function "+I+", make sure it is exported"),$}function ke(I,$,L,q,de){var xe={string:function(bn){var Qa=0;if(bn!=null&&bn!==0){var hm=(bn.length<<2)+1;Qa=Ic(hm),ct(bn,Qa,hm)}return Qa},array:function(bn){var Qa=Ic(bn.length);return Ct(bn,Qa),Qa}};function he(bn){return $==="string"?Fe(bn):$==="boolean"?Boolean(bn):bn}var Ee=be(I),dt=[],fr=0;if(q)for(var Fr=0;Fr<q.length;Fr++){var Nc=xe[L[Fr]];Nc?(fr===0&&(fr=mm()),dt[Fr]=Nc(q[Fr])):dt[Fr]=q[Fr]}var dm=Ee.apply(null,dt);return dm=he(dm),fr!==0&&Sc(fr),dm}function Ae(I,$,L,q){L=L||[];var de=L.every(function(he){return he==="number"}),xe=$!=="string";return xe&&de&&!q?be(I):function(){return ke(I,$,L,arguments,q)}}function $e(I,$,L){for(var q=$+L,de="";!($>=q);){var xe=I[$++];if(!xe)return de;if(!(xe&128)){de+=String.fromCharCode(xe);continue}var he=I[$++]&63;if((xe&224)==192){de+=String.fromCharCode((xe&31)<<6|he);continue}var Ee=I[$++]&63;if((xe&240)==224?xe=(xe&15)<<12|he<<6|Ee:xe=(xe&7)<<18|he<<12|Ee<<6|I[$++]&63,xe<65536)de+=String.fromCharCode(xe);else{var dt=xe-65536;de+=String.fromCharCode(55296|dt>>10,56320|dt&1023)}}return de}function Fe(I,$){return I?$e(n(),I,$):""}function He(I,$,L,q){if(!(q>0))return 0;for(var de=L,xe=L+q-1,he=0;he<I.length;++he){var Ee=I.charCodeAt(he);if(Ee>=55296&&Ee<=57343){var dt=I.charCodeAt(++he);Ee=65536+((Ee&1023)<<10)|dt&1023}if(Ee<=127){if(L>=xe)break;$[L++]=Ee}else if(Ee<=2047){if(L+1>=xe)break;$[L++]=192|Ee>>6,$[L++]=128|Ee&63}else if(Ee<=65535){if(L+2>=xe)break;$[L++]=224|Ee>>12,$[L++]=128|Ee>>6&63,$[L++]=128|Ee&63}else{if(L+3>=xe)break;$[L++]=240|Ee>>18,$[L++]=128|Ee>>12&63,$[L++]=128|Ee>>6&63,$[L++]=128|Ee&63}}return $[L]=0,L-de}function ct(I,$,L){return He(I,n(),$,L)}function kt(I){for(var $=0,L=0;L<I.length;++L){var q=I.charCodeAt(L);q>=55296&&q<=57343&&(q=65536+((q&1023)<<10)|I.charCodeAt(++L)&1023),q<=127?++$:q<=2047?$+=2:q<=65535?$+=3:$+=4}return $}function Ct(I,$){t().set(I,$)}var ft=65536;function It(I,$){return I%$>0&&(I+=$-I%$),I}var Ke,Ot,hn,tr,gn,kr,Gn,tn,xn;function Cr(I){Ke=I,i.HEAP8=Ot=new Int8Array(I),i.HEAP16=tr=new Int16Array(I),i.HEAP32=kr=new Int32Array(I),i.HEAPU8=hn=new Uint8Array(I),i.HEAPU16=gn=new Uint16Array(I),i.HEAPU32=Gn=new Uint32Array(I),i.HEAPF32=tn=new Float32Array(I),i.HEAPF64=xn=new Float64Array(I)}var An=5256464,Un=An,rn=13584,os=5256464,Dn=12656,yc=i.INITIAL_MEMORY||16777216;if(x)X=i.wasmMemory,Ke=i.buffer;else if(i.wasmMemory)X=i.wasmMemory;else if(X=new WebAssembly.Memory({initial:yc/ft,maximum:2147483648/ft,shared:!0}),!(X.buffer instanceof SharedArrayBuffer))throw W("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),h&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");X&&(Ke=X.buffer),yc=Ke.byteLength,Cr(Ke),x||(o()[Dn>>2]=os);function ss(I){for(;I.length>0;){var $=I.shift();if(typeof $=="function"){$(i);continue}var L=$.func;typeof L=="number"?$.arg===void 0?i.dynCall_v(L):i.dynCall_vi(L,$.arg):L($.arg===void 0?null:$.arg)}}var Ji=[],Fl=[],hy=[],Qp=[],wh=[],em=!1;x&&(em=!0);function qn(){if(!x){if(i.preRun)for(typeof i.preRun=="function"&&(i.preRun=[i.preRun]);i.preRun.length;)yy(i.preRun.shift());ss(Ji)}}function _h(){em=!0,ss(Fl)}function gy(){x||ss(hy)}function xy(){if(!x){if(i.postRun)for(typeof i.postRun=="function"&&(i.postRun=[i.postRun]);i.postRun.length;)Ol(i.postRun.shift());ss(wh)}}function yy(I){Ji.unshift(I)}function Ol(I){wh.unshift(I)}var bc=Math.ceil,by=Math.floor,Qi=0,tm=null,Pl=null;function wy(I){ye(!x,"addRunDependency cannot be used in a pthread worker"),Qi++,i.monitorRunDependencies&&i.monitorRunDependencies(Qi)}function _y(I){if(Qi--,i.monitorRunDependencies&&i.monitorRunDependencies(Qi),Qi==0&&(tm!==null&&(clearInterval(tm),tm=null),Pl)){var $=Pl;Pl=null,$()}}i.preloadedImages={},i.preloadedAudios={};function ea(I){throw i.onAbort&&i.onAbort(I),x&&console.error("Pthread aborting at "+new Error().stack),I+="",j(I),W(I),le=!0,ge=1,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(I)}function rm(I,$){return String.prototype.startsWith?I.startsWith($):I.indexOf($)===0}var vy="data:application/octet-stream;base64,";function vh(I){return rm(I,vy)}var ky="file://";function kh(I){return rm(I,ky)}var Hn="tfjs-backend-wasm-threaded-simd.wasm";vh(Hn)||(Hn=w(Hn));function Ch(){try{if(Z)return new Uint8Array(Z);if(E)return E(Hn);throw"both async and sync fetching of the wasm failed"}catch(I){ea(I)}}function Cy(){return!Z&&(f||d)&&typeof fetch=="function"&&!kh(Hn)?fetch(Hn,{credentials:"same-origin"}).then(function(I){if(!I.ok)throw"failed to load wasm binary file at '"+Hn+"'";return I.arrayBuffer()}).catch(function(){return Ch()}):new Promise(function(I,$){I(Ch())})}function Iy(){var I={a:gb};function $(he,Ee){var dt=he.exports;if(i.asm=dt,ae=Ee,!x){var fr=ve.unusedWorkers.length;ve.unusedWorkers.forEach(function(Fr){ve.loadWasmModuleToWorker(Fr,function(){--fr||_y("wasm-instantiate")})})}}x||wy("wasm-instantiate");function L(he){$(he.instance,he.module)}function q(he){return Cy().then(function(Ee){return WebAssembly.instantiate(Ee,I)}).then(he,function(Ee){W("failed to asynchronously prepare wasm: "+Ee),ea(Ee)})}function de(){if(!Z&&typeof WebAssembly.instantiateStreaming=="function"&&!vh(Hn)&&!kh(Hn)&&typeof fetch=="function")fetch(Hn,{credentials:"same-origin"}).then(function(he){var Ee=WebAssembly.instantiateStreaming(he,I);return Ee.then(L,function(dt){W("wasm streaming compile failed: "+dt),W("falling back to ArrayBuffer instantiation"),q(L)})});else return q(L)}if(i.instantiateWasm)try{var xe=i.instantiateWasm(I,$);return xe}catch(he){return W("Module.instantiateWasm callback failed with error: "+he),!1}return de(),{}}var Sy={};function Ny(){ve.initRuntime()}x||Fl.push({func:function(){sm()}});var Ih=0,Sh=0,Nh=0;function wc(I,$,L){I=I|0,$=$|0,L=L|0,Ih=I,Nh=$,Sh=L}i.__register_pthread_ptr=wc;var nm={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},_c=13568;function vc(I,$){if(I<=0||I>t().length||I&!0||$<0)return-28;if($==0)return 0;$>=2147483647&&($=Infinity);var L=Atomics.load(o(),_c>>2),q=0;if(L==I){var de=Atomics.compareExchange(o(),_c>>2,L,0);if(de==L&&(--$,q=1,$<=0))return 1}var xe=Atomics.notify(o(),I>>2,$);if(xe>=0)return xe+q;throw"Atomics.notify returned an unexpected value "+xe}i._emscripten_futex_wake=vc;function Ty(I){if(x)throw"Internal Error! _kill_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _kill_thread!";o()[I+12>>2]=0;var $=ve.pthreads[I];$.worker.terminate(),ve.freeThreadData($),ve.runningWorkers.splice(ve.runningWorkers.indexOf($.worker),1),$.worker.pthread=void 0}function Ey(I){if(x)throw"Internal Error! _cancel_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _cancel_thread!";var $=ve.pthreads[I];$.worker.postMessage({cmd:"cancel"})}function Ay(I){if(x)throw"Internal Error! _cleanup_thread() can only ever be called from main application thread!";if(!I)throw"Internal Error! Null pthread_ptr in _cleanup_thread!";o()[I+12>>2]=0;var $=ve.pthreads[I];if($){var L=$.worker;ve.returnWorkerToPool(L)}}var ve={MAIN_THREAD_ID:1,mainThreadInfo:{schedPolicy:0,schedPrio:0},unusedWorkers:[],runningWorkers:[],initRuntime:function(){wc(ve.mainThreadBlock,!d,1),SI(ve.mainThreadBlock)},initMainThreadBlock:function(){for(var I=8,$=0;$<I;++$)ve.allocateUnusedWorker();ve.mainThreadBlock=12816;for(var $=0;$<232/4;++$)s()[ve.mainThreadBlock/4+$]=0;o()[ve.mainThreadBlock+12>>2]=ve.mainThreadBlock;var L=ve.mainThreadBlock+156;o()[L>>2]=L;for(var q=13056,$=0;$<128;++$)s()[q/4+$]=0;Atomics.store(s(),ve.mainThreadBlock+104>>2,q),Atomics.store(s(),ve.mainThreadBlock+40>>2,ve.mainThreadBlock),Atomics.store(s(),ve.mainThreadBlock+44>>2,42)},initWorker:function(){},pthreads:{},exitHandlers:null,setThreadStatus:function(){},runExitHandlers:function(){if(ve.exitHandlers!==null){for(;ve.exitHandlers.length>0;)ve.exitHandlers.pop()();ve.exitHandlers=null}x&&ie&&II()},threadExit:function(I){var $=Gs();$&&(Atomics.store(s(),$+4>>2,I),Atomics.store(s(),$+0>>2,1),Atomics.store(s(),$+60>>2,1),Atomics.store(s(),$+64>>2,0),ve.runExitHandlers(),vc($+0,2147483647),wc(0,0,0),ie=0,x&&postMessage({cmd:"exit"}))},threadCancel:function(){ve.runExitHandlers(),Atomics.store(s(),ie+4>>2,-1),Atomics.store(s(),ie+0>>2,1),vc(ie+0,2147483647),ie=pe=0,wc(0,0,0),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var I in ve.pthreads){var $=ve.pthreads[I];$&&$.worker&&ve.returnWorkerToPool($.worker)}ve.pthreads={};for(var L=0;L<ve.unusedWorkers.length;++L){var q=ve.unusedWorkers[L];q.terminate()}ve.unusedWorkers=[];for(var L=0;L<ve.runningWorkers.length;++L){var q=ve.runningWorkers[L],$=q.pthread;ve.freeThreadData($),q.terminate()}ve.runningWorkers=[]},freeThreadData:function(I){if(!!I){if(I.threadInfoStruct){var $=o()[I.threadInfoStruct+104>>2];o()[I.threadInfoStruct+104>>2]=0,pm($),pm(I.threadInfoStruct)}I.threadInfoStruct=0,I.allocatedOwnStack&&I.stackBase&&pm(I.stackBase),I.stackBase=0,I.worker&&(I.worker.pthread=null)}},returnWorkerToPool:function(I){delete ve.pthreads[I.pthread.thread],ve.unusedWorkers.push(I),ve.runningWorkers.splice(ve.runningWorkers.indexOf(I),1),ve.freeThreadData(I.pthread),I.pthread=void 0},receiveObjectTransfer:function(I){},loadWasmModuleToWorker:function(I,$){I.onmessage=function(L){var q=L.data,de=q.cmd;if(I.pthread&&(ve.currentProxiedOperationCallerThread=I.pthread.threadInfoStruct),q.targetThread&&q.targetThread!=Gs()){var xe=ve.pthreads[q.targetThread];xe?xe.worker.postMessage(L.data,q.transferList):console.error('Internal error! Worker sent a message "'+de+'" to target pthread '+q.targetThread+", but that thread no longer exists!"),ve.currentProxiedOperationCallerThread=void 0;return}if(de==="processQueuedMainThreadWork")bb();else if(de==="spawnThread")Rh(L.data);else if(de==="cleanupThread")Ay(q.thread);else if(de==="killThread")Ty(q.thread);else if(de==="cancelThread")Ey(q.thread);else if(de==="loaded")I.loaded=!0,$&&$(I),I.runPthread&&(I.runPthread(),delete I.runPthread);else if(de==="print")j("Thread "+q.threadId+": "+q.text);else if(de==="printErr")W("Thread "+q.threadId+": "+q.text);else if(de==="alert")alert("Thread "+q.threadId+": "+q.text);else if(de==="exit"){var he=I.pthread&&Atomics.load(s(),I.pthread.thread+68>>2);he&&ve.returnWorkerToPool(I)}else de==="cancelDone"?ve.returnWorkerToPool(I):de==="objectTransfer"?ve.receiveObjectTransfer(L.data):L.data.target==="setimmediate"?I.postMessage(L.data):W("worker sent an unknown command "+de);ve.currentProxiedOperationCallerThread=void 0},I.onerror=function(L){W("pthread sent an error! "+L.filename+":"+L.lineno+": "+L.message)},h&&(I.on("message",function(L){I.onmessage({data:L})}),I.on("error",function(L){I.onerror(L)}),I.on("exit",function(L){console.log("worker exited - TODO: update the worker queue?")})),I.postMessage({cmd:"load",urlOrBlob:i.mainScriptUrlOrBlob||r,wasmMemory:X,wasmModule:ae,DYNAMIC_BASE:os,DYNAMICTOP_PTR:Dn})},allocateUnusedWorker:function(){var I=w("tfjs-backend-wasm-threaded-simd.worker.js");ve.unusedWorkers.push(new Worker(I))},getNewWorker:function(){return ve.unusedWorkers.length==0&&(ve.allocateUnusedWorker(),ve.loadWasmModuleToWorker(ve.unusedWorkers[0])),ve.unusedWorkers.length>0?ve.unusedWorkers.pop():null},busySpinWait:function(I){for(var $=performance.now()+I;performance.now()<$;);}};function Dy(I,$){An=Un=I,rn=$,Sc(I)}i.establishStackSpace=Dy;function $y(){return re}i.getNoExitRuntime=$y;function Ry(I,$,L,q){ea("Assertion failed: "+Fe(I)+", at: "+[$?Fe($):"unknown filename",L,q?Fe(q):"unknown function"])}function Fy(I,$){var L=_main(I,$)}var Ml;h?Ml=function(){var I=process.hrtime();return I[0]*1e3+I[1]/1e6}:x?Ml=function(){return performance.now()-i.__performance_now_clock_drift}:typeof dateNow!="undefined"?Ml=dateNow:Ml=function(){return performance.now()};function Oy(I){return o()[vI()>>2]=I,I}function Py(I,$){if(x)return Ya(1,1,I,$);Qp.unshift({func:I,arg:$})}function My(I,$){if(I==$)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:I,cmd:"processThreadQueue"});else{var L=ve.pthreads[I],q=L&&L.worker;if(!q)return;q.postMessage({cmd:"processThreadQueue"})}return 1}function Ly(){ea()}function zy(I,$){I=I|0,$=$|0}function By(I,$,L){if(I<=0||I>t().length||I&!0)return-28;if(d){var q=Atomics.wait(o(),I>>2,$,L);if(q==="timed-out")return-73;if(q==="not-equal")return-6;if(q==="ok")return 0;throw"Atomics.wait returned an unexpected value "+q}else{var de=Atomics.load(o(),I>>2);if($!=de)return-6;var xe=performance.now(),he=xe+L;Atomics.store(o(),_c>>2,I);for(var Ee=I;I==Ee;){if(xe=performance.now(),xe>he)return-73;bb(),I=Atomics.load(o(),_c>>2)}return 0}}function Vy(){return Nh|0}function Wy(){return Sh|0}function jy(I,$,L){n().copyWithin(I,$,$+L)}function Gy(){return navigator.hardwareConcurrency}function Ya(I,$){for(var L=arguments.length-2,q=mm(),de=Ic(L*8),xe=de>>3,he=0;he<L;he++)a()[xe+he]=arguments[2+he];var Ee=TI(I,L,de,$);return Sc(q),Ee}var Ll=[];function kc(I,$){kc.array||(kc.array=[]);var L=kc.array;L.length=0;for(var q;q=n()[I++];)q===100||q===102?($=$+7&~7,L.push(a()[$>>3]),$+=8):($=$+3&~3,L.push(o()[$>>2]),$+=4);return L}function Uy(I,$,L){Ll.length=$;for(var q=L>>3,de=0;de<$;de++)Ll[de]=a()[q+de];var xe=I<0,he=xe?Sy[-I-1]:hb[I];if(xe){var Ee=Ll[1],dt=Ll[2],fr=kc(Ee,dt);return he.apply(null,fr)}return he.apply(null,Ll)}function qy(){return n().length}function Hy(I){try{return X.grow(I-Ke.byteLength+65535>>>16),Cr(X.buffer),1}catch($){}}function Ky(I){I=I>>>0;var $=qy();if(I<=$)return!1;var L=65536,q=2147483648;if(I>q)return!1;for(var de=16777216,xe=1;xe<=4;xe*=2){var he=$*(1+.2/xe);he=Math.min(he,I+100663296);var Ee=Math.min(q,It(Math.max(de,I,he),L)),dt=Hy(Ee);if(dt)return!0}return!1}var Qe={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:!1,removeAllEventListeners:function(){for(var I=Qe.eventHandlers.length-1;I>=0;--I)Qe._removeHandler(I);Qe.eventHandlers=[],Qe.deferredCalls=[]},registerRemoveEventListeners:function(){Qe.removeEventListenersRegistered||(Qp.push(Qe.removeAllEventListeners),Qe.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(I,$,L){function q(he,Ee){if(he.length!=Ee.length)return!1;for(var dt in he)if(he[dt]!=Ee[dt])return!1;return!0}for(var de in Qe.deferredCalls){var xe=Qe.deferredCalls[de];if(xe.targetFunction==I&&q(xe.argsList,L))return}Qe.deferredCalls.push({targetFunction:I,precedence:$,argsList:L}),Qe.deferredCalls.sort(function(he,Ee){return he.precedence<Ee.precedence})},removeDeferredCalls:function(I){for(var $=0;$<Qe.deferredCalls.length;++$)Qe.deferredCalls[$].targetFunction==I&&(Qe.deferredCalls.splice($,1),--$)},canPerformEventHandlerRequests:function(){return Qe.inEventHandler&&Qe.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Qe.canPerformEventHandlerRequests())for(var I=0;I<Qe.deferredCalls.length;++I){var $=Qe.deferredCalls[I];Qe.deferredCalls.splice(I,1),--I,$.targetFunction.apply(null,$.argsList)}},inEventHandler:0,currentEventHandler:null,eventHandlers:[],removeAllHandlersOnTarget:function(I,$){for(var L=0;L<Qe.eventHandlers.length;++L)Qe.eventHandlers[L].target==I&&(!$||$==Qe.eventHandlers[L].eventTypeString)&&Qe._removeHandler(L--)},_removeHandler:function(I){var $=Qe.eventHandlers[I];$.target.removeEventListener($.eventTypeString,$.eventListenerFunc,$.useCapture),Qe.eventHandlers.splice(I,1)},registerOrRemoveHandler:function(I){var $=function(de){++Qe.inEventHandler,Qe.currentEventHandler=I,Qe.runDeferredCalls(),I.handlerFunc(de),Qe.runDeferredCalls(),--Qe.inEventHandler};if(I.callbackfunc)I.eventListenerFunc=$,I.target.addEventListener(I.eventTypeString,$,I.useCapture),Qe.eventHandlers.push(I),Qe.registerRemoveEventListeners();else for(var L=0;L<Qe.eventHandlers.length;++L)Qe.eventHandlers[L].target==I.target&&Qe.eventHandlers[L].eventTypeString==I.eventTypeString&&Qe._removeHandler(L--)},queueEventHandlerOnThread_iiii:function(I,$,L,q,de){var xe=mm(),he=Ic(12);o()[he>>2]=L,o()[he+4>>2]=q,o()[he+8>>2]=de,wb(I,637534208,$,q,he),Sc(xe)},getTargetThreadForEventCallback:function(I){switch(I){case 1:return 0;case 2:return ve.currentProxiedOperationCallerThread;default:return I}},getNodeNameForTarget:function(I){return I?I==window?"#window":I==screen?"#screen":I&&I.nodeName?I.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function Xy(I){var $=kt(I)+1,L=cm($);return ct(I,L,$),L}function Yy(I,$,L,q){var de=mm(),xe=Ic(12),he=0;$&&(he=Xy($)),o()[xe>>2]=he,o()[xe+4>>2]=L,o()[xe+8>>2]=q,wb(I,657457152,0,he,xe),Sc(de)}function Zy(I,$,L,q){$=$?Fe($):"",Yy(I,$,L,q)}function Jy(I){return I>2?Fe(I):I}var Qy=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function eb(I){I=Jy(I);var $=Qy[I]||(typeof document!="undefined"?document.querySelector(I):void 0);return $}function om(I){return eb(I)}function Th(I,$,L){var q=om(I);if(!q)return-4;if(q.canvasSharedPtr&&(o()[q.canvasSharedPtr>>2]=$,o()[q.canvasSharedPtr+4>>2]=L),q.offscreenCanvas||!q.controlTransferredOffscreen){q.offscreenCanvas&&(q=q.offscreenCanvas);var de=!1;if(q.GLctxObject&&q.GLctxObject.GLctx){var xe=q.GLctxObject.GLctx.getParameter(2978);de=xe[0]===0&&xe[1]===0&&xe[2]===q.width&&xe[3]===q.height}q.width=$,q.height=L,de&&q.GLctxObject.GLctx.viewport(0,0,$,L)}else if(q.canvasSharedPtr){var he=o()[q.canvasSharedPtr+8>>2];return Zy(he,I,$,L),1}else return-4;return 0}function Eh(I,$,L){return x?Ya(2,1,I,$,L):Th(I,$,L)}function tb(I,$,L){var q=om(I);return q?Th(I,$,L):Eh(I,$,L)}function rb(I){I=I|0}function nb(I,$){I=I|0,$=$|0}function ob(I){var $=I.getExtension("ANGLE_instanced_arrays");if($)return I.vertexAttribDivisor=function(L,q){$.vertexAttribDivisorANGLE(L,q)},I.drawArraysInstanced=function(L,q,de,xe){$.drawArraysInstancedANGLE(L,q,de,xe)},I.drawElementsInstanced=function(L,q,de,xe,he){$.drawElementsInstancedANGLE(L,q,de,xe,he)},1}function sb(I){var $=I.getExtension("OES_vertex_array_object");if($)return I.createVertexArray=function(){return $.createVertexArrayOES()},I.deleteVertexArray=function(L){$.deleteVertexArrayOES(L)},I.bindVertexArray=function(L){$.bindVertexArrayOES(L)},I.isVertexArray=function(L){return $.isVertexArrayOES(L)},1}function ib(I){var $=I.getExtension("WEBGL_draw_buffers");if($)return I.drawBuffers=function(L,q){$.drawBuffersWEBGL(L,q)},1}var nt={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},currentContext:null,offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,init:function(){for(var I=new Float32Array(nt.MINI_TEMP_BUFFER_SIZE),$=0;$<nt.MINI_TEMP_BUFFER_SIZE;$++)nt.miniTempBufferFloatViews[$]=I.subarray(0,$+1);for(var L=new Int32Array(nt.MINI_TEMP_BUFFER_SIZE),$=0;$<nt.MINI_TEMP_BUFFER_SIZE;$++)nt.miniTempBufferIntViews[$]=L.subarray(0,$+1)},recordError:function($){nt.lastError||(nt.lastError=$)},getNewId:function(I){for(var $=nt.counter++,L=I.length;L<$;L++)I[L]=null;return $},MINI_TEMP_BUFFER_SIZE:256,miniTempBufferFloatViews:[0],miniTempBufferIntViews:[0],getSource:function(I,$,L,q){for(var de="",xe=0;xe<$;++xe){var he=q?o()[q+xe*4>>2]:-1;de+=Fe(o()[L+xe*4>>2],he<0?void 0:he)}return de},createContext:function(I,$){var L=I.getContext("webgl",$);if(!L)return 0;var q=nt.registerContext(L,$);return q},registerContext:function(I,$){var L=cm(8);o()[L+4>>2]=Gs();var q={handle:L,attributes:$,version:$.majorVersion,GLctx:I};return I.canvas&&(I.canvas.GLctxObject=q),nt.contexts[L]=q,(typeof $.enableExtensionsByDefault=="undefined"||$.enableExtensionsByDefault)&&nt.initExtensions(q),L},makeContextCurrent:function(I){return nt.currentContext=nt.contexts[I],i.ctx=Za=nt.currentContext&&nt.currentContext.GLctx,!(I&&!Za)},getContext:function(I){return nt.contexts[I]},deleteContext:function(I){nt.currentContext===nt.contexts[I]&&(nt.currentContext=null),typeof Qe=="object"&&Qe.removeAllHandlersOnTarget(nt.contexts[I].GLctx.canvas),nt.contexts[I]&&nt.contexts[I].GLctx.canvas&&(nt.contexts[I].GLctx.canvas.GLctxObject=void 0),pm(nt.contexts[I].handle),nt.contexts[I]=null},initExtensions:function(I){if(I||(I=nt.currentContext),!I.initExtensionsDone){I.initExtensionsDone=!0;var $=I.GLctx;ob($),sb($),ib($),$.disjointTimerQueryExt=$.getExtension("EXT_disjoint_timer_query");var L=["OES_texture_float","OES_texture_half_float","OES_standard_derivatives","OES_vertex_array_object","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","OES_element_index_uint","EXT_texture_filter_anisotropic","EXT_frag_depth","WEBGL_draw_buffers","ANGLE_instanced_arrays","OES_texture_float_linear","OES_texture_half_float_linear","EXT_blend_minmax","EXT_shader_texture_lod","EXT_texture_norm16","WEBGL_compressed_texture_pvrtc","EXT_color_buffer_half_float","WEBGL_color_buffer_float","EXT_sRGB","WEBGL_compressed_texture_etc1","EXT_disjoint_timer_query","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_astc","EXT_color_buffer_float","WEBGL_compressed_texture_s3tc_srgb","EXT_disjoint_timer_query_webgl2","WEBKIT_WEBGL_compressed_texture_pvrtc"],q=$.getSupportedExtensions()||[];q.forEach(function(de){L.indexOf(de)!=-1&&$.getExtension(de)})}},populateUniformTable:function(I){for(var $=nt.programs[I],L=nt.programInfos[I]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},q=L.uniforms,de=Za.getProgramParameter($,35718),xe=0;xe<de;++xe){var he=Za.getActiveUniform($,xe),Ee=he.name;L.maxUniformLength=Math.max(L.maxUniformLength,Ee.length+1),Ee.slice(-1)=="]"&&(Ee=Ee.slice(0,Ee.lastIndexOf("[")));var dt=Za.getUniformLocation($,Ee);if(dt){var fr=nt.getNewId(nt.uniforms);q[Ee]=[he.size,fr],nt.uniforms[fr]=dt;for(var Fr=1;Fr<he.size;++Fr){var Nc=Ee+"["+Fr+"]";dt=Za.getUniformLocation($,Nc),fr=nt.getNewId(nt.uniforms),nt.uniforms[fr]=dt}}}}},ab=["default","low-power","high-performance"];function lb(I,$){var L={},q=$>>2;L.alpha=!!o()[q+(0>>2)],L.depth=!!o()[q+(4>>2)],L.stencil=!!o()[q+(8>>2)],L.antialias=!!o()[q+(12>>2)],L.premultipliedAlpha=!!o()[q+(16>>2)],L.preserveDrawingBuffer=!!o()[q+(20>>2)];var de=o()[q+(24>>2)];L.powerPreference=ab[de],L.failIfMajorPerformanceCaveat=!!o()[q+(28>>2)],L.majorVersion=o()[q+(32>>2)],L.minorVersion=o()[q+(36>>2)],L.enableExtensionsByDefault=o()[q+(40>>2)],L.explicitSwapControl=o()[q+(44>>2)],L.proxyContextToMainThread=o()[q+(48>>2)],L.renderViaOffscreenBackBuffer=o()[q+(52>>2)];var xe=om(I);if(!xe)return-4;if(L.explicitSwapControl)return-1;var he=nt.createContext(xe,L);return he}function ub(I,$){return lb(I,$)}var zl={splitPath:function(I){var $=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return $.exec(I).slice(1)},normalizeArray:function(I,$){for(var L=0,q=I.length-1;q>=0;q--){var de=I[q];de==="."?I.splice(q,1):de===".."?(I.splice(q,1),L++):L&&(I.splice(q,1),L--)}if($)for(;L;L--)I.unshift("..");return I},normalize:function(I){var $=I.charAt(0)==="/",L=I.substr(-1)==="/";return I=zl.normalizeArray(I.split("/").filter(function(q){return!!q}),!$).join("/"),!I&&!$&&(I="."),I&&L&&(I+="/"),($?"/":"")+I},dirname:function(I){var $=zl.splitPath(I),L=$[0],q=$[1];return!L&&!q?".":(q&&(q=q.substr(0,q.length-1)),L+q)},basename:function(I){if(I==="/")return"/";var $=I.lastIndexOf("/");return $===-1?I:I.substr($+1)},extname:function(I){return zl.splitPath(I)[3]},join:function(){var I=Array.prototype.slice.call(arguments,0);return zl.normalize(I.join("/"))},join2:function(I,$){return zl.normalize(I+"/"+$)}},Cc={mappings:{},buffers:[null,[],[]],printChar:function(I,$){var L=Cc.buffers[I];$===0||$===10?((I===1?j:W)($e(L,0)),L.length=0):L.push($)},varargs:void 0,get:function(){Cc.varargs+=4;var I=o()[Cc.varargs-4>>2];return I},getStr:function(I){var $=Fe(I);return $},get64:function(I,$){return I}};function Ah(I){return x?Ya(3,1,I):0}function Dh(I,$,L,q,de){if(x)return Ya(4,1,I,$,L,q,de)}function $h(I,$,L,q){if(x)return Ya(5,1,I,$,L,q);for(var de=0,xe=0;xe<L;xe++){for(var he=o()[$+xe*8>>2],Ee=o()[$+(xe*8+4)>>2],dt=0;dt<Ee;dt++)Cc.printChar(I,n()[he+dt]);de+=Ee}return o()[q>>2]=de,0}function cb(I){var $=ve.exitHandlers.pop();I&&$()}function pb(I,$){ve.exitHandlers===null&&(ve.exitHandlers=[]),ve.exitHandlers.push(function(){EI(I,$)})}function Rh(I){if(x)throw"Internal Error! _spawn_thread() can only ever be called from main application thread!";var $=ve.getNewWorker();if($.pthread!==void 0)throw"Internal error!";if(!I.pthread_ptr)throw"Internal error, no pthread ptr!";ve.runningWorkers.push($);for(var L=cm(128*4),q=0;q<128;++q)o()[L+q*4>>2]=0;var de=I.stackBase+I.stackSize,xe=ve.pthreads[I.pthread_ptr]={worker:$,stackBase:I.stackBase,stackSize:I.stackSize,allocatedOwnStack:I.allocatedOwnStack,thread:I.pthread_ptr,threadInfoStruct:I.pthread_ptr},he=xe.threadInfoStruct>>2;Atomics.store(s(),he+(0>>2),0),Atomics.store(s(),he+(4>>2),0),Atomics.store(s(),he+(8>>2),0),Atomics.store(s(),he+(68>>2),I.detached),Atomics.store(s(),he+(104>>2),L),Atomics.store(s(),he+(48>>2),0),Atomics.store(s(),he+(40>>2),xe.threadInfoStruct),Atomics.store(s(),he+(44>>2),42),Atomics.store(s(),he+(108>>2),I.stackSize),Atomics.store(s(),he+(84>>2),I.stackSize),Atomics.store(s(),he+(80>>2),de),Atomics.store(s(),he+(108+8>>2),de),Atomics.store(s(),he+(108+12>>2),I.detached),Atomics.store(s(),he+(108+20>>2),I.schedPolicy),Atomics.store(s(),he+(108+24>>2),I.schedPrio);var Ee=kI(),dt=Ee+40;Atomics.store(s(),he+(176>>2),dt),$.pthread=xe;var fr={cmd:"run",start_routine:I.startRoutine,arg:I.arg,threadInfoStruct:I.pthread_ptr,selfThreadId:I.pthread_ptr,parentThreadId:I.parent_pthread_ptr,stackBase:I.stackBase,stackSize:I.stackSize};$.runPthread=function(){fr.time=performance.now(),$.postMessage(fr,I.transferList)},$.loaded&&($.runPthread(),delete $.runPthread)}function mb(I,$,L){if(!$&&!L)return nm.EINVAL;if(!I)return W("pthread_getschedparam called with a null thread pointer!"),nm.ESRCH;var q=o()[I+12>>2];if(q!==I)return W("pthread_getschedparam attempted on thread "+I+", which does not point to a valid thread, or does not exist anymore!"),nm.ESRCH;var de=Atomics.load(s(),I+108+20>>2),xe=Atomics.load(s(),I+108+24>>2);return $&&(o()[$>>2]=de),L&&(o()[L>>2]=xe),0}function Gs(){return Ih|0}i._pthread_self=Gs;function fb(I,$,L,q){if(typeof SharedArrayBuffer=="undefined")return W("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!I)return W("pthread_create called with a null thread pointer!"),28;var de=[],xe=0;if(x&&(de.length===0||xe))return NI(687865856,I,$,L,q);if(xe)return xe;var he=0,Ee=0,dt=0,fr=0,Fr=0;if($){he=o()[$>>2],he+=81920,Ee=o()[$+8>>2],dt=o()[$+12>>2]!==0;var Nc=o()[$+16>>2]===0;if(Nc){var dm=o()[$+20>>2],bn=o()[$+24>>2],Qa=ve.currentProxiedOperationCallerThread?ve.currentProxiedOperationCallerThread:Gs();mb(Qa,$+20,$+24),fr=o()[$+20>>2],Fr=o()[$+24>>2],o()[$+20>>2]=dm,o()[$+24>>2]=bn}else fr=o()[$+20>>2],Fr=o()[$+24>>2]}else he=2097152;var hm=Ee==0;hm?Ee=CI(16,he):(Ee-=he,ye(Ee>0));for(var Tc=cm(232),vb=0;vb<232>>2;++vb)s()[(Tc>>2)+vb]=0;o()[I>>2]=Tc,o()[Tc+12>>2]=Tc;var DI=Tc+156;o()[DI>>2]=DI;var kb={stackBase:Ee,stackSize:he,allocatedOwnStack:hm,schedPolicy:fr,schedPrio:Fr,detached:dt,startRoutine:L,pthread_ptr:Tc,parent_pthread_ptr:Gs(),arg:q,transferList:de};return x?(kb.cmd="spawnThread",postMessage(kb,de)):Rh(kb),0}function db(I){return I=+I,I>=0?+by(I+.5):+bc(I-.5)}function Fh(I){if(x)return Ya(6,1,I);switch(I){case 30:return 16384;case 85:var $=2147483648;return $/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return typeof navigator=="object"&&navigator.hardwareConcurrency||1}return Oy(28),-1}x?ve.initWorker():ve.initMainThreadBlock();var Za;nt.init();var hb=[null,Py,Eh,Ah,Dh,$h,Fh],gb={e:Ry,r:Fy,w:My,a:Ly,l:zy,d:By,c:vc,h:Ml,g:Vy,x:Wy,q:jy,B:Gy,t:Uy,A:Ky,u:tb,k:rb,s:nb,v:ub,m:Ah,o:Dh,i:$h,p:Ny,memory:X||i.wasmMemory,y:cb,z:pb,j:fb,b:Gs,f:db,n:Fh,table:oe},Oh=Iy();i.asm=Oh;var sm=i.___wasm_call_ctors=function(){return(sm=i.___wasm_call_ctors=i.asm.C).apply(null,arguments)},im=i._init=function(){return(im=i._init=i.asm.D).apply(null,arguments)},Ph=i._register_tensor=function(){return(Ph=i._register_tensor=i.asm.E).apply(null,arguments)},Bl=i._dispose_data=function(){return(Bl=i._dispose_data=i.asm.F).apply(null,arguments)},am=i._dispose=function(){return(am=i._dispose=i.asm.G).apply(null,arguments)},xb=i._Abs=function(){return(xb=i._Abs=i.asm.H).apply(null,arguments)},yb=i._Add=function(){return(yb=i._Add=i.asm.I).apply(null,arguments)},lm=i._AddN=function(){return(lm=i._AddN=i.asm.J).apply(null,arguments)},Mh=i._ArgMax=function(){return(Mh=i._ArgMax=i.asm.K).apply(null,arguments)},Lh=i._AvgPool=function(){return(Lh=i._AvgPool=i.asm.L).apply(null,arguments)},H=i._BatchMatMul=function(){return(H=i._BatchMatMul=i.asm.M).apply(null,arguments)},se=i._ClipByValue=function(){return(se=i._ClipByValue=i.asm.N).apply(null,arguments)},_e=i._Conv2D=function(){return(_e=i._Conv2D=i.asm.O).apply(null,arguments)},Xe=i._Conv2DBackpropInput=function(){return(Xe=i._Conv2DBackpropInput=i.asm.P).apply(null,arguments)},Ye=i._Cos=function(){return(Ye=i._Cos=i.asm.Q).apply(null,arguments)},Xt=i._CropAndResize=function(){return(Xt=i._CropAndResize=i.asm.R).apply(null,arguments)},lt=i._Cumsum=function(){return(lt=i._Cumsum=i.asm.S).apply(null,arguments)},st=i._DepthToSpace=function(){return(st=i._DepthToSpace=i.asm.T).apply(null,arguments)},br=i._DepthwiseConv2dNative=function(){return(br=i._DepthwiseConv2dNative=i.asm.U).apply(null,arguments)},ta=i._Equal=function(){return(ta=i._Equal=i.asm.V).apply(null,arguments)},ra=i._Exp=function(){return(ra=i._Exp=i.asm.W).apply(null,arguments)},zh=i._FlipLeftRight=function(){return(zh=i._FlipLeftRight=i.asm.X).apply(null,arguments)},um=i._Floor=function(){return(um=i._Floor=i.asm.Y).apply(null,arguments)},yn=i._FloorDiv=function(){return(yn=i._FloorDiv=i.asm.Z).apply(null,arguments)},Ja=i._FusedBatchNorm=function(){return(Ja=i._FusedBatchNorm=i.asm._).apply(null,arguments)},Bh=i._FusedConv2D=function(){return(Bh=i._FusedConv2D=i.asm.$).apply(null,arguments)},W3=i._FusedDepthwiseConv2D=function(){return(W3=i._FusedDepthwiseConv2D=i.asm.aa).apply(null,arguments)},j3=i._Gather=function(){return(j3=i._Gather=i.asm.ba).apply(null,arguments)},G3=i._GatherNd=function(){return(G3=i._GatherNd=i.asm.ca).apply(null,arguments)},U3=i._Greater=function(){return(U3=i._Greater=i.asm.da).apply(null,arguments)},q3=i._GreaterEqual=function(){return(q3=i._GreaterEqual=i.asm.ea).apply(null,arguments)},H3=i._LeakyRelu=function(){return(H3=i._LeakyRelu=i.asm.fa).apply(null,arguments)},K3=i._Less=function(){return(K3=i._Less=i.asm.ga).apply(null,arguments)},X3=i._LessEqual=function(){return(X3=i._LessEqual=i.asm.ha).apply(null,arguments)},Y3=i._Log=function(){return(Y3=i._Log=i.asm.ia).apply(null,arguments)},Z3=i._LogicalAnd=function(){return(Z3=i._LogicalAnd=i.asm.ja).apply(null,arguments)},J3=i._Max=function(){return(J3=i._Max=i.asm.ka).apply(null,arguments)},Q3=i._MaxPool=function(){return(Q3=i._MaxPool=i.asm.la).apply(null,arguments)},eB=i._Maximum=function(){return(eB=i._Maximum=i.asm.ma).apply(null,arguments)},tB=i._Mean=function(){return(tB=i._Mean=i.asm.na).apply(null,arguments)},rB=i._Min=function(){return(rB=i._Min=i.asm.oa).apply(null,arguments)},nB=i._Minimum=function(){return(nB=i._Minimum=i.asm.pa).apply(null,arguments)},oB=i._Multiply=function(){return(oB=i._Multiply=i.asm.qa).apply(null,arguments)},sB=i._Neg=function(){return(sB=i._Neg=i.asm.ra).apply(null,arguments)},iB=i._NonMaxSuppressionV3=function(){return(iB=i._NonMaxSuppressionV3=i.asm.sa).apply(null,arguments)},aB=i._NonMaxSuppressionV4=function(){return(aB=i._NonMaxSuppressionV4=i.asm.ta).apply(null,arguments)},lB=i._NonMaxSuppressionV5=function(){return(lB=i._NonMaxSuppressionV5=i.asm.ua).apply(null,arguments)},uB=i._NotEqual=function(){return(uB=i._NotEqual=i.asm.va).apply(null,arguments)},cB=i._OneHot=function(){return(cB=i._OneHot=i.asm.wa).apply(null,arguments)},pB=i._PadV2=function(){return(pB=i._PadV2=i.asm.xa).apply(null,arguments)},mB=i._Pow=function(){return(mB=i._Pow=i.asm.ya).apply(null,arguments)},fB=i._Prelu=function(){return(fB=i._Prelu=i.asm.za).apply(null,arguments)},dB=i._Prod=function(){return(dB=i._Prod=i.asm.Aa).apply(null,arguments)},hB=i._RealDiv=function(){return(hB=i._RealDiv=i.asm.Ba).apply(null,arguments)},gB=i._Relu=function(){return(gB=i._Relu=i.asm.Ca).apply(null,arguments)},xB=i._Relu6=function(){return(xB=i._Relu6=i.asm.Da).apply(null,arguments)},yB=i._ResizeBilinear=function(){return(yB=i._ResizeBilinear=i.asm.Ea).apply(null,arguments)},bB=i._Reverse=function(){return(bB=i._Reverse=i.asm.Fa).apply(null,arguments)},wB=i._RotateWithOffset=function(){return(wB=i._RotateWithOffset=i.asm.Ga).apply(null,arguments)},_B=i._Round=function(){return(_B=i._Round=i.asm.Ha).apply(null,arguments)},vB=i._Rsqrt=function(){return(vB=i._Rsqrt=i.asm.Ia).apply(null,arguments)},kB=i._ScatterNd=function(){return(kB=i._ScatterNd=i.asm.Ja).apply(null,arguments)},CB=i._SelectV2=function(){return(CB=i._SelectV2=i.asm.Ka).apply(null,arguments)},IB=i._Sigmoid=function(){return(IB=i._Sigmoid=i.asm.La).apply(null,arguments)},SB=i._Sin=function(){return(SB=i._Sin=i.asm.Ma).apply(null,arguments)},NB=i._Softmax=function(){return(NB=i._Softmax=i.asm.Na).apply(null,arguments)},TB=i._Sqrt=function(){return(TB=i._Sqrt=i.asm.Oa).apply(null,arguments)},EB=i._Square=function(){return(EB=i._Square=i.asm.Pa).apply(null,arguments)},AB=i._SquaredDifference=function(){return(AB=i._SquaredDifference=i.asm.Qa).apply(null,arguments)},DB=i._Step=function(){return(DB=i._Step=i.asm.Ra).apply(null,arguments)},$B=i._StridedSlice=function(){return($B=i._StridedSlice=i.asm.Sa).apply(null,arguments)},RB=i._Sub=function(){return(RB=i._Sub=i.asm.Ta).apply(null,arguments)},FB=i._Sum=function(){return(FB=i._Sum=i.asm.Ua).apply(null,arguments)},OB=i._Tanh=function(){return(OB=i._Tanh=i.asm.Va).apply(null,arguments)},PB=i._Tile=function(){return(PB=i._Tile=i.asm.Wa).apply(null,arguments)},MB=i._TopK=function(){return(MB=i._TopK=i.asm.Xa).apply(null,arguments)},LB=i._Transpose=function(){return(LB=i._Transpose=i.asm.Ya).apply(null,arguments)},zB=i.__FusedMatMul=function(){return(zB=i.__FusedMatMul=i.asm.Za).apply(null,arguments)},cm=i._malloc=function(){return(cm=i._malloc=i.asm._a).apply(null,arguments)},pm=i._free=function(){return(pm=i._free=i.asm.$a).apply(null,arguments)},vI=i.___errno_location=function(){return(vI=i.___errno_location=i.asm.ab).apply(null,arguments)},kI=i._emscripten_get_global_libc=function(){return(kI=i._emscripten_get_global_libc=i.asm.bb).apply(null,arguments)},BB=i.___em_js__initPthreadsJS=function(){return(BB=i.___em_js__initPthreadsJS=i.asm.cb).apply(null,arguments)},CI=i._memalign=function(){return(CI=i._memalign=i.asm.db).apply(null,arguments)},II=i.___pthread_tsd_run_dtors=function(){return(II=i.___pthread_tsd_run_dtors=i.asm.eb).apply(null,arguments)},bb=i._emscripten_main_thread_process_queued_calls=function(){return(bb=i._emscripten_main_thread_process_queued_calls=i.asm.fb).apply(null,arguments)},VB=i._emscripten_current_thread_process_queued_calls=function(){return(VB=i._emscripten_current_thread_process_queued_calls=i.asm.gb).apply(null,arguments)},SI=i._emscripten_register_main_browser_thread_id=function(){return(SI=i._emscripten_register_main_browser_thread_id=i.asm.hb).apply(null,arguments)},WB=i._emscripten_main_browser_thread_id=function(){return(WB=i._emscripten_main_browser_thread_id=i.asm.ib).apply(null,arguments)},jB=i._emscripten_async_run_in_main_thread=function(){return(jB=i._emscripten_async_run_in_main_thread=i.asm.jb).apply(null,arguments)},GB=i._emscripten_sync_run_in_main_thread=function(){return(GB=i._emscripten_sync_run_in_main_thread=i.asm.kb).apply(null,arguments)},UB=i._emscripten_sync_run_in_main_thread_0=function(){return(UB=i._emscripten_sync_run_in_main_thread_0=i.asm.lb).apply(null,arguments)},qB=i._emscripten_sync_run_in_main_thread_1=function(){return(qB=i._emscripten_sync_run_in_main_thread_1=i.asm.mb).apply(null,arguments)},HB=i._emscripten_sync_run_in_main_thread_2=function(){return(HB=i._emscripten_sync_run_in_main_thread_2=i.asm.nb).apply(null,arguments)},KB=i._emscripten_sync_run_in_main_thread_xprintf_varargs=function(){return(KB=i._emscripten_sync_run_in_main_thread_xprintf_varargs=i.asm.ob).apply(null,arguments)},XB=i._emscripten_sync_run_in_main_thread_3=function(){return(XB=i._emscripten_sync_run_in_main_thread_3=i.asm.pb).apply(null,arguments)},NI=i._emscripten_sync_run_in_main_thread_4=function(){return(NI=i._emscripten_sync_run_in_main_thread_4=i.asm.qb).apply(null,arguments)},YB=i._emscripten_sync_run_in_main_thread_5=function(){return(YB=i._emscripten_sync_run_in_main_thread_5=i.asm.rb).apply(null,arguments)},ZB=i._emscripten_sync_run_in_main_thread_6=function(){return(ZB=i._emscripten_sync_run_in_main_thread_6=i.asm.sb).apply(null,arguments)},JB=i._emscripten_sync_run_in_main_thread_7=function(){return(JB=i._emscripten_sync_run_in_main_thread_7=i.asm.tb).apply(null,arguments)},TI=i._emscripten_run_in_main_runtime_thread_js=function(){return(TI=i._emscripten_run_in_main_runtime_thread_js=i.asm.ub).apply(null,arguments)},wb=i._emscripten_async_queue_on_thread_=function(){return(wb=i._emscripten_async_queue_on_thread_=i.asm.vb).apply(null,arguments)},QB=i._emscripten_tls_init=function(){return(QB=i._emscripten_tls_init=i.asm.wb).apply(null,arguments)},mm=i.stackSave=function(){return(mm=i.stackSave=i.asm.xb).apply(null,arguments)},Ic=i.stackAlloc=function(){return(Ic=i.stackAlloc=i.asm.yb).apply(null,arguments)},Sc=i.stackRestore=function(){return(Sc=i.stackRestore=i.asm.zb).apply(null,arguments)},EI=i.dynCall_vi=function(){return(EI=i.dynCall_vi=i.asm.Ab).apply(null,arguments)},eV=i.dynCall_v=function(){return(eV=i.dynCall_v=i.asm.Bb).apply(null,arguments)},tV=i.dynCall_ii=function(){return(tV=i.dynCall_ii=i.asm.Cb).apply(null,arguments)};i.asm=Oh,i.cwrap=Ae,i.PThread=ve,i.PThread=ve,i._pthread_self=Gs,i.wasmMemory=X,i.ExitStatus=AI;var fm;i.then=function(I){if(fm)I(i);else{var $=i.onRuntimeInitialized;i.onRuntimeInitialized=function(){$&&$(),I(i)}}return i};function AI(I){this.name="ExitStatus",this.message="Program terminated with exit("+I+")",this.status=I}Pl=function I(){fm||_b(),fm||(Pl=I)};function _b(I){if(I=I||c,Qi>0||(qn(),Qi>0))return;function $(){fm||(fm=!0,i.calledRun=!0,!le&&(_h(),gy(),i.onRuntimeInitialized&&i.onRuntimeInitialized(),xy()))}i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),$()},1)):$()}if(i.run=_b,i.preInit)for(typeof i.preInit=="function"&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();return x||(re=!0),x||_b(),e}}();typeof ux=="object"&&typeof E0=="object"?E0.exports=A0:typeof define=="function"&&define.amd?define([],function(){return A0}):typeof ux=="object"&&(ux.WasmBackendModuleThreadedSimd=A0)});var ZM=xt((cx,D0)=>{var $0=function(){var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(e){e=e||{};var t=typeof e!="undefined"?e:{},n={},o;for(o in t)t.hasOwnProperty(o)&&(n[o]=t[o]);var s=[],a="./this.program",i=function(H,se){throw se},l=!1,u=!1,c=!1,p=!1;l=typeof window=="object",u=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p=!l&&!c&&!u;var m="";function f(H){return t.locateFile?t.locateFile(H,m):m+H}var d,h,g,x,b,w;c?(u?m=Cp().dirname(m)+"/":m=__dirname+"/",d=function(se,_e){return b||(b=require("fs")),w||(w=Cp()),se=w.normalize(se),b.readFileSync(se,_e?null:"utf8")},g=function(se){var _e=d(se,!0);return _e.buffer||(_e=new Uint8Array(_e)),W(_e.buffer),_e},process.argv.length>1&&(a=process.argv[1].replace(/\\/g,"/")),s=process.argv.slice(2),process.on("uncaughtException",function(H){if(!(H instanceof am))throw H}),process.on("unhandledRejection",Ji),i=function(H){process.exit(H)},t.inspect=function(){return"[Emscripten Module object]"}):p?(typeof read!="undefined"&&(d=function(se){return read(se)}),g=function(se){var _e;return typeof readbuffer=="function"?new Uint8Array(readbuffer(se)):(_e=read(se,"binary"),W(typeof _e=="object"),_e)},typeof scriptArgs!="undefined"?s=scriptArgs:typeof arguments!="undefined"&&(s=arguments),typeof quit=="function"&&(i=function(H){quit(H)}),typeof print!="undefined"&&(typeof console=="undefined"&&(console={}),console.log=print,console.warn=console.error=typeof printErr!="undefined"?printErr:print)):(l||u)&&(u?m=self.location.href:document.currentScript&&(m=document.currentScript.src),r&&(m=r),m.indexOf("blob:")!==0?m=m.substr(0,m.lastIndexOf("/")+1):m="",d=function(se){var _e=new XMLHttpRequest;return _e.open("GET",se,!1),_e.send(null),_e.responseText},u&&(g=function(se){var _e=new XMLHttpRequest;return _e.open("GET",se,!1),_e.responseType="arraybuffer",_e.send(null),new Uint8Array(_e.response)}),h=function(se,_e,Xe){var Ye=new XMLHttpRequest;Ye.open("GET",se,!0),Ye.responseType="arraybuffer",Ye.onload=function(){if(Ye.status==200||Ye.status==0&&Ye.response){_e(Ye.response);return}Xe()},Ye.onerror=Xe,Ye.send(null)},x=function(H){document.title=H});var _=t.print||console.log.bind(console),k=t.printErr||console.warn.bind(console);for(o in n)n.hasOwnProperty(o)&&(t[o]=n[o]);n=null,t.arguments&&(s=t.arguments),t.thisProgram&&(a=t.thisProgram),t.quit&&(i=t.quit);var E;t.wasmBinary&&(E=t.wasmBinary);var T;t.noExitRuntime&&(T=t.noExitRuntime),typeof WebAssembly!="object"&&k("no native wasm support detected");var F,O=new WebAssembly.Table({initial:151,maximum:151+0,element:"anyfunc"}),M=!1,j=0;function W(H,se){H||Ji("Assertion failed: "+se)}function U(H){var se=t["_"+H];return W(se,"Cannot call unknown function "+H+", make sure it is exported"),se}function Y(H,se,_e,Xe,Ye){var Xt={string:function(yn){var Ja=0;if(yn!=null&&yn!==0){var Bh=(yn.length<<2)+1;Ja=im(Bh),ae(yn,Ja,Bh)}return Ja},array:function(yn){var Ja=im(yn.length);return ie(yn,Ja),Ja}};function lt(yn){return se==="string"?X(yn):se==="boolean"?Boolean(yn):yn}var st=U(H),br=[],ta=0;if(Xe)for(var ra=0;ra<Xe.length;ra++){var zh=Xt[_e[ra]];zh?(ta===0&&(ta=sm()),br[ra]=zh(Xe[ra])):br[ra]=Xe[ra]}var um=st.apply(null,br);return um=lt(um),ta!==0&&Ph(ta),um}function K(H,se,_e,Xe){_e=_e||[];var Ye=_e.every(function(lt){return lt==="number"}),Xt=se!=="string";return Xt&&Ye&&!Xe?U(H):function(){return Y(H,se,_e,arguments,Xe)}}var Z=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function re(H,se,_e){for(var Xe=se+_e,Ye=se;H[Ye]&&!(Ye>=Xe);)++Ye;if(Ye-se>16&&H.subarray&&Z)return Z.decode(H.subarray(se,Ye));for(var Xt="";se<Ye;){var lt=H[se++];if(!(lt&128)){Xt+=String.fromCharCode(lt);continue}var st=H[se++]&63;if((lt&224)==192){Xt+=String.fromCharCode((lt&31)<<6|st);continue}var br=H[se++]&63;if((lt&240)==224?lt=(lt&15)<<12|st<<6|br:lt=(lt&7)<<18|st<<12|br<<6|H[se++]&63,lt<65536)Xt+=String.fromCharCode(lt);else{var ta=lt-65536;Xt+=String.fromCharCode(55296|ta>>10,56320|ta&1023)}}return Xt}function X(H,se){return H?re(ge,H,se):""}function oe(H,se,_e,Xe){if(!(Xe>0))return 0;for(var Ye=_e,Xt=_e+Xe-1,lt=0;lt<H.length;++lt){var st=H.charCodeAt(lt);if(st>=55296&&st<=57343){var br=H.charCodeAt(++lt);st=65536+((st&1023)<<10)|br&1023}if(st<=127){if(_e>=Xt)break;se[_e++]=st}else if(st<=2047){if(_e+1>=Xt)break;se[_e++]=192|st>>6,se[_e++]=128|st&63}else if(st<=65535){if(_e+2>=Xt)break;se[_e++]=224|st>>12,se[_e++]=128|st>>6&63,se[_e++]=128|st&63}else{if(_e+3>=Xt)break;se[_e++]=240|st>>18,se[_e++]=128|st>>12&63,se[_e++]=128|st>>6&63,se[_e++]=128|st&63}}return se[_e]=0,_e-Ye}function ae(H,se,_e){return oe(H,ge,se,_e)}function ie(H,se){le.set(H,se)}var pe,le,ge,ye,be,ke,Ae,$e,Fe;function He(H){pe=H,t.HEAP8=le=new Int8Array(H),t.HEAP16=ye=new Int16Array(H),t.HEAP32=ke=new Int32Array(H),t.HEAPU8=ge=new Uint8Array(H),t.HEAPU16=be=new Uint16Array(H),t.HEAPU32=Ae=new Uint32Array(H),t.HEAPF32=$e=new Float32Array(H),t.HEAPF64=Fe=new Float64Array(H)}var ct=t.INITIAL_MEMORY||16777216;function kt(H){for(;H.length>0;){var se=H.shift();if(typeof se=="function"){se(t);continue}var _e=se.func;typeof _e=="number"?se.arg===void 0?t.dynCall_v(_e):t.dynCall_vi(_e,se.arg):_e(se.arg===void 0?null:se.arg)}}var Ct=[],ft=[],It=[],Ke=[],Ot=!1,hn=!1;function tr(){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;)xn(t.preRun.shift());kt(Ct)}function gn(){Ot=!0,kt(ft)}function kr(){kt(It)}function Gn(){hn=!0}function tn(){if(t.postRun)for(typeof t.postRun=="function"&&(t.postRun=[t.postRun]);t.postRun.length;)Cr(t.postRun.shift());kt(Ke)}function xn(H){Ct.unshift(H)}function Cr(H){Ke.unshift(H)}var An=Math.ceil,Un=Math.floor,rn=0,os=null,Dn=null;function yc(H){rn++,t.monitorRunDependencies&&t.monitorRunDependencies(rn)}function ss(H){if(rn--,t.monitorRunDependencies&&t.monitorRunDependencies(rn),rn==0&&(os!==null&&(clearInterval(os),os=null),Dn)){var se=Dn;Dn=null,se()}}t.preloadedImages={},t.preloadedAudios={};function Ji(H){throw t.onAbort&&t.onAbort(H),H+="",_(H),k(H),M=!0,j=1,H="abort("+H+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(H)}function Fl(H,se){return String.prototype.startsWith?H.startsWith(se):H.indexOf(se)===0}var hy="data:application/octet-stream;base64,";function Qp(H){return Fl(H,hy)}var wh="file://";function em(H){return Fl(H,wh)}var qn="tfjs-backend-wasm.wasm";Qp(qn)||(qn=f(qn));function _h(){try{if(E)return new Uint8Array(E);if(g)return g(qn);throw"both async and sync fetching of the wasm failed"}catch(H){Ji(H)}}function gy(){return!E&&(l||u)&&typeof fetch=="function"&&!em(qn)?fetch(qn,{credentials:"same-origin"}).then(function(H){if(!H.ok)throw"failed to load wasm binary file at '"+qn+"'";return H.arrayBuffer()}).catch(function(){return _h()}):new Promise(function(H,se){H(_h())})}function xy(){var H={env:ea,wasi_snapshot_preview1:ea};function se(lt,st){var br=lt.exports;t.asm=br,F=br.memory,He(F.buffer),ss("wasm-instantiate")}yc("wasm-instantiate");function _e(lt){se(lt.instance)}function Xe(lt){return gy().then(function(st){return WebAssembly.instantiate(st,H)}).then(lt,function(st){k("failed to asynchronously prepare wasm: "+st),Ji(st)})}function Ye(){if(!E&&typeof WebAssembly.instantiateStreaming=="function"&&!Qp(qn)&&!em(qn)&&typeof fetch=="function")fetch(qn,{credentials:"same-origin"}).then(function(lt){var st=WebAssembly.instantiateStreaming(lt,H);return st.then(_e,function(br){k("wasm streaming compile failed: "+br),k("falling back to ArrayBuffer instantiation"),Xe(_e)})});else return Xe(_e)}if(t.instantiateWasm)try{var Xt=t.instantiateWasm(H,se);return Xt}catch(lt){return k("Module.instantiateWasm callback failed with error: "+lt),!1}return Ye(),{}}ft.push();function yy(H){He(F.buffer)}var Ol={splitPath:function(H){var se=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return se.exec(H).slice(1)},normalizeArray:function(H,se){for(var _e=0,Xe=H.length-1;Xe>=0;Xe--){var Ye=H[Xe];Ye==="."?H.splice(Xe,1):Ye===".."?(H.splice(Xe,1),_e++):_e&&(H.splice(Xe,1),_e--)}if(se)for(;_e;_e--)H.unshift("..");return H},normalize:function(H){var se=H.charAt(0)==="/",_e=H.substr(-1)==="/";return H=Ol.normalizeArray(H.split("/").filter(function(Xe){return!!Xe}),!se).join("/"),!H&&!se&&(H="."),H&&_e&&(H+="/"),(se?"/":"")+H},dirname:function(H){var se=Ol.splitPath(H),_e=se[0],Xe=se[1];return!_e&&!Xe?".":(Xe&&(Xe=Xe.substr(0,Xe.length-1)),_e+Xe)},basename:function(H){if(H==="/")return"/";var se=H.lastIndexOf("/");return se===-1?H:H.substr(se+1)},extname:function(H){return Ol.splitPath(H)[3]},join:function(){var H=Array.prototype.slice.call(arguments,0);return Ol.normalize(H.join("/"))},join2:function(H,se){return Ol.normalize(H+"/"+se)}},bc={mappings:{},buffers:[null,[],[]],printChar:function(H,se){var _e=bc.buffers[H];se===0||se===10?((H===1?_:k)(re(_e,0)),_e.length=0):_e.push(se)},varargs:void 0,get:function(){bc.varargs+=4;var H=ke[bc.varargs-4>>2];return H},getStr:function(H){var se=X(H);return se},get64:function(H,se){return H}};function by(H){return 0}function Qi(H,se,_e,Xe,Ye){}function tm(H,se,_e,Xe){for(var Ye=0,Xt=0;Xt<_e;Xt++){for(var lt=ke[se+Xt*8>>2],st=ke[se+(Xt*8+4)>>2],br=0;br<st;br++)bc.printChar(H,ge[lt+br]);Ye+=st}return ke[Xe>>2]=Ye,0}function Pl(H){Mh(H)}function wy(H){Pl(H)}function _y(H){return H=+H,H>=0?+Un(H+.5):+An(H-.5)}var ea={emscripten_notify_memory_growth:yy,fd_close:by,fd_seek:Qi,fd_write:tm,proc_exit:wy,roundf:_y},rm=xy();t.asm=rm;var vy=t._init=function(){return(vy=t._init=t.asm.init).apply(null,arguments)},vh=t._register_tensor=function(){return(vh=t._register_tensor=t.asm.register_tensor).apply(null,arguments)},ky=t._dispose_data=function(){return(ky=t._dispose_data=t.asm.dispose_data).apply(null,arguments)},kh=t._dispose=function(){return(kh=t._dispose=t.asm.dispose).apply(null,arguments)},Hn=t._Abs=function(){return(Hn=t._Abs=t.asm.Abs).apply(null,arguments)},Ch=t._Add=function(){return(Ch=t._Add=t.asm.Add).apply(null,arguments)},Cy=t._AddN=function(){return(Cy=t._AddN=t.asm.AddN).apply(null,arguments)},Iy=t._ArgMax=function(){return(Iy=t._ArgMax=t.asm.ArgMax).apply(null,arguments)},Sy=t._AvgPool=function(){return(Sy=t._AvgPool=t.asm.AvgPool).apply(null,arguments)},Ny=t._BatchMatMul=function(){return(Ny=t._BatchMatMul=t.asm.BatchMatMul).apply(null,arguments)},Ih=t._ClipByValue=function(){return(Ih=t._ClipByValue=t.asm.ClipByValue).apply(null,arguments)},Sh=t._Conv2D=function(){return(Sh=t._Conv2D=t.asm.Conv2D).apply(null,arguments)},Nh=t._Conv2DBackpropInput=function(){return(Nh=t._Conv2DBackpropInput=t.asm.Conv2DBackpropInput).apply(null,arguments)},wc=t._Cos=function(){return(wc=t._Cos=t.asm.Cos).apply(null,arguments)},nm=t._CropAndResize=function(){return(nm=t._CropAndResize=t.asm.CropAndResize).apply(null,arguments)},_c=t._Cumsum=function(){return(_c=t._Cumsum=t.asm.Cumsum).apply(null,arguments)},vc=t._DepthToSpace=function(){return(vc=t._DepthToSpace=t.asm.DepthToSpace).apply(null,arguments)},Ty=t._DepthwiseConv2dNative=function(){return(Ty=t._DepthwiseConv2dNative=t.asm.DepthwiseConv2dNative).apply(null,arguments)},Ey=t._Equal=function(){return(Ey=t._Equal=t.asm.Equal).apply(null,arguments)},Ay=t._Exp=function(){return(Ay=t._Exp=t.asm.Exp).apply(null,arguments)},ve=t._FlipLeftRight=function(){return(ve=t._FlipLeftRight=t.asm.FlipLeftRight).apply(null,arguments)},Dy=t._Floor=function(){return(Dy=t._Floor=t.asm.Floor).apply(null,arguments)},$y=t._FloorDiv=function(){return($y=t._FloorDiv=t.asm.FloorDiv).apply(null,arguments)},Ry=t._FusedBatchNorm=function(){return(Ry=t._FusedBatchNorm=t.asm.FusedBatchNorm).apply(null,arguments)},Fy=t._FusedConv2D=function(){return(Fy=t._FusedConv2D=t.asm.FusedConv2D).apply(null,arguments)},Ml=t._FusedDepthwiseConv2D=function(){return(Ml=t._FusedDepthwiseConv2D=t.asm.FusedDepthwiseConv2D).apply(null,arguments)},Oy=t._Gather=function(){return(Oy=t._Gather=t.asm.Gather).apply(null,arguments)},Py=t._GatherNd=function(){return(Py=t._GatherNd=t.asm.GatherNd).apply(null,arguments)},My=t._Greater=function(){return(My=t._Greater=t.asm.Greater).apply(null,arguments)},Ly=t._GreaterEqual=function(){return(Ly=t._GreaterEqual=t.asm.GreaterEqual).apply(null,arguments)},zy=t._LeakyRelu=function(){return(zy=t._LeakyRelu=t.asm.LeakyRelu).apply(null,arguments)},By=t._Less=function(){return(By=t._Less=t.asm.Less).apply(null,arguments)},Vy=t._LessEqual=function(){return(Vy=t._LessEqual=t.asm.LessEqual).apply(null,arguments)},Wy=t._Log=function(){return(Wy=t._Log=t.asm.Log).apply(null,arguments)},jy=t._LogicalAnd=function(){return(jy=t._LogicalAnd=t.asm.LogicalAnd).apply(null,arguments)},Gy=t._Max=function(){return(Gy=t._Max=t.asm.Max).apply(null,arguments)},Ya=t._MaxPool=function(){return(Ya=t._MaxPool=t.asm.MaxPool).apply(null,arguments)},Ll=t._Maximum=function(){return(Ll=t._Maximum=t.asm.Maximum).apply(null,arguments)},kc=t._Mean=function(){return(kc=t._Mean=t.asm.Mean).apply(null,arguments)},Uy=t._Min=function(){return(Uy=t._Min=t.asm.Min).apply(null,arguments)},qy=t._Minimum=function(){return(qy=t._Minimum=t.asm.Minimum).apply(null,arguments)},Hy=t._Multiply=function(){return(Hy=t._Multiply=t.asm.Multiply).apply(null,arguments)},Ky=t._Neg=function(){return(Ky=t._Neg=t.asm.Neg).apply(null,arguments)},Qe=t._NonMaxSuppressionV3=function(){return(Qe=t._NonMaxSuppressionV3=t.asm.NonMaxSuppressionV3).apply(null,arguments)},Xy=t._NonMaxSuppressionV4=function(){return(Xy=t._NonMaxSuppressionV4=t.asm.NonMaxSuppressionV4).apply(null,arguments)},Yy=t._NonMaxSuppressionV5=function(){return(Yy=t._NonMaxSuppressionV5=t.asm.NonMaxSuppressionV5).apply(null,arguments)},Zy=t._NotEqual=function(){return(Zy=t._NotEqual=t.asm.NotEqual).apply(null,arguments)},Jy=t._OneHot=function(){return(Jy=t._OneHot=t.asm.OneHot).apply(null,arguments)},Qy=t._PadV2=function(){return(Qy=t._PadV2=t.asm.PadV2).apply(null,arguments)},eb=t._Pow=function(){return(eb=t._Pow=t.asm.Pow).apply(null,arguments)},om=t._Prelu=function(){return(om=t._Prelu=t.asm.Prelu).apply(null,arguments)},Th=t._Prod=function(){return(Th=t._Prod=t.asm.Prod).apply(null,arguments)},Eh=t._RealDiv=function(){return(Eh=t._RealDiv=t.asm.RealDiv).apply(null,arguments)},tb=t._Relu=function(){return(tb=t._Relu=t.asm.Relu).apply(null,arguments)},rb=t._Relu6=function(){return(rb=t._Relu6=t.asm.Relu6).apply(null,arguments)},nb=t._ResizeBilinear=function(){return(nb=t._ResizeBilinear=t.asm.ResizeBilinear).apply(null,arguments)},ob=t._Reverse=function(){return(ob=t._Reverse=t.asm.Reverse).apply(null,arguments)},sb=t._RotateWithOffset=function(){return(sb=t._RotateWithOffset=t.asm.RotateWithOffset).apply(null,arguments)},ib=t._Round=function(){return(ib=t._Round=t.asm.Round).apply(null,arguments)},nt=t._Rsqrt=function(){return(nt=t._Rsqrt=t.asm.Rsqrt).apply(null,arguments)},ab=t._ScatterNd=function(){return(ab=t._ScatterNd=t.asm.ScatterNd).apply(null,arguments)},lb=t._SelectV2=function(){return(lb=t._SelectV2=t.asm.SelectV2).apply(null,arguments)},ub=t._Sigmoid=function(){return(ub=t._Sigmoid=t.asm.Sigmoid).apply(null,arguments)},zl=t._Sin=function(){return(zl=t._Sin=t.asm.Sin).apply(null,arguments)},Cc=t._Softmax=function(){return(Cc=t._Softmax=t.asm.Softmax).apply(null,arguments)},Ah=t._Sqrt=function(){return(Ah=t._Sqrt=t.asm.Sqrt).apply(null,arguments)},Dh=t._Square=function(){return(Dh=t._Square=t.asm.Square).apply(null,arguments)},$h=t._SquaredDifference=function(){return($h=t._SquaredDifference=t.asm.SquaredDifference).apply(null,arguments)},cb=t._Step=function(){return(cb=t._Step=t.asm.Step).apply(null,arguments)},pb=t._StridedSlice=function(){return(pb=t._StridedSlice=t.asm.StridedSlice).apply(null,arguments)},Rh=t._Sub=function(){return(Rh=t._Sub=t.asm.Sub).apply(null,arguments)},mb=t._Sum=function(){return(mb=t._Sum=t.asm.Sum).apply(null,arguments)},Gs=t._Tanh=function(){return(Gs=t._Tanh=t.asm.Tanh).apply(null,arguments)},fb=t._Tile=function(){return(fb=t._Tile=t.asm.Tile).apply(null,arguments)},db=t._TopK=function(){return(db=t._TopK=t.asm.TopK).apply(null,arguments)},Fh=t._Transpose=function(){return(Fh=t._Transpose=t.asm.Transpose).apply(null,arguments)},Za=t.__FusedMatMul=function(){return(Za=t.__FusedMatMul=t.asm._FusedMatMul).apply(null,arguments)},hb=t._malloc=function(){return(hb=t._malloc=t.asm.malloc).apply(null,arguments)},gb=t._free=function(){return(gb=t._free=t.asm.free).apply(null,arguments)},Oh=t.__start=function(){return(Oh=t.__start=t.asm._start).apply(null,arguments)},sm=t.stackSave=function(){return(sm=t.stackSave=t.asm.stackSave).apply(null,arguments)},im=t.stackAlloc=function(){return(im=t.stackAlloc=t.asm.stackAlloc).apply(null,arguments)},Ph=t.stackRestore=function(){return(Ph=t.stackRestore=t.asm.stackRestore).apply(null,arguments)};t.asm=rm,t.cwrap=K;var Bl;t.then=function(H){if(Bl)H(t);else{var se=t.onRuntimeInitialized;t.onRuntimeInitialized=function(){se&&se(),H(t)}}return t};function am(H){this.name="ExitStatus",this.message="Program terminated with exit("+H+")",this.status=H}var xb=!1;Dn=function H(){Bl||lm(),Bl||(Dn=H)};function yb(H){var se=t.__start;try{se();var _e=0;Mh(_e,!0)}catch(Ye){if(Ye instanceof am)return;if(Ye=="unwind"){T=!0;return}else{var Xe=Ye;Ye&&typeof Ye=="object"&&Ye.stack&&(Xe=[Ye,Ye.stack]),k("exception thrown: "+Xe),i(1,Ye)}}finally{xb=!0}}function lm(H){if(H=H||s,rn>0||(tr(),rn>0))return;function se(){Bl||(Bl=!0,t.calledRun=!0,!M&&(gn(),kr(),t.onRuntimeInitialized&&t.onRuntimeInitialized(),Lh&&yb(H),tn()))}t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),se()},1)):se()}t.run=lm;function Mh(H,se){se&&T&&H===0||(T||(M=!0,j=H,Gn(),t.onExit&&t.onExit(H)),i(H,new am(H)))}if(t.preInit)for(typeof t.preInit=="function"&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();var Lh=!0;return t.noInitialRun&&(Lh=!1),T=!0,lm(),e}}();typeof cx=="object"&&typeof D0=="object"?D0.exports=$0:typeof define=="function"&&define.amd?define([],function(){return $0}):typeof cx=="object"&&(cx.WasmBackendModule=$0)});var Uz=xt((Gz,lI)=>{(function(r,e,t){function n(i){var l=this,u=a();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(i),l.s0<0&&(l.s0+=1),l.s1-=u(i),l.s1<0&&(l.s1+=1),l.s2-=u(i),l.s2<0&&(l.s2+=1),u=null}function o(i,l){return l.c=i.c,l.s0=i.s0,l.s1=i.s1,l.s2=i.s2,l}function s(i,l){var u=new n(i),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function a(){var i=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){i+=u.charCodeAt(c);var p=.02519603282416938*i;i=p>>>0,p-=i,p*=i,i=p>>>0,p-=i,i+=p*4294967296}return(i>>>0)*23283064365386963e-26};return l}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.alea=s})(Gz,typeof lI=="object"&&lI,typeof define=="function"&&define)});var Hz=xt((qz,uI)=>{(function(r,e,t){function n(a){var i=this,l="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var c=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^c^c>>>8},a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor128=s})(qz,typeof uI=="object"&&uI,typeof define=="function"&&define)});var Xz=xt((Kz,cI)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(c^c<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:l+=a;for(var u=0;u<l.length+64;u++)i.x^=l.charCodeAt(u)|0,u==l.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorwow=s})(Kz,typeof cI=="object"&&cI,typeof define=="function"&&define)});var Zz=xt((Yz,pI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.x,c=i.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,i.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xorshift7=s})(Yz,typeof pI=="object"&&pI,typeof define=="function"&&define)});var Qz=xt((Jz,mI)=>{(function(r,e,t){function n(a){var i=this;i.next=function(){var u=i.w,c=i.X,p=i.i,m,f;return i.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,i.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,h,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=h,u.X=g,u.i=f}l(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.xor4096=s})(Jz,typeof mI=="object"&&mI,typeof define=="function"&&define)});var t3=xt((e3,fI)=>{(function(r,e,t){function n(a){var i=this,l="";i.next=function(){var c=i.b,p=i.c,m=i.d,f=i.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,i.b=c=c<<20^c>>>12^p,i.c=p=p-m|0,i.d=m<<16^p>>>16^f,i.a=f-c|0},i.a=0,i.b=0,i.c=2654435769|0,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)i.b^=l.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var l=new n(a),u=i&&i.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}e&&e.exports?e.exports=s:t&&t.amd?t(function(){return s}):this.tychei=s})(e3,typeof fI=="object"&&fI,typeof define=="function"&&define)});var n3=xt((r3,ay)=>{(function(r,e,t){var n=256,o=6,s=52,a="random",i=t.pow(n,o),l=t.pow(2,s),u=l*2,c=n-1,p;function m(w,_,k){var E=[];_=_==!0?{entropy:!0}:_||{};var T=g(h(_.entropy?[w,b(e)]:w==null?x():w,3),E),F=new f(E),O=function(){for(var M=F.g(o),j=i,W=0;M<l;)M=(M+W)*n,j*=n,W=F.g(1);for(;M>=u;)M/=2,j/=2,W>>>=1;return(M+W)/j};return O.int32=function(){return F.g(4)|0},O.quick=function(){return F.g(4)/4294967296},O.double=O,g(b(F.S),e),(_.pass||k||function(M,j,W,U){return U&&(U.S&&d(U,F),M.state=function(){return d(F,{})}),W?(t[a]=M,j):M})(O,T,"global"in _?_.global:this==t,_.state)}function f(w){var _,k=w.length,E=this,T=0,F=E.i=E.j=0,O=E.S=[];for(k||(w=[k++]);T<n;)O[T]=T++;for(T=0;T<n;T++)O[T]=O[F=c&F+w[T%k]+(_=O[T])],O[F]=_;(E.g=function(M){for(var j,W=0,U=E.i,Y=E.j,K=E.S;M--;)j=K[U=c&U+1],W=W*n+K[c&(K[U]=K[Y=c&Y+j])+(K[Y]=j)];return E.i=U,E.j=Y,W})(n)}function d(w,_){return _.i=w.i,_.j=w.j,_.S=w.S.slice(),_}function h(w,_){var k=[],E=typeof w,T;if(_&&E=="object")for(T in w)try{k.push(h(w[T],_-1))}catch(F){}return k.length?k:E=="string"?w:w+"\0"}function g(w,_){for(var k=w+"",E,T=0;T<k.length;)_[c&T]=c&(E^=_[c&T]*19)+k.charCodeAt(T++);return b(_)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(w)),b(w)}catch(E){var _=r.navigator,k=_&&_.plugins;return[+new Date,r,k,r.screen,b(e)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(t.random(),e),typeof ay=="object"&&ay.exports){ay.exports=m;try{p=ug()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return m}):t["seed"+a]=m})(typeof self!="undefined"?self:r3,[],Math)});var dI=xt((sLt,o3)=>{var pre=Uz(),mre=Hz(),fre=Xz(),dre=Zz(),hre=Qz(),gre=t3(),xc=n3();xc.alea=pre;xc.xor128=mre;xc.xorwow=fre;xc.xorshift7=dre;xc.xor4096=hre;xc.tychei=gre;o3.exports=xc});var $3=xt(()=>{});var RI="2.8.5";var FI="2.8.5";var OI="2.8.5";var PI="2.8.5";var MI="2.8.5";var lV=1e-7,uV=1e-4,el=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Us=class{decComplexRef(e){}time(e){return J("time")}read(e){return J("read")}readSync(e){return J("readSync")}numDataIds(){return J("numDataIds")}disposeData(e){return J("disposeData")}write(e,t,n){return J("write")}move(e,t,n,o){return J("move")}memory(){return J("memory")}floatPrecision(){return J("floatPrecision")}epsilon(){return this.floatPrecision()===32?lV:uV}batchMatMul(e,t,n,o){return J("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:o,bias:s,activation:a,preluActivationWeights:i}){return J("fusedBatchMatMul")}slice(e,t,n){return J("slice")}stridedSlice(e,t,n,o){return J("stridedSlice")}unstack(e,t){return J("unstack")}reverse(e,t){return J("reverse")}concat(e,t){return J("concat")}neg(e){return J("neg")}add(e,t){return J("add")}addN(e){return J("addN")}subtract(e,t){return J("subtract")}multiply(e,t){return J("multiply")}realDivide(e,t){return J("realDivide")}floorDiv(e,t){return J("floorDiv")}sum(e,t){return J("sum")}prod(e,t){return J("prod")}unsortedSegmentSum(e,t,n){return J("unsortedSegmentSum")}argMin(e,t){return J("argMin")}argMax(e,t){return J("argMax")}equal(e,t){return J("equal")}notEqual(e,t){return J("notEqual")}less(e,t){return J("less")}lessEqual(e,t){return J("lessEqual")}greater(e,t){return J("greater")}greaterEqual(e,t){return J("greaterEqual")}logicalNot(e){return J("logicalNot")}logicalAnd(e,t){return J("logicalAnd")}logicalOr(e,t){return J("logicalOr")}where(e){return J("where")}select(e,t,n){return J("select")}topk(e,t,n){return J("topk")}min(e,t){return J("min")}minimum(e,t){return J("minimum")}mod(e,t){return J("mod")}max(e,t){return J("max")}maximum(e,t){return J("maximum")}all(e,t){return J("all")}any(e,t){return J("any")}squaredDifference(e,t){return J("squaredDifference")}ceil(e){return J("ceil")}floor(e){return J("floor")}round(e){return J("round")}sign(e){return J("sign")}isNaN(e){return J("isNaN")}isInf(e){return J("isInf")}isFinite(e){return J("isFinite")}pow(e,t){return J("pow")}exp(e){return J("exp")}expm1(e){return J("expm1")}softmax(e,t){return J("softmax")}log(e){return J("log")}log1p(e){return J("log1p")}sqrt(e){return J("sqrt")}rsqrt(e){return J("rsqrt")}square(e){return J("square")}reciprocal(e){return J("reciprocal")}relu(e){return J("relu")}relu6(e){return J("relu6")}prelu(e,t){return J("prelu")}elu(e){return J("elu")}eluDer(e,t){return J("eluDer")}selu(e){return J("selu")}int(e){return J("int")}clip(e,t,n){return J("clip")}abs(e){return J("abs")}complexAbs(e){return J("complexAbs")}sigmoid(e){return J("sigmoid")}softplus(e){return J("softplus")}sin(e){return J("sin")}cos(e){return J("cos")}tan(e){return J("tan")}asin(e){return J("asin")}acos(e){return J("acos")}atan(e){return J("atan")}atan2(e,t){return J("atan2")}sinh(e){return J("sinh")}cosh(e){return J("cosh")}tanh(e){return J("tanh")}asinh(e){return J("asinh")}acosh(e){return J("acosh")}atanh(e){return J("atanh")}erf(e){return J("erf")}step(e,t){return J("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:o,activation:s,preluActivationWeights:a}){return J("fusedConv2d")}conv2d(e,t,n){return J("conv2d")}conv2dDerInput(e,t,n){return J("conv2dDerInput")}conv2dDerFilter(e,t,n){return J("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:o,activation:s,preluActivationWeights:a}){return J("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return J("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return J("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return J("depthwiseConv2DDerFilter")}conv3d(e,t,n){return J("conv3d")}conv3dDerInput(e,t,n){return J("conv3dDerInput")}conv3dDerFilter(e,t,n){return J("conv3dDerFilter")}maxPool(e,t){return J("maxPool")}maxPoolBackprop(e,t,n,o){return J("maxPoolBackprop")}avgPool(e,t){return J("avgPool")}avgPoolBackprop(e,t,n){return J("avgPoolBackprop")}avgPool3d(e,t){return J("avgPool3d")}avgPool3dBackprop(e,t,n){return J("avgPool3dBackprop")}maxPool3d(e,t){return J("maxPool3d")}maxPool3dBackprop(e,t,n,o){return J("maxPool3dBackprop")}reshape(e,t){return J("reshape")}cast(e,t){return J("cast")}tile(e,t){return J("tile")}pad(e,t,n){return J("pad")}transpose(e,t){return J("transpose")}gather(e,t,n,o=0){return J("gather")}gatherND(e,t){return J("gatherND")}scatterND(e,t,n){return J("scatterND")}batchToSpaceND(e,t,n){return J("batchToSpaceND")}spaceToBatchND(e,t,n){return J("spaceToBatchND")}resizeBilinear(e,t,n,o,s){return J("resizeBilinear")}resizeBilinearBackprop(e,t,n){return J("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,o,s){return J("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return J("resizeNearestNeighborBackprop")}batchNorm(e,t,n,o,s,a){return J("batchNorm")}localResponseNormalization4D(e,t,n,o,s){return J("localResponseNormalization4D")}LRNGrad(e,t,n,o,s,a,i){return J("LRNGrad")}multinomial(e,t,n,o){return J("multinomial")}oneHot(e,t,n,o){return J("oneHot")}cumsum(e,t,n,o){return J("cumsum")}nonMaxSuppression(e,t,n,o,s){return J("nonMaxSuppression")}fft(e){return J("fft")}ifft(e){return J("ifft")}complex(e,t){return J("complex")}real(e){return J("real")}imag(e){return J("imag")}cropAndResize(e,t,n,o,s,a){return J("cropAndResize")}depthToSpace(e,t,n){return J("depthToSpace")}split(e,t,n){return J("split")}sparseToDense(e,t,n,o){return J("sparseToDense")}diag(e){return J("diag")}fill(e,t,n){return J("fill")}onesLike(e){return J("onesLike")}zerosLike(e){return J("zerosLike")}linspace(e,t,n){return J("linspace")}dispose(){return J("dispose")}};function J(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function LI(r){let e=r.length,t=0,n=0;for(;e>0;)n=Math.random()*e|0,e--,t=r[e],r[e]=r[n],r[n]=t}function Ac(r,e,t){return Math.max(r,Math.min(e,t))}function cV(r){return r%2==0?r:r+1}function pV(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function mV(r,e){let t=Math.random();return e*t+(1-t)*r}function fV(r,e){let t=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(e[n]);t+=o*o}return t}function A(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function We(r,e,t=""){A(Gr(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function $n(r){A(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function is(r,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(r)||sr(r)&&!t)for(let n=0;n<r.length;++n)is(r[n],e,t);else e.push(r);return e}function ht(r){if(r.length===0)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function dV(r){return r.length===0}function Gr(r,e){if(r===e)return!0;if(r==null||e==null||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function it(r){return r%1==0}function hV(r){if(Math.tanh!=null)return Math.tanh(r);if(r===Infinity)return 1;if(r===-Infinity)return-1;{let e=Math.exp(2*r);return(e-1)/(e+1)}}function gV(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function xV(r){let e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return LI(e),e}function Vl(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function yV(r,e=n=>0,t){return new Promise((n,o)=>{let s=0,a=()=>{if(r()){n();return}s++;let i=e(s);if(t!=null&&s>=t){o();return}setTimeout(a,i)};a()})}function bV(r,e){let t=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)t*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(t===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);let o=r.slice();return o[n]=e/t,o}function rr(r,e){let t=e.length;return r=r==null?e.map((n,o)=>o):[].concat(r),A(r.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),A(r.every(n=>it(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?t+n:n)}function Cb(r,e){let t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,s=e==null||o?null:rr(e,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(t.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(t.push(r[i]),n.push(i))}return{newShape:t,keptDims:n}}function Ib(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Sb(r,e){let t=null;if(r==null||r==="float32")t=new Float32Array(e);else if(r==="int32")t=new Int32Array(e);else if(r==="bool")t=new Uint8Array(e);else if(r==="string")t=new Array(e);else throw new Error(`Unknown data type ${r}`);return t}function Nb(r,e){for(let t=0;t<r.length;t++){let n=r[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function Tb(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function Eb(r,e){return!(e==="complex64"||e==="float32"&&r!=="complex64"||e==="int32"&&r!=="float32"&&r!=="complex64"||e==="bool"&&r==="bool")}function sr(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array}function Ab(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function Db(r){if(r==null)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function as(r){return typeof r=="string"||r instanceof String}function zI(r){return typeof r=="boolean"}function BI(r){return typeof r=="number"}function Dc(r){return Array.isArray(r)?Dc(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array?"int32":BI(r)?"float32":as(r)?"string":zI(r)?"bool":"float32"}function qs(r){return!!(r&&r.constructor&&r.call&&r.apply)}function $c(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function Hs(r){let e=r.length;if(e<2)return[];let t=new Array(e-1);t[e-2]=r[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*r[n+1];return t}function VI(r,e,t){let n=new Array;if(e.length===1){let o=e[0];for(let s=0;s<o;s++)n[s]=t[r+s]}else{let o=e[0],s=e.slice(1),a=s.reduce((i,l)=>i*l);for(let i=0;i<o;i++)n[i]=VI(r+i*a,s,t)}return n}function Wl(r,e){if(r.length===0)return e[0];let t=r.reduce((n,o)=>n*o);if(t===0)return[];if(t!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}.`);return VI(0,r,e)}function gm(r,e){let t=Rc(r,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function Rc(r,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function wV(r,e){let t=r.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return Wl(r,new Float32Array(t));if(e==="int32")return Wl(r,new Int32Array(t));if(e==="bool")return Wl(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function xm(r){r.forEach(e=>{A(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function _V(r,e,t){if(e===0)return 0;if(e===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=t[o]*r[o];return n}function vV(r,e,t){if(e===0)return[];if(e===1)return[r];let n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/t[o]),r-=n[o]*t[o];return n[n.length-1]=r,n}function ym(r){return r&&r.then&&typeof r.then=="function"}var WI="tfjsflags",Wh=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let o=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ym(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=kV(this.global.location.search);WI in e&&e[WI].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=CV(o,s)})}};function kV(r){let e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(IV(e,n[0],n[1]),n.join("="))),e}function IV(r,e,t){r[decodeURIComponent(e)]=decodeURIComponent(t||"")}function CV(r,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${r}.`)}function G(){return $b}var $b=null;function jI(r){$b=r}var Rb;function Fb(){if(Rb==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");Rb=r}return Rb}function SV(){let r=Fb();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function Ob(r,e){let t=SV();if(t.has(r))return t.get(r);{let n=e();return t.set(r,n),t.get(r)}}var ls="Abs",Ks="Acos",Xs="Acosh",wn="Add",Kn="AddN",jl="All",Gl="Any",Xn="ArgMax",na="ArgMin",Ys="Asin",Zs="Asinh",Js="Atan",Qs="Atanh",ei="Atan2",Yn="AvgPool",Ul="AvgPoolGrad",oa="AvgPool3D",ql="AvgPool3DGrad",Zn="BatchMatMul",sa="BatchToSpaceND",Hl="Bincount",Pb="BroadcastTo",Rn="Cast",ti="Ceil",Fn="ClipByValue",Kl="Complex",ia="ComplexAbs",us="Concat",Jn="Conv2D",Xl="Conv2DBackpropFilter",Qn="Conv2DBackpropInput",aa="Conv3D",Yl="Conv3DBackpropFilterV2",Zl="Conv3DBackpropInputV2",eo="Cos",ri="Cosh",to="Cumsum",ni="CropAndResize",Jl="DenseBincount",oi="DepthToSpace",ro="DepthwiseConv2dNative",Ql="DepthwiseConv2dNativeBackpropFilter",eu="DepthwiseConv2dNativeBackpropInput",tu="Diag",la="Dilation2D",Fc="Dilation2DBackpropInput",Oc="Dilation2DBackpropFilter",no="RealDiv",si="Elu",ru="EluGrad",ii="Erf",ai="Equal",oo="Exp",cs="ExpandDims",li="Expm1",nu="FFT",ua="Fill",ui="FlipLeftRight",so="Floor",io="FloorDiv",ao="FusedBatchNorm",ps="GatherV2",ci="GatherNd",pi="Greater",lo="GreaterEqual",ms="Identity",ou="IFFT",su="Imag",mi="IsFinite",fi="IsInf",di="IsNan",uo="LeakyRelu",hi="Less",gi="LessEqual",iu="LinSpace",co="Log",xi="Log1p",yi="LogicalAnd",tl="LogicalNot",rl="LogicalOr",Mb="LogSoftmax",ca="LRN",au="LRNGrad",po="Max",mo="Maximum",fo="MaxPool",lu="MaxPoolGrad",pa="MaxPool3D",uu="MaxPool3DGrad",cu="MaxPoolWithArgmax",ho="Mean",go="Min",xo="Minimum",ma="MirrorPad",bi="Mod",pu="Multinomial",yo="Multiply",fs="Neg",wi="NotEqual",_i="NonMaxSuppressionV3",vi="NonMaxSuppressionV4",ki="NonMaxSuppressionV5",ds="OnesLike",bo="OneHot",hs="Pack",wo="PadV2",NV="Pool",_o="Pow",vo="Prelu",Ci="Prod",fa="Range",mu="Real",Ii="Reciprocal",ko="Relu",gs="Reshape",da="ResizeNearestNeighbor",fu="ResizeNearestNeighborGrad",Co="ResizeBilinear",du="ResizeBilinearGrad",Io="Relu6",So="Reverse",No="Round",To="Rsqrt",Si="ScatterNd",xs="Select",Ni="Selu",ys="Slice",Eo="Sin",Ti="Sinh",Ei="Sign",Ao="Sigmoid",Ai="Softplus",Do="Sqrt",$o="Sum",ha="SpaceToBatchND",bs="SplitV",Ro="Softmax",Fo="SquaredDifference",ga="Square",Oo="Sub",hu="SparseToDense",Di="StridedSlice",$i="Tan",Po="Tanh",_n="Tile",Ri="TopK",Mo="Transpose",gu="Unique",ws="Unpack",xa="UnsortedSegmentSum",_s="ZerosLike",On="Step",Pc="FromPixels",Fi="RotateWithOffset",vs="_FusedMatMul",ks="FusedConv2D",Cs="FusedDepthwiseConv2D";var Mc=Ob("kernelRegistry",()=>new Map),bm=Ob("gradRegistry",()=>new Map);function wm(r,e){let t=Lb(r,e);return Mc.get(t)}function jh(r){return bm.get(r)}function _m(r){let e=Mc.entries(),t=[];for(;;){let{done:n,value:o}=e.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&t.push(a)}return t}function nl(r){let{kernelName:e,backendName:t}=r,n=Lb(e,t);Mc.has(n)&&console.warn(`The kernel '${e}' for backend '${t}' is already registered`),Mc.set(n,r)}function zb(r){let{kernelName:e}=r;bm.has(e)&&G().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),bm.set(e,r)}function TV(r,e){let t=Lb(r,e);if(!Mc.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);Mc.delete(t)}function EV(r){if(!bm.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);bm.delete(r)}function AV(r,e){_m(r).forEach(n=>{let o=Object.assign({},n,{backendName:e});nl(o)})}function Lb(r,e){return`${e}_${r}`}var y={};Ze(y,{arraysEqual:()=>Gr,assert:()=>A,assertNonNegativeIntegerDimensions:()=>xm,assertNonNull:()=>$n,assertShapesMatch:()=>We,bytesFromStringArray:()=>Db,bytesPerElement:()=>Ab,checkConversionForErrors:()=>Nb,clamp:()=>Ac,computeStrides:()=>Hs,createScalarValue:()=>DV,createShuffledIndices:()=>xV,decodeString:()=>zc,distSquared:()=>fV,encodeString:()=>ol,fetch:()=>RV,flatten:()=>is,getArrayFromDType:()=>Sb,getTypedArrayFromDType:()=>Ib,hasEncodingLoss:()=>Eb,indexToLoc:()=>vV,inferDtype:()=>Dc,inferFromImplicitShape:()=>bV,isBoolean:()=>zI,isFunction:()=>qs,isInt:()=>it,isNumber:()=>BI,isPromise:()=>ym,isScalarShape:()=>dV,isString:()=>as,isTypedArray:()=>sr,isValidDtype:()=>Tb,locToIndex:()=>_V,makeOnesTypedArray:()=>gm,makeZerosNestedTypedArray:()=>wV,makeZerosTypedArray:()=>Rc,nearestDivisor:()=>$c,nearestLargerEven:()=>cV,now:()=>Gh,parseAxisParam:()=>rr,randUniform:()=>mV,repeatedTry:()=>yV,rightPad:()=>Vl,shuffle:()=>LI,sizeFromShape:()=>ht,sizeToSquarishShape:()=>gV,squeezeShape:()=>Cb,sum:()=>pV,tanh:()=>hV,toNestedArray:()=>Wl,toTypedArray:()=>Lc});function DV(r,e){return e==="string"?ol(r):Lc([r],e)}function $V(r,e){return r instanceof Float32Array&&e==="float32"||r instanceof Int32Array&&e==="int32"||r instanceof Uint8Array&&e==="bool"}function Lc(r,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=is(r)),G().getBool("DEBUG")&&Nb(r,e),$V(r,e))return r;if(e==null||e==="float32"||e==="complex64")return new Float32Array(r);if(e==="int32")return new Int32Array(r);if(e==="bool"){let t=new Uint8Array(r.length);for(let n=0;n<t.length;++n)Math.round(r[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Gh(){return G().platform.now()}function RV(r,e){return G().platform.fetch(r,e)}function ol(r,e="utf-8"){return e=e||"utf-8",G().platform.encode(r,e)}function zc(r,e="utf-8"){return e=e||"utf-8",G().platform.decode(r,e)}var Bb=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new GI)}profileKernel(e,t,n){let o,s=()=>{o=n()},a=this.backendTimer.time(s);if(G().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let u=o[l];u.data().then(c=>{FV(c,u.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:o,inputs:s,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(l=>{this.logger.logKernelProfile(t,i,l[0],l[1],s,l[2])})})}};function FV(r,e,t){if(e!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}var GI=class{logKernelProfile(e,t,n,o,s,a){let i=typeof o=="number"?Vl(`${o}ms`,9):o.error,l=Vl(e,25),u=t.rank,c=t.size,p=Vl(t.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||t.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${l}	%c${i}	%c${u}D ${p}	%c${c}	%c${m}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function UI(r,e,t){let n={},o={};for(let l=0;l<e.length;l++)n[e[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let m=c[p],f=!1;for(let d=0;d<e.length;d++)if(n[m.id]){u.outputs.forEach(h=>n[h.id]=!0),f=!0,o[u.id]=!0;break}if(f)break}}let s={};s[t.id]=!0;let a={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let m in c)s[c[m].id]=!0,a[u.id]=!0;break}}let i=[];for(let l=0;l<r.length;l++){let u=r[l];if(o[u.id]&&a[u.id]){let c={};for(let m in u.inputs){let f=u.inputs[m];n[f.id]&&(c[m]=f)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,i.push(p)}}return i}function qI(r,e,t,n){for(let o=e.length-1;o>=0;o--){let s=e[o],a=[];if(s.outputs.forEach(l=>{let u=r[l.id];u!=null?a.push(u):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let l in s.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);let u=t(()=>i[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!Gr(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=n(p,u),p.dispose()}}}}var HI=20,vm=3,Vb=7;function KI(r,e,t,n){let o=Hs(e),s=OV(r,e,t,o),a=e.length,i=Uh(r,e,t,o,s),l=["Tensor"];return n&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join(`
`)),l.join(`
`)}function OV(r,e,t,n){let o=ht(e),s=n[n.length-1],a=new Array(s).fill(0),i=e.length,l=t==="complex64"?Cm(r):r;if(i>1)for(let u=0;u<o/s;u++){let c=u*s;for(let p=0;p<s;p++)a[p]=Math.max(a[p],km(l[c+p],0,t).length)}return a}function km(r,e,t){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(Vb))} + ${parseFloat(r[1].toFixed(Vb))}j`:as(r)?n=`'${r}'`:t==="bool"?n=XI(r):n=parseFloat(r.toFixed(Vb)).toString(),Vl(n,e)}function XI(r){return r===0?"false":"true"}function Uh(r,e,t,n,o,s=!0){let a=t==="complex64"?2:1,i=e[0],l=e.length;if(l===0){if(t==="complex64"){let h=Cm(r);return[km(h[0],0,t)]}return t==="bool"?[XI(r[0])]:[r[0].toString()]}if(l===1){if(i>HI){let g=vm*a,x=Array.from(r.slice(0,g)),b=Array.from(r.slice((i-vm)*a,i*a));return t==="complex64"&&(x=Cm(x),b=Cm(b)),["["+x.map((w,_)=>km(w,o[_],t)).join(", ")+", ..., "+b.map((w,_)=>km(w,o[i-vm+_],t)).join(", ")+"]"]}let h=t==="complex64"?Cm(r):Array.from(r);return["["+h.map((g,x)=>km(g,o[x],t)).join(", ")+"]"]}let u=e.slice(1),c=n.slice(1),p=n[0]*a,m=[];if(i>HI){for(let h=0;h<vm;h++){let g=h*p,x=g+p;m.push(...Uh(r.slice(g,x),u,t,c,o,!1))}m.push("...");for(let h=i-vm;h<i;h++){let g=h*p,x=g+p;m.push(...Uh(r.slice(g,x),u,t,c,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*p,x=g+p;m.push(...Uh(r.slice(g,x),u,t,c,o,h===i-1))}let f=l===2?",":"";m[0]="["+m[0]+f;for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<l;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function Cm(r){let e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}var pt=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ht(e),n!=null){let o=n.length;A(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Sb(t,this.size),this.strides=Hs(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let o of e){if(o<0||o>=this.shape[t]){let s=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(s)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Oi().makeTensor(this.values,this.shape,this.dtype)}},Oi=null,Bc=null,PV=null;function YI(r){Oi=r}function ZI(r){Bc=r}function JI(r){PV=r}var R=class{constructor(e,t,n,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ht(e),this.strides=Hs(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Bc.buffer(this.shape,this.dtype,e)}bufferSync(){return Bc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Wl(this.shape,e)}arraySync(){return Wl(this.shape,this.dataSync())}async data(){this.throwIfDisposed();let e=Oi().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>zc(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();let e=Oi().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>zc(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Oi().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Oi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Bc.print(this,e)}clone(){return this.throwIfDisposed(),Bc.clone(this)}toString(e=!1){let t=this.dataSync();return KI(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Bc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Oi().makeVariable(this,e,t,n)}};Object.defineProperty(R,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});var sl=class extends R{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o);this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Gr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Oi().disposeTensor(this),this.dataId=e.dataId,Oi().incRef(this,null)}dispose(){Oi().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(sl,Symbol.hasInstance,{value:r=>r instanceof R&&r.assign!=null&&r.assign instanceof Function});var Lo={};Ze(Lo,{assertTypesMatch:()=>Hb,getTensorsInContainer:()=>Im,isTensorInList:()=>LV,makeTypesMatch:()=>je});var Wb;(function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"})(Wb||(Wb={}));var jb;(function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"})(jb||(jb={}));var Gb;(function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"})(Gb||(Gb={}));var Ub;(function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"})(Ub||(Ub={}));var qb;(function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"})(qb||(qb={}));var MV={float32:Ub,int32:jb,bool:Gb,complex64:qb};function dr(r,e){if(r==="string"||e==="string"){if(r==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return MV[r][e]}function xu(r){return dr(r,"int32")}function je(r,e){if(r.dtype===e.dtype)return[r,e];let t=dr(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Hb(r,e){A(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function LV(r,e){return e.some(t=>t.id===r.id)}function Im(r){let e=[],t=new Set;return QI(r,e,t),e}function QI(r,e,t){if(r==null)return;if(r instanceof R){e.push(r);return}if(!zV(r))return;let n=r;for(let o in n){let s=n[o];t.has(s)||(t.add(s),QI(s,e,t))}}function zV(r){return Array.isArray(r)||typeof r=="object"}var Kb=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},yu=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Kb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Bb(this.backendInstance),!0}setupRegisteredKernels(){_m(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){_m(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof Us)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),o=n.backend,s=this.readSync(t);o.disposeData(t),n.backend=e,e.move(t,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{let o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return yu.nextTensorId++}nextVariableId(){return yu.nextVariableId++}clone(e){let t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e},o=a=>({x:()=>{let i="float32",l={x:a},u={dtype:i};return D.runKernelFunc(c=>c.cast(a,i),l,null,Rn,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,s,{}),t}runKernel(e,t,n,o,s){let a=null,i=null;return this.runKernelFunc(a,t,i,e,n,o,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let o=this.backend.numDataIds(),s=0;n.forEach(l=>{s+=l.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,o,s,a,i){let l,u=[],c=this.isTapeOn();o==null&&(o=this.state.activeScope!=null?this.state.activeScope.name:"");let p=this.state.numBytes,m=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let f;this.backendName==null&&this.backend;let d=wm(o,this.backendName),h;if(d!=null)f=()=>{let x=this.backend.numDataIds();h=d.kernelFunc({inputs:t,attrs:s,backend:this.backend});let b=Array.isArray(h)?h:[h];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(o,x,b);let w=b.map(_=>{if(_.rank!=null)return _;let{dataId:k,shape:E,dtype:T}=_;return this.makeTensorFromDataId(k,E,T)});if(c){let _=this.getTensorsForGradient(o,t,w);if(_==null){i==null&&(i=[]);let k=w.filter((E,T)=>i[T]);_=(a||[]).slice().concat(k)}u=this.saveTensorsForBackwardMode(_)}return w};else{if(e==null)throw new Error(`Error running ${o}: Neither modular kernel nor forward func passed`);let x=b=>{!c||(u=b.map(w=>this.keep(this.clone(w))))};f=()=>{let b=this.backend.numDataIds();h=this.tidy(()=>e(this.backend,x));let w=Array.isArray(h)?h:[h];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(o,b,w),w}}let g;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?l=f():(g=this.profiler.profileKernel(o,t,()=>f()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),l=g.outputs)}),c&&this.addTapeNode(o,t,l,n,u,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:o,bytesAdded:this.state.numBytes-p,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-m,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(x=>t[x]!=null?t[x].shape:null),outputShapes:l.map(x=>x.shape),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(h)?l:l[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let o=jh(e);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=s.map(u=>t[u]);let l=n.filter((u,c)=>a[c]);return i.concat(l)}return null}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=e;n==="string"&&as(e[0])&&(s=e.map(l=>ol(l)));let a=o.write(s,t,n),i=new R(t,n,a,this.nextTensorId());if(this.incRef(i,o),n==="string"){let l=this.state.tensorInfo.get(a),u=Db(s);this.state.numBytes+=u-l.bytes,l.bytes=u}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";let s=new R(t,n,e,this.nextTensorId());return this.incRef(s,o),s}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));let s=new sl(e,t,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(e,t){let n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++,n===0){this.state.numDataBuffers++;let o=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(o=e.size*Ab(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:o,refCount:0}),this.state.numBytes+=o}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof sl||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,e.dtype==="string"&&this.state.numStringTensors--;let t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?(e.dtype!=="complex64"&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},l=jh(e);l!=null&&(o=l.gradFunc),o!=null&&(i.gradient=u=>(u=u.map((c,p)=>{if(c==null){let m=n[p],f=Rc(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return c}),o(u.length>1?u:u[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Im(e),n=new Set(t.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(e,t,n,o=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(s instanceof R,()=>"The result y returned by f() must be a tensor.");let a=UI(this.state.activeTape,t,s);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n==null?BV(s.shape):n,qI(i,a,u=>this.tidy(u),VV);let l=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let c of u.saved)c.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(e){return A(qs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(s=>s instanceof R),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};return t.forEach((s,a)=>{o[a]=s}),this.runKernelFunc((s,a)=>(n=e(...t,a),A(n.value instanceof R,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(qs(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),o,(s,a)=>{let i=n.gradFunc(s,a),l=Array.isArray(i)?i:[i];A(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(l.every(c=>c instanceof R),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let u={};return l.forEach((c,p)=>{u[p]=()=>c}),u})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){let t=Gh(),n=await this.backend.time(e);return n.wallMs=Gh()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Kb;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};yu.nextTensorId=0;yu.nextVariableId=0;function BV(r){let e=gm(ht(r),"float32");return D.makeTensor(e,r,"float32")}function Xb(){let r=Fb();if(r._tfengine==null){let e=new Wh(r);r._tfengine=new yu(e)}return jI(r._tfengine.ENV),YI(()=>r._tfengine),r._tfengine}var D=Xb();function VV(r,e){let t={a:r,b:e};return D.runKernel(wn,t)}var Vc={};Ze(Vc,{isBrowser:()=>Yb,isMobile:()=>jV});function WV(){return typeof navigator!="undefined"&&navigator!=null}function jV(){if(WV()){let r=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(r)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(r.substr(0,4))}return!1}function Yb(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Pi=G();Pi.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Pi.registerFlag("IS_BROWSER",()=>Yb());Pi.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Pi.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Pi.registerFlag("PROD",()=>!1);Pi.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Pi.getBool("DEBUG"));Pi.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Pi.registerFlag("IS_TEST",()=>!1);Pi.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);function Ir(r,e){let t=r;if(sr(r))return e==="string"?[]:[r.length];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(t)||sr(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(r)&&G().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&eS(r,n,[]),n}function eS(r,e,t){if(t=t||[],!Array.isArray(r)&&!sr(r)){A(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}A(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),A(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);let n=e.slice(1);for(let o=0;o<r.length;++o)eS(r[o],n,t.concat(o))}function tS(r,e,t,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==e||r==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${r} tensor, but got ${e} tensor`)}}function v(r,e,t,n="numeric"){if(r instanceof R)return tS(n,r.dtype,e,t),r;let o=Dc(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),tS(n,o,e,t),r==null||!sr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}let s=Ir(r,o);!sr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?Lc(r,o):is(r,[],!0);return D.makeTensor(i,s,o)}function ya(r,e,t,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>v(s,`${e}[${a}]`,t,n))}var rS="__op";function S(r){let e=Object.keys(r);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0],n=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+rS;let o=(...s)=>{D.startScope(t);try{let a=n(...s);return ym(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}function GV(r,e){let t=v(r,"real","complex"),n=v(e,"imag","complex");We(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:t,imag:n};return D.runKernel(Kl,o)}var vn=S({complex_:GV});function Ur(r,e,t,n){if(n==null&&(n=Dc(r)),n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!sr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){xm(e);let o=ht(e),s=ht(t);A(o===s,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<t.length;++a){let i=t[a],l=a===t.length-1?i!==ht(e.slice(a)):!0;A(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!sr(r)&&!Array.isArray(r)&&(r=[r]),e=e||t,r=n!=="string"?Lc(r,n):is(r,[],!0),D.makeTensor(r,e,n)}function Or(r,e,t){let n=Ir(r,t);return Ur(r,e,n,t)}var Sm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var qh=4;async function nS(r,e){let t=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],l=Array.isArray(r)?r[a].tensor:r[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);let u={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let m=await l.bytes(),f=m.reduce((g,x)=>g+x.length,0)+qh*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let x=m[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);d.set(b,h),h+=qh,d.set(x,h),h+=x.length}p(d)});n.push(c)}else n.push(l.data());e!=null&&(u.group=e),t.push(u)}let s=await Promise.all(n);return{data:UV(s),specs:t}}function Hh(r,e){let t={},n,o=0;for(let s of e){let a=s.name,i=s.dtype,l=s.shape,u=ht(l),c;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(i!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${i}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=Sm[p.dtype],f=r.slice(o,o+u*m),d=p.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(i==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=g*p.scale+p.min}}else if(p.dtype==="float16")n===void 0&&(n=qV()),c=n(d);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(i==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*m}else if(i==="string"){let p=ht(s.shape);c=[];for(let m=0;m<p;m++){let f=new Uint32Array(r.slice(o,o+qh))[0];o+=qh;let d=new Uint8Array(r.slice(o,o+f));c.push(d),o+=f}}else{let p=Sm[i],m=r.slice(o,o+u*p);if(i==="float32")c=new Float32Array(m);else if(i==="int32")c=new Int32Array(m);else if(i==="bool")c=new Uint8Array(m);else if(i==="complex64"){c=new Float32Array(m);let f=new Float32Array(c.length/2),d=new Float32Array(c.length/2);for(let x=0;x<f.length;x++)f[x]=c[x*2],d[x]=c[x*2+1];let h=Or(f,l,"float32"),g=Or(d,l,"float32");t[a]=vn(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${a}': ${i}`);o+=u*p}i!=="complex64"&&(t[a]=Or(c,l,i))}return t}function UV(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0,t=[];r.forEach(s=>{if(e+=s.byteLength,t.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(e),o=0;return t.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var Zb=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function oS(r){return Zb?Buffer.byteLength(r):new Blob([r]).size}function sS(r){if(Zb)return Buffer.from(r).toString("base64");let e=new Uint8Array(r),t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function iS(r){if(Zb){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let e=atob(r),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function Wc(r){if(r.length===1)return r[0];let e=0;r.forEach(o=>{e+=o.byteLength});let t=new Uint8Array(e),n=0;return r.forEach(o=>{t.set(new Uint8Array(o),n),n+=o.byteLength}),t.buffer}function Jb(r){let e="/";for(r=r.trim();r.endsWith(e);)r=r.slice(0,r.length-1);let t=r.split(e);return t[t.length-1]}function Mi(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:oS(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:oS(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function HV(){let r=t=>{let n=t<<13,o=0;for(;(n&8388608)==0;)o-=8388608,n<<=1;return n&=~8388608,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=r(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function KV(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let e=1;e<31;e++)r[e]=e<<23;for(let e=33;e<63;e++)r[e]=2147483648+(e-32<<23);return r}function XV(){let r=new Uint32Array(64);for(let e=0;e<64;e++)r[e]=1024;return r[0]=r[32]=0,r}function qV(){let r=HV(),e=KV(),t=XV();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],l=r[t[i>>10]+(i&1023)]+e[i>>10];s[a]=l}return new Float32Array(o)}}var Tt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Tt.instance==null&&(Tt.instance=new Tt),Tt.instance}static registerSaveRouter(e){Tt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Tt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Tt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Tt.getHandlers(e,"load",t)}static getHandlers(e,t,n){let o=[];return(t==="load"?Tt.getInstance().loadRouters:Tt.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&o.push(i)}),o}},aS=r=>Tt.registerSaveRouter(r),lS=r=>Tt.registerLoadRouter(r),uS=r=>Tt.getSaveHandlers(r),cS=(r,e)=>Tt.getLoadHandlers(r,e);var Qb="tensorflowjs",ew=1,bu="models_store",il="model_info_store";function pS(){if(!G().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function tw(r){let e=r.result;e.createObjectStore(bu,{keyPath:"modelPath"}),e.createObjectStore(il,{keyPath:"modelPath"})}var ba=class{constructor(e){if(this.indexedDB=pS(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{let s=this.indexedDB.open(Qb,ew);s.onupgradeneeded=()=>tw(s),s.onsuccess=()=>{let a=s.result;if(t==null){let i=a.transaction(bu,"readonly"),u=i.objectStore(bu).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=c=>(a.close(),o(u.error)),i.oncomplete=()=>a.close()}else{let i=Mi(t),l=a.transaction(il,"readwrite"),u=l.objectStore(il),c=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),p;c.onsuccess=()=>{p=a.transaction(bu,"readwrite");let f=p.objectStore(bu).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});f.onsuccess=()=>n({modelArtifactsInfo:i}),f.onerror=d=>{u=l.objectStore(il);let h=u.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(f.error)),h.onerror=g=>(a.close(),o(f.error))}},c.onerror=m=>(a.close(),o(c.error)),l.oncomplete=()=>{p==null?a.close():p.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};ba.URL_SCHEME="indexeddb://";var mS=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ba.URL_SCHEME)?YV(r.slice(ba.URL_SCHEME.length)):null;Tt.registerSaveRouter(mS);Tt.registerLoadRouter(mS);function YV(r){return new ba(r)}function ZV(r){return r.startsWith(ba.URL_SCHEME)?r.slice(ba.URL_SCHEME.length):r}var rw=class{constructor(){this.indexedDB=pS()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Qb,ew);n.onupgradeneeded=()=>tw(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(il,"readonly"),i=s.objectStore(il).getAll();i.onsuccess=()=>{let l={};for(let u of i.result)l[u.modelPath]=u.modelArtifactsInfo;e(l)},i.onerror=l=>(o.close(),t(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=ZV(e),new Promise((t,n)=>{let o=this.indexedDB.open(Qb,ew);o.onupgradeneeded=()=>tw(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(il,"readwrite"),i=a.objectStore(il),l=i.get(e),u;l.onsuccess=()=>{if(l.result==null)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let c=i.delete(e),p=()=>{u=s.transaction(bu,"readwrite");let f=u.objectStore(bu).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=d=>n(l.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),n(l.error))}},l.onerror=c=>(s.close(),n(l.error)),a.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var wa="/",jc="tensorflowjs_models",fS="info",JV="model_topology",QV="weight_specs",eW="weight_data",tW="model_metadata";function dS(r){return{info:[jc,r,fS].join(wa),topology:[jc,r,JV].join(wa),weightSpecs:[jc,r,QV].join(wa),weightData:[jc,r,eW].join(wa),modelMetadata:[jc,r,tW].join(wa)}}function rW(r){let e=r.split(wa);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(wa)}function nW(r){return r.startsWith(_a.URL_SCHEME)?r.slice(_a.URL_SCHEME.length):r}var _a=class{constructor(e){if(!G().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=dS(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=Mi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,sS(e.weightData));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(s.signature=e.signature),e.userDefinedMetadata!=null&&(s.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch(s){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=iS(a),t}};_a.URL_SCHEME="localstorage://";var hS=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(_a.URL_SCHEME)?oW(r.slice(_a.URL_SCHEME.length)):null;Tt.registerSaveRouter(hS);Tt.registerLoadRouter(hS);function oW(r){return new _a(r)}var nw=class{constructor(){A(G().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=jc+wa,n=wa+fS;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(t)&&s.endsWith(n)){let a=rW(s);e[a]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=nW(e);let t=dS(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),n}};var Gc="://",qr=class{constructor(){this.managers={}}static getInstance(){return qr.instance==null&&(qr.instance=new qr),qr.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Gc)&&(e=e.slice(0,e.indexOf(Gc))),A(e.length>0,()=>"scheme must not be an empty string.");let n=qr.getInstance();A(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Kh(r){if(r.indexOf(Gc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${qr.getSchemes().join(",")}`);return{scheme:r.split(Gc)[0],path:r.split(Gc)[1]}}async function gS(r,e,t=!1){A(r!==e,()=>`Old path and new path are the same: '${r}'`);let n=Tt.getLoadHandlers(r);A(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),A(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Tt.getSaveHandlers(e);A(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),A(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);let a=s[0],i=Kh(r).scheme,l=Kh(r).path,u=i===Kh(r).scheme,c=await o.load();t&&u&&await qr.getManager(i).removeModel(l);let p=await a.save(c);return t&&!u&&await qr.getManager(i).removeModel(l),p.modelArtifactsInfo}async function xS(){let r=qr.getSchemes(),e={};for(let t of r){let n=await qr.getManager(t).listModels();for(let o in n){let s=t+Gc+o;e[s]=n[o]}}return e}async function yS(r){let e=Kh(r);return qr.getManager(e.scheme).removeModel(e.path)}async function bS(r,e){return gS(r,e,!1)}async function wS(r,e){return gS(r,e,!0)}var _S=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(G().get("IS_BROWSER")){G().setPlatform("browser",new _S);try{qr.registerManager(_a.URL_SCHEME,new nw)}catch(r){}try{qr.registerManager(ba.URL_SCHEME,new rw)}catch(r){}}var sW={importFetch:()=>vS()},ow;var kS=class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return G().global.fetch!=null?G().global.fetch(e,t):(ow==null&&(ow=sW.importFetch()),ow(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};G().get("IS_NODE")&&G().setPlatform("node",new kS);function Ie(r,e="float32",t){return e=e||"float32",xm(r),new pt(r,e,t)}function iW(r,e){let t=v(r,"x","cast");if(!Tb(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:t},o={dtype:e};return D.runKernel(Rn,n,o)}var ne=S({cast_:iW});function aW(r){let t={x:v(r,"x","clone","string_or_numeric")};return D.runKernel(ms,t)}var Pn=S({clone_:aW});function sw(r,e=!1){console.log(r.toString(e))}Xb();var lW={buffer:Ie,cast:ne,clone:Pn,print:sw};ZI(lW);var Sr={};Ze(Sr,{browserFiles:()=>SS,browserHTTPRequest:()=>ES,concatenateArrayBuffers:()=>Wc,copyModel:()=>bS,decodeWeights:()=>Hh,encodeWeights:()=>nS,fromMemory:()=>DS,getLoadHandlers:()=>cS,getModelArtifactsInfoForJSON:()=>Mi,getSaveHandlers:()=>uS,http:()=>Zh,isHTTPScheme:()=>Yh,listModels:()=>xS,loadWeights:()=>NS,moveModel:()=>wS,registerLoadRouter:()=>lS,registerSaveRouter:()=>aS,removeModel:()=>yS,weightsLoaderFactory:()=>lw,withSaveHandler:()=>$S});var uW="model",cW=".json",pW=".weights.bin";function CS(r){return new Promise(e=>setTimeout(e)).then(r)}var al=class{constructor(e){if(!G().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(al.URL_SCHEME)&&(e=e.slice(al.URL_SCHEME.length)),(e==null||e.length===0)&&(e=uW),this.modelTopologyFileName=e+cW,this.weightDataFileName=e+pW}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(o.signature=e.signature),e.userDefinedMetadata!=null&&(o.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(o.modelInitializer=e.modelInitializer);let s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await CS(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await CS(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Mi(e)}}}};al.URL_SCHEME="downloads://";var IS=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){let e=this.files[0],t=this.files.slice(1);return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=JSON.parse(a.target.result),l=i.modelTopology;if(l==null){o(new Error(`modelTopology field is missing from file ${e.name}`));return}t.length===0&&n({modelTopology:l});let u=i.weightsManifest;if(u==null){o(new Error(`weightManifest field is missing from file ${e.name}`));return}let c;try{c=this.checkManifestAndWeightFiles(u,t)}catch(d){o(d);return}let p=[],m=[],f=[];u.forEach(d=>{d.paths.forEach(h=>{m.push(h),f.push(null)}),p.push(...d.weights)}),u.forEach(d=>{d.paths.forEach(h=>{let g=new FileReader;g.onload=x=>{let b=x.target.result,w=m.indexOf(h);if(f[w]=b,f.indexOf(null)===-1){let _={modelTopology:l,weightSpecs:p,weightData:Wc(f),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy};i.signature!=null&&(_.signature=i.signature),i.userDefinedMetadata!=null&&(_.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(_.modelInitializer=i.modelInitializer),n(_)}},g.onerror=x=>o(`Failed to weights data from file of path '${h}'.`),g.readAsArrayBuffer(c[h])})})},s.onerror=a=>o(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)})}checkManifestAndWeightFiles(e,t){let n=[],o=t.map(a=>Jb(a.name)),s={};for(let a of e)a.paths.forEach(i=>{let l=Jb(i);if(n.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(n.push(l),o.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);s[i]=t[o.indexOf(l)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}},fW=r=>G().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(al.URL_SCHEME)?mW(r.slice(al.URL_SCHEME.length)):null;Tt.registerSaveRouter(fW);function mW(r="model"){return new al(r)}function SS(r){return new IS(r)}function iw(r,e,t,n){a(r),t=t==null?0:t,n=n==null?1:n,i(t,n);let o=0,s=l=>(l.then(u=>{let c=t+ ++o/r.length*(n-t);return e(c),u}),l);function a(l){A(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,u){A(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),A(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),A(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(s))}async function aw(r,e){e==null&&(e={});let t=e.fetchFunc==null?G().platform.fetch:e.fetchFunc,n=r.map(p=>t(p,e.requestInit,{isBinary:!0})),o=0,s=.5,i=(e.onProgress==null?await Promise.all(n):await iw(n,e.onProgress,o,s)).map(p=>p.arrayBuffer()),l=.5,u=1;return e.onProgress==null?await Promise.all(i):await iw(i,e.onProgress,l,u)}async function NS(r,e="",t,n){return lw(a=>aw(a,{requestInit:n}))(r,e,t)}function lw(r){return async(e,t="",n)=>{let o=e.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let x="quantization"in g?g.quantization.dtype:g.dtype,b=Sm[x]*ht(g.shape),w=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:b})};n!=null?n.forEach((_,k)=>{_===g.name&&(w(),a[k]=!0)}):w(),i.push(g.name),h+=b})}),!a.every(f=>f)){let f=n.filter((d,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let l=o.reduce((f,d,h)=>(d&&f.push(h),f),[]),u=[];l.forEach(f=>{e[f].paths.forEach(d=>{let h=t+(t.endsWith("/")?"":"/")+d;u.push(h)})});let c=await r(u),p={},m=0;return l.forEach(f=>{let d=e[f].paths.length,h=0;for(let _=0;_<d;_++)h+=c[m+_].byteLength;let g=new ArrayBuffer(h),x=new Uint8Array(g),b=0;for(let _=0;_<d;_++){let k=new Uint8Array(c[m+_]);x.set(k,b),b+=k.byteLength}s[f].forEach(_=>{let k=g.slice(_.groupOffset,_.groupOffset+_.sizeBytes),E=Hh(k,[_.manifestEntry]);for(let T in E)p[T]=E[T]}),m+=d}),p}}var dW="application/octet-stream",hW="application/json",Xh=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(A(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=G().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};e.signature!=null&&(o.signature=e.signature),e.userDefinedMetadata!=null&&(o.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(o.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(o)],{type:hW}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:dW}),"model.weights.bin");let s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Mi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(d){let h=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?h+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":h+=" Please make sure the server is serving valid JSON for this request.",new Error(h)}let n=t.modelTopology,o=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,l=t.signature,u=t.userDefinedMetadata;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,p;o!=null&&([c,p]=await this.loadWeights(o));let m={modelTopology:n,weightSpecs:c,weightData:p,generatedBy:s,convertedBy:a,format:i};l!=null&&(m.signature=l),u!=null&&(m.userDefinedMetadata=u);let f=t.modelInitializer;return f&&(m.modelInitializer=f),m}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=gW(t),s=this.weightPathPrefix||n,a=[];for(let c of e)a.push(...c.weights);let i=[],l=[];for(let c of e)for(let p of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(p)):i.push(s+p+o);this.weightUrlConverter&&i.push(...await Promise.all(l));let u=await aw(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,Wc(u)]}};Xh.URL_SCHEME_REGEX=/^https?:\/\//;function gW(r){let e=r.lastIndexOf("/"),t=r.lastIndexOf("?"),n=r.substring(0,e),o=t>e?r.substring(t):"";return[n+"/",o]}function Yh(r){return r.match(Xh.URL_SCHEME_REGEX)!=null}var TS=(r,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(r)?t=r.every(n=>Yh(n)):t=Yh(r),t)return Zh(r,e)}return null};Tt.registerSaveRouter(TS);Tt.registerLoadRouter(TS);function Zh(r,e){return new Xh(r,e)}function ES(r,e){return Zh(r,e)}var Jh=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},AS=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function DS(r,e,t,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Jh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Jh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Jh({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:n}))}function $S(r){return new AS(r)}var RS={};Ze(RS,{confusionMatrix:()=>_W});function xW(r,e,t=!1,n=!1){let o=v(r,"a","matMul"),s=v(e,"b","matMul");[o,s]=je(o,s);let a={a:o,b:s},i={transposeA:t,transposeB:n};return D.runKernel(Zn,a,i)}var Ge=S({matMul_:xW});function yW(r,e,t=1,n=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s={indices:v(r,"indices","oneHot","int32")},a={depth:e,onValue:t,offValue:n};return D.runKernel(bo,s,a)}var Is=S({oneHot_:yW});function bW(r,e){let t=v(r,"x","transpose");if(e==null&&(e=t.shape.map((s,a)=>a).reverse()),A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(s=>{A(s>=0&&s<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();let n={x:t},o={perm:e};return D.runKernel(Mo,n,o)}var Ue=S({transpose_:bW});function wW(r,e,t){let n=v(r,"labels","confusionMatrix"),o=v(e,"predictions","confusionMatrix");A(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),A(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),A(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),A(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),A(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);let s=Is(ne(n,"int32"),t),a=Is(ne(o,"int32"),t),i=Ue(s),l=Ge(i,a);return ne(l,"int32")}var _W=S({confusionMatrix_:wW});var Qh={};Ze(Qh,{fromPixels:()=>CW,toPixels:()=>kW});function uw(r,e,t){if($n(r),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Ir(r,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ur(r,e,n,t)}var Uc;function vW(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)t=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(o){let d=2;if(o&&r.readyState<d)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(wm(Pc,D.backendName)!=null){let d={pixels:r},h={numChannels:e};return D.runKernel(Pc,d,h)}let[u,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;a?p=r.getContext("2d").getImageData(0,0,u,c).data:n||t?p=r.data:(s||o||i)&&(Uc==null&&(Uc=document.createElement("canvas").getContext("2d")),Uc.canvas.width=u,Uc.canvas.height=c,Uc.drawImage(r,0,0,u,c),p=Uc.getImageData(0,0,u,c).data);let m;if(e===4)m=new Int32Array(p);else{let d=u*c;m=new Int32Array(d*e);for(let h=0;h<d;h++)for(let g=0;g<e;++g)m[h*e+g]=p[h*4+g]}return uw(m,[c,u,e],"int32")}async function kW(r,e){let t=v(r,"img","toPixels");if(!(r instanceof R)){let u=t;t=ne(u,"int32"),u.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);let[n,o]=t.shape.slice(0,2),s=t.rank===2?1:t.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);let a=await t.data(),i=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(o*n*4);for(let u=0;u<n*o;++u){let c=[0,0,0,255];for(let m=0;m<s;m++){let f=a[u*s+m];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(c[0]=f*i,c[1]=f*i,c[2]=f*i):c[m]=f*i}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(e!=null){e.width=o,e.height=n;let u=e.getContext("2d"),c=new ImageData(l,o,n);u.putImageData(c,0,0)}return t!==r&&t.dispose(),l}var CW=S({fromPixels_:vW});var eg={};Ze(eg,{prepareAndValidate:()=>FS});function FS(r,e){let t=r.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(ht(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=e.shape,s=o[o.length-1],a=1;for(let p=0;p<o.length-1;++p)a*=o[p];let i=r.shape,l=o.slice();l.pop();let u=1;for(let p=s;p<t;++p)u*=i[p],l.push(i[p]);let c=[...Hs(r.shape).map(p=>p/u),1].slice(0,s);return[l,a,u,c]}var tg={};Ze(tg,{calculateShapes:()=>OS,validateInput:()=>rg,validateUpdateShape:()=>cw});function cw(r,e,t){let n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(t.rank-o))throw new Error(s+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(s+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function rg(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}cw(t,e,r)}function OS(r,e,t){let n=e.shape.length,o=n>1?e.shape[n-1]:1,s=t.length,a=1;for(let p=o;p<s;++p)a*=t[p];let i=o<1?1:o,l=ht(e.shape)/i,u=[...Hs(t.slice(0,o)),1],c=ht(t);return{sliceRank:o,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}var ir={};Ze(ir,{assertParamsValid:()=>IW,computeFlatOffset:()=>NW,computeOutShape:()=>PS,getNormalizedAxes:()=>US,isSliceContinous:()=>SW,maskToAxes:()=>ng,parseSliceParams:()=>pw,sliceInfo:()=>TW,startForAxis:()=>jS,startIndicesWithElidedDims:()=>BS,stopForAxis:()=>GS,stopIndicesWithElidedDims:()=>VS,stridesForAxis:()=>WS,stridesWithElidedDims:()=>MS});function IW(r,e,t){let n=r.shape.length;A(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),A(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)A(e[o]+t[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function ng(r){let e=[],t=0;for(;r>0;)r&1&&e.push(t),r/=2,t++;return e}function PS(r,e,t){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((e[o]-r[o])/t[o]);return n}function MS(r,e,t,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<t;s++)s===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function LS(r,e,t){return t<=r?t:t-(e-1)}function zS(r,e){let t=[];for(let n=0;n<r;n++)t.push(e+n);return t}function US(r,e,t,n,o,s,a,i,l){let u=r.length,c=new Array(u),p=new Array(u),m=new Array(u);if(e.length&&t>0){let f=e[0],d=t+1;c=BS(a,f,d,n,r),p=VS(i,f,d,o,r),m=MS(s,f,d,r)}else for(let f=0;f<u;f++)c[f]=jS(a,n,s,r,f,l),p[f]=GS(i,o,s,r,f,l),m[f]=WS(s,f,l);return{begin:c,end:p,strides:m}}function BS(r,e,t,n,o){let s=[...o],a=zS(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let l=LS(e,t,i),u=n[l];r&1<<l&&(u=0),s[i]=u}return s}function VS(r,e,t,n,o){let s=[...o],a=zS(t,e);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let l=LS(e,t,i),u=n[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[i]=u}for(let i=0;i<s.length;i++){let l=o[i];s[i]<0&&(s[i]+=l),s[i]=Ac(0,s[i],o[i])}return s}function WS(r,e,t){let n=r[e];return(t&1<<e||n==null)&&(n=1),n}function jS(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let l=n[o];return a<0&&(a+=l),a=Ac(0,a,l-1),a}function GS(r,e,t,n,o,s){let a=e[o],i=t[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let l=n[o];return a<0&&(a+=l),i>0?a=Ac(0,a,l):a=Ac(-1,a,l-1),a}function SW(r,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==r[o])return!1;return!0}function NW(r,e){let t=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)t+=r[n]*e[n];return t}function pw(r,e,t){let n,o=r.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{A(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return t==null?s=new Array(o).fill(-1):typeof t=="number"?s=[t,...new Array(o-1).fill(-1)]:t.length<o?s=t.concat(new Array(o-t.length).fill(-1)):s=t,s=s.map((a,i)=>a>=0?a:(A(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function TW(r,e,t,n,o,s,a,i,l){let u=e.slice(),c=t.slice(),p=n;n==null&&(p=new Array(u.length));let m=ng(a);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(a!==0&&i!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(a!==0&&l!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let f=r.length-u.length,d=ng(i),h=r.slice();d.forEach(T=>{u[T]=0,c[T]=1,h.splice(T,0,1)});let{begin:g,end:x,strides:b}=US(h,m,f,u,c,p,o,s,a);u=g,c=x,p=b;let w=ng(l);w.forEach(T=>{c[T]=u[T]+1,p[T]=1});let _=PS(u,c,p),k=_.filter((T,F)=>w.indexOf(F)===-1);return{nonStrided:p.every(T=>T===1),$begin:u,$end:c,$strides:p,size:_,newShape:h,outShape:k}}var ee={};Ze(ee,{Serializable:()=>og,SerializationMap:()=>va,registerClass:()=>nn});var og=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},va=class{constructor(){this.classNameMap={}}static getMap(){return va.instance==null&&(va.instance=new va),va.instance}static register(e){va.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function nn(r){A(r.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),A(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),va.register(r)}var qS={};Ze(qS,{TEST_EPSILON_FLOAT16:()=>HS,encodeStrings:()=>KS,expectArrayBuffersEqual:()=>OW,expectArraysClose:()=>AW,expectArraysEqual:()=>$W,expectNumbersClose:()=>RW,expectPromiseToFail:()=>DW,expectValuesInRange:()=>FW,testEpsilon:()=>mw});var EW=.001,HS=.1;function AW(r,e,t){return t==null&&(t=mw()),fw(r,e,(n,o)=>dw(n,o,t))}function mw(){return D.backend.floatPrecision()===32?EW:HS}function fw(r,e,t){let n=!0;if((sr(r)||sr(e))&&(n=!1),sr(r)&&sr(e)&&(n=!0),n){let a=r.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(e)){let a=Ir(r),i=Ir(e);if(!Gr(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=sr(r)?r:is(r),s=sr(e)?e:is(e);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],l=s[a];if(!t(i,l))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${l}.
Actual:   ${o}.
Expected: ${s}.`)}}function DW(r,e){r().then(()=>e.fail(),()=>e())}function $W(r,e){let t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return as(r)||as(r[0])||as(e)||as(e[0])?fw(r,t,(n,o)=>n==o):fw(r,e,(n,o)=>dw(n,o,0))}function RW(r,e,t){if(t==null&&(t=mw()),!dw(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function dw(r,e,t){return!isFinite(r)&&!isFinite(e)?!0:!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function FW(r,e,t){for(let n=0;n<r.length;n++)if(r[n]<e||r[n]>t)throw new Error(`Value out of range:${r[n]} low: ${e}, high: ${t}`)}function OW(r,e){expect(new Float32Array(r)).toEqual(new Float32Array(e))}function KS(r){for(let e=0;e<r.length;e++){let t=r[e];Array.isArray(t)?KS(t):r[e]=ol(t)}return r}var PW="2.8.5";function MW(){G().set("PROD",!0)}function LW(){G().set("DEBUG",!0)}function zW(){G().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Pt(r){G().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}JI(Pt);function BW(){D.disposeVariables()}function Ss(){return D}function qc(){return D.memory()}function VW(r){return D.profile(r)}function V(r,e){return D.tidy(r,e)}function De(r){Im(r).forEach(t=>t.dispose())}function Dt(r){return D.keep(r)}function WW(r){return D.time(r)}function XS(r){return D.setBackend(r)}function jW(){return D.ready()}function GW(){return D.backendName}function UW(r){D.removeBackend(r)}function qW(r){return D.findBackend(r)}function HW(r){return D.findBackendFactory(r)}function wu(r,e,t=1){return D.registerBackend(r,e,t)}function hw(){return D.backend}function KW(r,e){G().setPlatform(r,e)}function XW(r,e){let t=v(r,"a","add"),n=v(e,"b","add");[t,n]=je(t,n);let o={a:t,b:n};return D.runKernel(wn,o)}var Q=S({add_:XW});function YW(r,e){let t=v(r,"a","floorDiv"),n=v(e,"b","floorDiv");[t,n]=je(t,n);let o={a:t,b:n};return D.runKernel(io,o)}var _u=S({floorDiv_:YW});function ZW(r,e){let t=v(r,"a","div"),n=v(e,"b","div");if([t,n]=je(t,n),t.dtype==="int32"&&n.dtype==="int32")return _u(t,n);let o={a:t,b:n},s={};return D.runKernel(no,o,s)}var fe=S({div_:ZW});function JW(r,e){let t=v(r,"a","mul"),n=v(e,"b","mul");[t,n]=je(t,n);let o={a:t,b:n};return D.runKernel(yo,o)}var P=S({mul_:JW});function QW(r){let e=v(r,"x","abs");if(e.dtype==="complex64"){let t={x:e};return D.runKernel(ia,t)}else{let t={x:e};return D.runKernel(ls,t)}}var Et=S({abs_:QW});function ej(r){let t={x:v(r,"x","acos")};return D.runKernel(Ks,t)}var Nm=S({acos_:ej});function tj(r){let t={x:v(r,"x","acosh")};return D.runKernel(Xs,t)}var Tm=S({acosh_:tj});function rj(r){A(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),A(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let e=r.map((o,s)=>v(o,`tensors${s}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Gr(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=e;return D.runKernel(Kn,n)}var gw=S({addN_:rj});function nj(r,e=null,t=!1){let o={x:v(r,"x","all","bool")},s={axis:e,keepDims:t};return D.runKernel(jl,o,s)}var vu=S({all_:nj});function oj(r,e=null,t=!1){let o={x:v(r,"x","any","bool")},s={axis:e,keepDims:t};return D.runKernel(Gl,o,s)}var ll=S({any_:oj});function sj(r,e=0){let n={x:v(r,"x","argMax")},o={axis:e};return D.runKernel(Xn,n,o)}var ul=S({argMax_:sj});function ij(r,e=0){let n={x:v(r,"x","argMin")},o={axis:e};return D.runKernel(na,n,o)}var Em=S({argMin_:ij});function aj(r){let t={x:v(r,"x","asin")};return D.runKernel(Ys,t)}var Am=S({asin_:aj});function lj(r){let t={x:v(r,"x","asinh")};return D.runKernel(Zs,t)}var Dm=S({asinh_:lj});function uj(r){let t={x:v(r,"x","atan")};return D.runKernel(Js,t)}var $m=S({atan_:uj});function cj(r,e){let t=v(r,"a","atan2"),n=v(e,"b","atan2");[t,n]=je(t,n);let o={a:t,b:n};return D.runKernel(ei,o)}var Rm=S({atan2_:cj});function pj(r){let t={x:v(r,"x","atanh")};return D.runKernel(Qs,t)}var Fm=S({atanh_:pj});function mj(r,e,t,n,o="NHWC",s){let a=r[3],i=[...e,a],l=YS(o);return ku(r,i,t,s,n,null,null,l)}function xw(r,e,t,n,o,s,a="channelsLast"){let[i,l]=sg(e),u;if(a==="channelsLast")u=[i,l,r[3],r[3]];else if(a==="channelsFirst")u=[i,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return ku(r,u,t,n,o,s,!1,a)}function fj(r,e,t,n,o,s,a="NDHWC"){let[i,l,u]=yw(e),c,p;if(a==="NDHWC")p="channelsLast",c=[i,l,u,r[4],r[4]];else if(a==="NCDHW")p="channelsFirst",c=[i,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return ZS(r,c,t,n,o,!1,p,s)}function ku(r,e,t,n,o,s,a=!1,i="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p]=r;else if(i==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${i}`);let[m,f,,d]=e,[h,g]=sg(t),[x,b]=sg(n),w=Hc(m,x),_=Hc(f,b),{padInfo:k,outHeight:E,outWidth:T}=dj(o,u,c,h,g,w,_,s,i),F=a?d*p:d,O;return i==="channelsFirst"?O=[l,F,E,T]:i==="channelsLast"&&(O=[l,E,T,F]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:p,outHeight:E,outWidth:T,outChannels:F,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:_,dilationHeight:x,dilationWidth:b,inShape:r,outShape:O,filterShape:e}}function ZS(r,e,t,n,o,s=!1,a="channelsLast",i){let[l,u,c,p,m]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p,m]=r;else if(a==="channelsFirst")[l,m,u,c,p]=r;else throw new Error(`Unknown dataFormat ${a}`);let[f,d,h,,g]=e,[x,b,w]=yw(t),[_,k,E]=yw(n),T=Hc(f,_),F=Hc(d,k),O=Hc(h,E),{padInfo:M,outDepth:j,outHeight:W,outWidth:U}=hj(o,u,c,p,x,b,w,T,F,O,i),Y=s?g*m:g,K;return a==="channelsFirst"?K=[l,Y,j,W,U]:a==="channelsLast"&&(K=[l,j,W,U,Y]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:p,inChannels:m,outDepth:j,outHeight:W,outWidth:U,outChannels:Y,padInfo:M,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:T,effectiveFilterHeight:F,effectiveFilterWidth:O,dilationDepth:_,dilationHeight:k,dilationWidth:E,inShape:r,outShape:K,filterShape:e}}function gj(r,e,t,n,o){n==null&&(n=bw(r,e,t));let s=r[0],a=r[1],i=Cu((s-e+2*n)/t+1,o),l=Cu((a-e+2*n)/t+1,o);return[i,l]}function xj(r,e,t,n,o,s){o==null&&(o=bw(r,e,n));let a=r[0],i=r[1],l=r[2],u=Cu((a-e+2*o)/n+1,s),c=Cu((i-e+2*o)/n+1,s),p=Cu((l-e+2*o)/n+1,s);return[u,c,p,t]}function bw(r,e,t,n=1){let o=Hc(e,n);return Math.floor((r[0]*(t-1)-t+o)/2)}function sg(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function yw(r){return typeof r=="number"?[r,r,r]:r}function Hc(r,e){return e<=1?r:r+(r-1)*(e-1)}function dj(r,e,t,n,o,s,a,i,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=gj([e,t],s,n,r,i);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(e/n),p=Math.ceil(t/o);let m=Math.max(0,(c-1)*n+s-e),f=Math.max(0,(p-1)*o+a-t),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),x=f-g;u={top:d,bottom:h,left:g,right:x,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-s+1)/n),p=Math.ceil((t-a+1)/o);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],d=l==="channelsLast"?r[2][0]:r[3][0],h=l==="channelsLast"?r[2][1]:r[3][1];u={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},c=Cu((e-s+m+f)/n+1,i),p=Cu((t-a+d+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function hj(r,e,t,n,o,s,a,i,l,u,c){let p,m,f,d;if(typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=xj([e,t,n,1],i,1,o,r,c);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(e/o),f=Math.ceil(t/s),d=Math.ceil(n/a);let h=(m-1)*o+i-e,g=(f-1)*s+l-t,x=(d-1)*a+u-n,b=Math.floor(h/2),w=h-b,_=Math.floor(g/2),k=g-_,E=Math.floor(x/2),T=x-E;p={top:_,bottom:k,left:E,right:T,front:b,back:w,type:"SAME"}}else if(r==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-i+1)/o),f=Math.ceil((t-l+1)/s),d=Math.ceil((n-u+1)/a);else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:d}}function Cu(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Mn(r){let[e,t,n]=sg(r);return e===1&&t===1&&n===1}function Mt(r,e){return Mn(r)||Mn(e)}function YS(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function yj(r,e){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(gs,n,o)}var z=S({reshape_:yj});function bj(r,e,t,n,o){let s=v(r,"x","avgPool","float32"),a=1;A(Mt(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=s,l=!1;s.rank===3&&(l=!0,i=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),o!=null&&A(it(n),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let u={x:i},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o},p=D.runKernel(Yn,u,c);return p=ne(p,s.dtype),l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var ka=S({avgPool_:bj});function wj(r,e,t,n,o,s="NDHWC",a){a==null?a=[1,1,1]:Pt("dilations is deprecated, this field will be gone in v3.0.0.");let i=v(r,"x","avgPool3d","float32"),l=i,u=!1;i.rank===4&&(u=!0,l=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),A(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),A(Mt(t,a),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&A(it(n),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let c={x:l},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s,dilations:a},m=D.runKernel(oa,c,p);return m=ne(m,l.dtype),u?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Om=S({avgPool3d_:wj});function _j(r,e=0){A(r.length>=1,()=>"Pass at least one tensor to concat");let t=ya(r,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),t.length===1)return Pn(t[0]);let n=t,o={axis:e};return D.runKernel(us,n,o)}var et=S({concat_:_j});function vj(r){let t={x:v(r,"x","sigmoid")};return D.runKernel(Ao,t)}var Hr=S({sigmoid_:vj});function kj(r,e,t){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:e,size:t};return D.runKernel(ys,o,s)}var Oe=S({slice_:kj});function Cj(r){let t={x:v(r,"x","tanh")};return D.runKernel(Po,t)}var Li=S({tanh_:Cj});function Ij(r,e,t,n,o,s){let a=v(r,"forgetBias","basicLSTMCell"),i=v(e,"lstmKernel","basicLSTMCell"),l=v(t,"lstmBias","basicLSTMCell"),u=v(n,"data","basicLSTMCell"),c=v(o,"c","basicLSTMCell"),p=v(s,"h","basicLSTMCell"),m=et([u,p],1),f=Ge(m,i),d=Q(f,l),h=d.shape[0],g=d.shape[1]/4,x=[h,g],b=Oe(d,[0,0],x),w=Oe(d,[0,g],x),_=Oe(d,[0,g*2],x),k=Oe(d,[0,g*3],x),E=Q(P(Hr(b),Li(w)),P(c,Hr(Q(a,_)))),T=P(Li(E),Hr(k));return[E,T]}var Sj=S({basicLSTMCell_:Ij});function Nj(r,e,t){let n=v(r,"x","batchToSpaceND"),o=e.reduce((i,l)=>i*l);A(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),A(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),A(n.shape[0]%o==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);let s={x:n},a={blockShape:e,crops:t};return D.runKernel(sa,s,a)}var Ca=S({batchToSpaceND_:Nj});function JS(r){let e;return r.rank===0||r.rank===1?e=z(r,[1,1,1,r.size]):r.rank===2?e=z(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?e=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]):e=r,e}function Tj(r,e,t,n,o,s){s==null&&(s=.001);let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;n!=null&&(c=v(n,"offset","batchNorm")),A(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:JS(a),scale:u,offset:c,mean:i,variance:l},f={varianceEpsilon:s},d=D.runKernel(ao,m,f);return z(d,a.shape)}var zo=S({batchNorm_:Tj});function Ej(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),A(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),zo(a,i,l,c,u,s)}var ww=S({batchNorm2d_:Ej});function Aj(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),A(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),zo(a,i,l,c,u,s)}var _w=S({batchNorm3d_:Aj});function Dj(r,e,t,n,o,s){let a=v(r,"x","batchNorm"),i=v(e,"mean","batchNorm"),l=v(t,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),A(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),A(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),zo(a,i,l,c,u,s)}var vw=S({batchNorm4d_:Dj});function $j(r,e,t){let n=v(r,"x","bincount"),o=v(e,"weights","bincount");A(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:t};return D.runKernel(Hl,s,a)}var kw=S({bincount_:$j});function Rj(r,e){let t=v(r,"broadcastTo","x"),n=t.shape;if(e.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){let u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=z(t,u)}let o=t.shape,s=Array.from(e);for(let u=e.length-1;u>=0;u--)if(o[u]===e[u])s[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(s.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Pn(t);let i={x:t},l={reps:s};return D.runKernel(_n,i,l)}var cl=S({broadcastTo_:Rj});function Fj(r){let t={x:v(r,"x","ceil")};return D.runKernel(ti,t)}var Pm=S({ceil_:Fj});function Oj(r,e,t){let n=v(r,"x","clipByValue");A(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);let o={x:n},s={clipValueMin:e,clipValueMax:t};return D.runKernel(Fn,o,s)}var ar=S({clipByValue_:Oj});function Pj(r){return et(r,0)}var Cw=S({concat1d_:Pj});function Mj(r,e){return et(r,e)}var Iw=S({concat2d_:Mj});function Lj(r,e){return et(r,e)}var Sw=S({concat3d_:Lj});function zj(r,e){return et(r,e)}var Nw=S({concat4d_:zj});function Bj(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","conv2d"),l=v(e,"filter","conv2d"),u=i,c=!1;i.rank===3&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),a!=null&&A(it(n),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let p=o==="NHWC"?u.shape[3]:u.shape[1];A(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),A(Mt(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`);let m={x:u,filter:l},f={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},d=D.runKernel(Jn,m,f);return c?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Kr=S({conv2d_:Bj});function Vj(r,e,t,n,o="NWC",s=1,a){let i=v(r,"x","conv1d"),l=v(e,"filter","conv1d"),u=i,c=!1;i.rank===2&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1]])),A(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),a!=null&&A(it(n),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),A(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(Mt(t,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${s}'`),A(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let p=z(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=z(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Kr(m,p,[1,t],n,"NHWC",[1,s],a);return c?z(g,[g.shape[2],g.shape[3]]):z(g,[g.shape[0],g.shape[2],g.shape[3]])}var Iu=S({conv1d_:Vj});function Wj(r,e,t,n,o,s="NHWC",a){A(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let i=r,l=e,u=!1;e.rank===3&&(u=!0,l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,r[0],r[1],r[2]]),A(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);let c=s==="NHWC"?i[3]:i[1],p=s==="NHWC"?l.shape[3]:l.shape[1];A(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),A(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),a!=null&&A(it(o),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let m={dy:l,filter:t},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},d=D.runKernel(Qn,m,f);return u?z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Kc=S({conv2DBackpropInput_:Wj});function jj(r,e,t,n,o,s){let a=v(r,"x","conv2dTranspose"),i=v(e,"filter","conv2dTranspose");return Kc(t,a,i,n,o,"NHWC",s)}var Su=S({conv2dTranspose_:jj});function Gj(r,e,t,n,o="NDHWC",s=[1,1,1]){let a=v(r,"x","conv3d"),i=v(e,"filter","conv3d"),l=a,u=!1;a.rank===4&&(u=!0,l=z(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),A(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),A(Mt(t,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),A(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);let c={x:l,filter:i},p={strides:t,pad:n,dataFormat:o,dilations:s},m=D.runKernel(aa,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Mm=S({conv3d_:Gj});function Uj(r,e,t,n,o){A(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let s=r,a=e,i=!1;e.rank===4&&(i=!0,a=z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],u=a.shape[4];A(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),A(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),A(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),A(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),A(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);let c={dy:a,filter:t},p={pad:o,strides:n,inputShape:s},m=D.runKernel(Zl,c,p);return i?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var ig=S({conv3DBackpropInput_:Uj});function qj(r,e,t,n,o){let s=v(r,"x","conv3dTranspose"),a=v(e,"filter","conv3dTranspose");return ig(t,s,a,n,o)}var Hj=S({conv3dTranspose_:qj});function Kj(r){let t={x:v(r,"x","cos")};return D.runKernel(eo,t)}var Ia=S({cos_:Kj});function Xj(r){let t={x:v(r,"x","cosh")};return D.runKernel(ri,t)}var Nu=S({cosh_:Xj});function Yj(r,e=0,t=!1,n=!1){let s={x:v(r,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return D.runKernel(to,s,a)}var Tu=S({cumsum_:Yj});function Zj(r,e,t,n=!1){let o=v(r,"x","denseBincount"),s=v(e,"weights","denseBincount");A(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),A(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:t,binaryOutput:n};return D.runKernel(Jl,a,i)}var Tw=S({denseBincount_:Zj});function Jj(r,e,t="NHWC"){let n=v(r,"x","depthToSpace"),o=t==="NHWC"?n.shape[1]:n.shape[2],s=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];A(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),A(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e} for depthToSpace with input shape
        ${n.shape}`),A(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},l={blockSize:e,dataFormat:t};return D.runKernel(oi,i,l)}var Lm=S({depthToSpace_:Jj});function Qj(r,e,t,n,o="NHWC",s=[1,1],a){let i=v(r,"x","depthwiseConv2d"),l=v(e,"filter","depthwiseConv2d"),u=i,c=!1;i.rank===3&&(c=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),a!=null&&A(it(n),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`);let p={x:u,filter:l},m={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=D.runKernel(ro,p,m);return c?z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ln=S({depthwiseConv2d_:Qj});function eG(r){let t={x:v(r,"x","diag")};return D.runKernel(tu,t)}var tG=S({diag_:eG});function rG(r,e,t,n,o=[1,1],s="NHWC"){let a=v(r,"x","dilation2d"),i=v(e,"filter","dilation2d");A(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),A(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),A(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=a,u=!1;a.rank===3&&(l=z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);let c={x:l,filter:i},p={strides:t,pad:n,dilations:o},m=D.runKernel(la,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var zm=S({dilation2d_:rG});function nG(r,e){let t=r.length,n=[];for(let o=0;o<t;o++){let s=t-1-o,a=r[s]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function St(r,e){let t=[];for(let n=0;n<e.length;n++){let o=r[r.length-n-1],s=e.length-n-1,a=e[s];(o==null||o===1&&a>1)&&t.unshift(s)}return t}function Be(r,e){let t=[],n=Math.max(r.length,e.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=e[e.length-o-1];if(a==null&&(a=1),s===1)t.unshift(a);else if(a===1)t.unshift(s);else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${e}.`;throw Error(i)}else t.unshift(s)}return t}function oG(r,e){let t=v(r,"a","equal"),n=v(e,"b","equal");[t,n]=je(t,n),Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(ai,o)}var Xr=S({equal_:oG});function sG(r,e,t){let n=v(e,"a","where"),o=v(t,"b","where"),s=v(r,"condition","where","bool"),a=Be(n.shape,o.shape),i=cl(n,a),l=cl(o,a);s.rank===1&&A(s.shape[0]===n.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),s.rank!==1&&We(s.shape,l.shape,"Error in where: ");let u={condition:s,t:i,e:l};return D.runKernel(xs,u)}var $t=S({where_:sG});function iG(r){let t={x:v(r,"x","zerosLike")};return D.runKernel(_s,t)}var Se=S({zerosLike_:iG});function aG(r,e){let t=v(r,"a","div"),n=v(e,"b","div");[t,n]=je(t,n);let o=fe(t,n),s=Se(o),a=Xr(n,s);return $t(a,s,o)}var Bm=S({divNoNan_:aG});function lG(r,e){let t=v(r,"t1","dot"),n=v(e,"t2","dot");A((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);let o=t.rank===1?t.size:t.shape[1],s=n.rank===1?n.size:n.shape[0];if(A(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),t.rank===1&&n.rank===1){let a=z(t,[1,-1]),i=z(n,[-1,1]),l=Ge(a,i);return z(l,[])}else if(t.rank===1&&n.rank===2){let a=z(t,[1,-1]),i=z(n,[n.shape[0],n.shape[1]]),l=Ge(a,i);return z(l,[l.size])}else if(t.rank===2&&n.rank===1){let a=z(n,[-1,1]),i=Ge(t,a);return z(i,[i.size])}else{let a=z(n,[n.shape[0],n.shape[1]]);return Ge(t,a)}}var Ew=S({dot_:lG});function uG(r){let t={x:v(r,"x","elu")};return D.runKernel(si,t)}var Ns=S({elu_:uG});function cG(r){let e=v(r,"x","erf");A(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ne(e,"float32"));let t={x:e};return D.runKernel(ii,t)}var Vm=S({erf_:cG});function pG(r){let t={x:v(r,"x","exp")};return D.runKernel(oo,t)}var Qt=S({exp_:pG});function mG(r,e=0){let t=v(r,"x","expandDims","string_or_numeric");A(e<=t.rank,()=>"Axis must be <= rank of the tensor");let n={input:t},o={dim:e};return D.runKernel(cs,n,o)}var wr=S({expandDims_:mG});function fG(r){let t={x:v(r,"x","expm1")};return D.runKernel(li,t)}var Wm=S({expm1_:fG});function dG(r,e){let t=v(r,"x","tile","string_or_numeric");A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);let n={x:t},o={reps:e};return D.runKernel(_n,n,o)}var zn=S({tile_:dG});function hG(r,e,t,n="float32"){e==null&&(e=r);let o=Ie([r,e],n),s=r<=e?r:e;for(let i=0;i<s;++i)o.set(1,i,i);let a=z(o.toTensor(),[r,e]);if(t==null)return a;if(t.length===1)return zn(wr(a,0),[t[0],1,1]);if(t.length===2)return zn(wr(wr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return zn(wr(wr(wr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}var Xc=S({eye_:hG});function Sa(r,e,t){let n={shape:r,value:e,dtype:t};return D.runKernel(ua,{},n)}function gG(r){let t={x:v(r,"x","floor")};return D.runKernel(so,t)}var Ts=S({floor_:gG});function xG(r,e,t=0,n=0){let o=v(r,"x","gather"),s=v(e,"indices","gather","int32"),a={x:o,indices:s},i={axis:t,batchDims:n};return D.runKernel(ps,a,i)}var Bo=S({gather_:xG});function yG(r,e){let t=v(r,"a","greater"),n=v(e,"b","greater");[t,n]=je(t,n),Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(pi,o)}var Yt=S({greater_:yG});function bG(r,e){let t=v(r,"a","greaterEqual"),n=v(e,"b","greaterEqual");[t,n]=je(t,n),Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(lo,o)}var Pr=S({greaterEqual_:bG});function wG(r){let t={input:v(r,"input","imag")};return D.runKernel(su,t)}var Eu=S({imag_:wG});function _G(r){let t={x:v(r,"x","isFinite")};return D.runKernel(mi,t)}var Aw=S({isFinite_:_G});function vG(r){let t={x:v(r,"x","isInf")};return D.runKernel(fi,t)}var Dw=S({isInf_:vG});function kG(r){let t={x:v(r,"x","isNaN")};return D.runKernel(di,t)}var $w=S({isNaN_:kG});function CG(r,e=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:e};return D.runKernel(uo,n,o)}var Na=S({leakyRelu_:CG});function IG(r,e){let t=v(r,"a","less"),n=v(e,"b","less");[t,n]=je(t,n),Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(hi,o)}var Ta=S({less_:IG});function SG(r,e){let t=v(r,"a","lessEqual"),n=v(e,"b","lessEqual");[t,n]=je(t,n),Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(gi,o)}var on=S({lessEqual_:SG});function Rw(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:e,num:t};return D.runKernel(iu,{},n)}function NG(r,e=5,t=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");A(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),A(it(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:a},u={depthRadius:e,bias:t,alpha:n,beta:o},c=D.runKernel(ca,l,u);return i?z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var jm=S({localResponseNormalization_:NG});function TG(r){let t={x:v(r,"x","log")};return D.runKernel(co,t)}var lr=S({log_:TG});function EG(r){let t={x:v(r,"x","log1p")};return D.runKernel(xi,t)}var Au=S({log1p_:EG});function AG(r){return A(qs(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{let n=v(e,"x","tf.grad","string_or_numeric"),o=t!=null?v(t,"dy","tf.grad"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(n),[n],o);return o!=null&&We(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ag(a),a[0]})}}function DG(r){return A(qs(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{A(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=ya(e,"args","tf.grads","string_or_numeric"),o=t!=null?v(t,"dy","tf.grads"):null;return D.tidy(()=>{let{value:s,grads:a}=D.gradients(()=>r(...n),n,o);return o!=null&&We(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ag(a),a})}}function $G(r){return A(qs(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{A(e instanceof R,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),A(t==null||t instanceof R,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=D.gradients(()=>r(e),[e],t);return ag(n),{grad:n[0],value:o}}}function RG(r){return A(qs(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{A(Array.isArray(e)&&e.every(o=>o instanceof R),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),A(t==null||t instanceof R,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=D.gradients(()=>r(...e),e,t);return t!=null&&We(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ag(n.grads),n}}function lg(r,e){A(qs(r),()=>"The f passed in variableGrads(f) must be a function"),A(e==null||Array.isArray(e)&&e.every(u=>u instanceof sl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let t=e!=null;if(!t){e=[];for(let u in D.registeredVariables)e.push(D.registeredVariables[u])}let n=t?e.filter(u=>!u.trainable):null,o=e.length;e=e.filter(u=>u.trainable),A(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=D.gradients(r,e,null,s);A(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let l={};return e.forEach((u,c)=>{i[c]!=null&&(l[u.name]=i[c])}),n!=null&&n.forEach(u=>l[u.name]=null),{value:a,grads:l}}function Yr(r){return D.customGrad(r)}function ag(r){if(r.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function FG(r){let t={x:v(r,"x","neg")};return D.runKernel(fs,t)}var qe=S({neg_:FG});function OG(r){let t={x:v(r,"x","softplus")};return D.runKernel(Ai,t)}var Es=S({softplus_:OG});function PG(r){let e=v(r,"x","logSigmoid");return Yr(n=>({value:qe(Es(qe(n))),gradFunc:a=>P(a,Hr(qe(n)))}))(e)}var Fw=S({logSigmoid_:PG});function MG(r,e=null,t=!1){let o={x:v(r,"x","max")},s={reductionIndices:e,keepDims:t};return D.runKernel(po,o,s)}var ur=S({max_:MG});function LG(r,e){let t=v(r,"a","sub"),n=v(e,"b","sub");[t,n]=je(t,n);let o={a:t,b:n};return D.runKernel(Oo,o)}var ce=S({sub_:LG});function zG(r,e=null,t=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel($o,o,s)}var we=S({sum_:zG});function BG(r,e=-1){let t=v(r,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Yr((o,s)=>{let a=!0,i=ur(o,e,!0),l=ce(o,i),u=ce(ne(l,"float32"),lr(we(Qt(l),e,a)));return s([u]),{value:u,gradFunc:(p,m)=>{let[f]=m,d=!0,h=Qt(f);return ce(p,P(we(p,e,d),h))}}})(t)}var Du=S({logSoftmax_:BG});function Ow(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function QS(r,e,t){let n=r.length+e.length,o=[],s=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(r[s++]):o.push(e[a++]);return o}function Pw(r,e){let t=[],n=r.length;for(let s=0;s<n;s++)e.indexOf(s)===-1&&t.push(r[s]);let o=e.map(s=>r[s]);return[t,o]}function Vo(r,e){let t=e.map(n=>1);return QS(r,t,e)}function VG(r,e,t){A(Ow(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Mw(r,e){if(Ow(r,e))return null;let t=[];for(let n=0;n<e;++n)r.indexOf(n)===-1&&t.push(n);return r.forEach(n=>t.push(n)),t}function Gm(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function WG(r,e){let t=[];for(let n=e-r;n<e;++n)t.push(n);return t}function jG(r,e=null,t=!1){let n=v(r,"x","logSumExp"),o=rr(e,n.shape),s=ur(n,o,!0),a=ce(n,s),i=Qt(a),l=we(i,o),u=lr(l),c=Q(z(s,u.shape),u);if(t){let p=Vo(c.shape,o);return z(c,p)}return c}var Um=S({logSumExp_:jG});function GG(r,e){let t=v(r,"a","logicalAnd","bool"),n=v(e,"b","logicalAnd","bool");Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(yi,o)}var hr=S({logicalAnd_:GG});function UG(r){let t={x:v(r,"x","logicalNot","bool")};return D.runKernel(tl,t)}var Ea=S({logicalNot_:UG});function qG(r,e){let t=v(r,"a","logicalOr","bool"),n=v(e,"b","logicalOr","bool");Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(rl,o)}var $u=S({logicalOr_:qG});function HG(r,e){let t=v(r,"a","logicalXor","bool"),n=v(e,"b","logicalXor","bool");return Be(t.shape,n.shape),hr($u(r,e),Ea(hr(r,e)))}var Lw=S({logicalXor_:HG});function KG(r,e,t,n,o){let s=v(r,"x","maxPool"),a=1,i=s,l=!1;s.rank===3&&(l=!0,i=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),A(Mt(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&A(it(n),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let u={x:i},c={filterSize:e,strides:t,pad:n,dimRoundingMode:o},p=D.runKernel(fo,u,c);return l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Aa=S({maxPool_:KG});function XG(r,e=[1,1,1],t,n,o,s="NDHWC",a){a==null?a=[1,1,1]:Pt("dilations is deprecated, this field will be gone in v3.0.0.");let i=v(r,"x","maxPool3d"),l=i,u=!1;i.rank===4&&(u=!0,l=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),A(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),A(Mt(t,a),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),o!=null&&A(it(n),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${n}.`);let c={x:l},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:s,dilations:a},m=D.runKernel(pa,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var qm=S({maxPool3d_:XG});function YG(r,e,t,n,o=!1){let a={x:v(r,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},l=D.runKernel(cu,a,i);return{result:l[0],indexes:l[1]}}var zw=S({maxPoolWithArgmax_:YG});function ZG(r,e){let t=v(r,"a","maximum"),n=v(e,"b","maximum");[t,n]=je(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(mo,o)}var Nr=S({maximum_:ZG});function JG(r,e=null,t=!1){let o={x:v(r,"x","mean")},s={axis:e,keepDims:t};return D.runKernel(ho,o,s)}var yt=S({mean_:JG});function QG(r,e=null,t=!1){let o={x:v(r,"x","min")},s={axis:e,keepDims:t};return D.runKernel(go,o,s)}var zi=S({min_:QG});function e4(r,e){let t=v(r,"a","minimum"),n=v(e,"b","minimum");[t,n]=je(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(xo,o)}var Bn=S({minimum_:e4});function t4(r,e,t){A(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);let o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)A(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:e,mode:t},a={x:n};return D.runKernel(ma,a,s)}var Hm=S({mirrorPad_:t4});function r4(r,e){let t=v(r,"a","mod"),n=v(e,"b","mod");[t,n]=je(t,n);let o={a:t,b:n};return D.runKernel(bi,o)}var Ru=S({mod_:r4});function n4(r){let e=v(r,"x","square"),t={};return D.runKernel("Square",{x:e},t)}var Me=S({square_:n4});function o4(r,e=null,t=!1){r=v(r,"x","moments");let n=rr(e,r.shape),o=yt(r,n,t),s=o.shape;t||(s=Vo(o.shape,n));let a=Me(ce(ne(r,"float32"),z(o,s))),i=yt(a,n,t);return{mean:o,variance:i}}var Yc=S({moments_:o4});function s4(r,e,t,n){let o=v(e,"data","multiRNNCell"),s=ya(t,"c","multiRNNCell"),a=ya(n,"h","multiRNNCell"),i=o,l=[];for(let p=0;p<r.length;p++){let m=r[p](i,s[p],a[p]);l.push(m[0]),l.push(m[1]),i=m[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var i4=S({multiRNNCell_:s4});function a4(r,e,t,n=!1){let o=v(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();let l={logits:a===1?z(o,[1,-1]):o},u={numSamples:e,seed:t,normalized:n},c=D.runKernel(pu,l,u);return a===1?z(c,[c.size]):c}var Bw=S({multinomial_:a4});function l4(r,e){let t=v(r,"a","notEqual"),n=v(e,"b","notEqual");[t,n]=je(t,n),Be(t.shape,n.shape);let o={a:t,b:n};return D.runKernel(wi,o)}var kn=S({notEqual_:l4});function mt(r,e="float32"){if(e==="complex64"){let n=mt(r,"float32"),o=mt(r,"float32");return vn(n,o)}let t=Rc(ht(r),e);return D.makeTensor(t,r,e)}function Tr(r,e="float32"){if(e==="complex64"){let n=Tr(r,"float32"),o=mt(r,"float32");return vn(n,o)}let t=gm(ht(r),e);return D.makeTensor(t,r,e)}function u4(r){let t={x:v(r,"x","onesLike")};return D.runKernel(ds,t)}var nr=S({onesLike_:u4});function c4(r,e){let t=v(r,"v1","outerProduct"),n=v(e,"v2","outerProduct");A(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);let o=z(t,[-1,1]),s=z(n,[1,-1]);return Ge(o,s)}var p4=S({outerProduct_:c4});function m4(r,e,t=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:e,constantValue:t},s={x:n};return D.runKernel(wo,s,o)}var Mr=S({pad_:m4});function f4(r,e,t=0){return A(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Mr(r,[e],t)}var d4=S({pad1d_:f4});function h4(r,e,t=0){return A(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(r,e,t)}var g4=S({pad2d_:h4});function x4(r,e,t=0){return A(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(r,e,t)}var y4=S({pad3d_:x4});function b4(r,e,t=0){return A(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Mr(r,e,t)}var w4=S({pad4d_:b4});function _4(r,e,t){let n=v(r,"x","spaceToBatchND");A(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),A(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),A(n.shape.reduce((a,i,l)=>l>0&&l<=e.length?a&&(i+t[l-1][0]+t[l-1][1])%e[l-1]==0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);let o={x:n},s={blockShape:e,paddings:t};return D.runKernel(ha,o,s)}var Da=S({spaceToBatchND_:_4});function C4(r,e,t,n,o,s){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=v(r,"x","maxPool"),i=a,l=!1;a.rank===3&&(l=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(Mt(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let u=xw(i.shape,e,s,o,n),c=[u.dilationHeight,u.dilationWidth],p;n==="same"?p=k4([u.filterHeight,u.filterWidth],c):p=[[0,0],[0,0]];let m=c[0]===1&&c[1]===1,[f,d]=v4([u.inHeight,u.inWidth],c,p),h=m?n:"valid",g=m?i:Da(i,c,f),b=(t==="avg"?()=>ka(g,e,s,h):()=>Aa(g,e,s,h))(),w=m?b:Ca(b,c,d);return l?z(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function v4(r,e,t){let n=t.map(c=>c[0]),o=t.map(c=>c[1]),s=r.concat(n,o),a=e.map((c,p)=>(c-s[p]%c)%c),i=o.map((c,p)=>c+a[p]),l=e.map((c,p)=>[n[p],i[p]]),u=e.map((c,p)=>[0,a[p]]);return[l,u]}function k4(r,e){let n=r.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var Vw=S({pool_:C4});function I4(r,e){let t=v(r,"base","pow"),n=v(e,"exp","pow");[t,n]=je(t,n);let o={a:t,b:n};return D.runKernel(_o,o)}var _r=S({pow_:I4});function S4(r,e){let t=v(r,"x","prelu"),n=v(e,"alpha","prelu"),o={x:t,alpha:n};return D.runKernel(vo,o)}var $a=S({prelu_:S4});function N4(r,e=null,t=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:e,keepDims:t};return D.runKernel(Ci,o,s)}var Fu=S({prod_:N4});function T4(r,e,t){let n=ht(r),o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let s=0;s<n;s++)o[s]=e();return D.makeTensor(o,r,t)}var E4=S({rand_:T4});var pg=Ec(dN());var Zc=class{constructor(e,t,n,o,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=pg.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Kw=class{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;let s=o||Math.random();this.randu=pg.alea(s.toString()),this.randn=new Zc(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},Xw=class{constructor(e=0,t=1,n,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=pg.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function P4(r,e,t=1,n="float32",o){if(t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Kw(e,t,n,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var M4=S({randomGamma_:P4});function L4(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Zc(e,t,n,!1,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var mg=S({randomNormal_:L4});function z4(r,e=0,t=1,n="float32",o){let s=Ie(r,n),a=new Xw(e,t,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var As=S({randomUniform_:z4});function Jc(r,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:e,step:t,dtype:n};return D.runKernel(fa,{},o)}function B4(r){let t={input:v(r,"input","real")};return D.runKernel(mu,t)}var pl=S({real_:B4});function V4(r){let t={x:v(r,"x","reciprocal")};return D.runKernel(Ii,t)}var Km=S({reciprocal_:V4});function W4(r){let t={x:v(r,"x","relu")};return D.runKernel(ko,t)}var Er=S({relu_:W4});function j4(r){let t={x:v(r,"x","relu6")};return D.runKernel(Io,t)}var Pu=S({relu6_:j4});function G4(r,e){let n={x:v(r,"x","reverse")},o={dims:e};return D.runKernel(So,n,o)}var Zt=S({reverse_:G4});function U4(r){let e=v(r,"x","reverse");return A(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Zt(e,0)}var q4=S({reverse1d_:U4});function H4(r,e){let t=v(r,"x","reverse");return A(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Zt(t,e)}var K4=S({reverse2d_:H4});function X4(r,e){let t=v(r,"x","reverse");return A(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Zt(t,e)}var Y4=S({reverse3d_:X4});function Z4(r,e){let t=v(r,"x","reverse");return A(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Zt(t,e)}var J4=S({reverse4d_:Z4});function Q4(r){let t={x:v(r,"x","round")};return D.runKernel(No,t)}var Xm=S({round_:Q4});function eU(r){let t={x:v(r,"x","rsqrt")};return D.runKernel(To,t)}var Mu=S({rsqrt_:eU});function ue(r,e){if((sr(r)&&e!=="string"||Array.isArray(r))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&sr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ur(r,[],[],e)}function tU(r){let t={x:v(r,"x","selu")};return D.runKernel(Ni,t)}var Lu=S({selu_:tU});function rU(r,e,t,n,o,s=[1,1],a="NHWC"){let i=v(r,"x","separableConv2d"),l=v(e,"depthwiseFilter","separableConv2d"),u=v(t,"pointwiseFilter","separableConv2d"),c=i,p=!1;if(i.rank===3&&(p=!0,c=z(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),A(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let m=l.shape[2],f=l.shape[3];A(u.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${u.shape[2]}.`);let d=Ln(c,l,n,o,a,s),g=Kr(d,u,1,"valid",a);return p?z(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Ym=S({separableConv2d_:rU});async function nU(r,e){let t=v(r,"x","setdiff1d"),n=v(e,"y","setdiff1d");A(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),A(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),A(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await t.data(),s=await n.data(),a=new Set(s),i=0;for(let c=0;c<o.length;c++)a.has(o[c])||i++;let l=new pt([i],t.dtype),u=new pt([i],"int32");for(let c=0,p=0;c<o.length;c++)a.has(o[c])||(l.values[p]=o[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var Yw=nU;function oU(r){let t={x:v(r,"x","sign")};return D.runKernel(Ei,t)}var Zm=S({sign_:oU});function sU(r){let t={x:v(r,"x","sin")};return D.runKernel(Eo,t)}var zu=S({sin_:sU});function iU(r){let t={x:v(r,"x","sinh")};return D.runKernel(Ti,t)}var Bu=S({sinh_:iU});function aU(r,e,t){let n=v(r,"x","slice1d");return A(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Oe(n,[e],[t])}var Jm=S({slice1d_:aU});function lU(r,e,t){let n=v(r,"x","slice2d");return A(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Oe(n,e,t)}var fg=S({slice2d_:lU});function uU(r,e,t){let n=v(r,"x","slice3d");return A(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Oe(n,e,t)}var Qm=S({slice3d_:uU});function cU(r,e,t){let n=v(r,"x","slice4d");return A(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Oe(n,e,t)}var Qc=S({slice4d_:cU});function pU(r,e=-1){let t=v(r,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);let n={logits:t},o={dim:e};return D.runKernel(Ro,n,o)}var Ra=S({softmax_:pU});function mU(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(nu,e)}var Fa=S({fft_:mU});function fU(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let e={input:r};return D.runKernel(ou,e)}var Bi=S({ifft_:fU});function dU(r){let e=r.shape[r.shape.length-1],t=r.size/e,n;if(e<=2){let o=z(r,[t,e]);n=Bi(o)}else{let o=[t,2*(e-1)],s=z(pl(r),[t,e]),a=z(Eu(r),[t,e]),i=Zt(Oe(s,[0,1],[t,e-2]),1),l=P(Zt(Oe(a,[0,1],[t,e-2]),1),ue(-1)),u=et([s,i],1),c=et([a,l],1),p=z(vn(u,c),[o[0],o[1]]);n=Bi(p)}if(n=pl(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=z(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Vu=S({irfft_:dU});function hU(r,e,t=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:e,axis:t};return D.runKernel(bs,o,s)}var cr=S({split_:hU});function gU(r,e){A(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1],n=r.size/t,o;if(e!=null&&e<t){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=e,o=Oe(r,d,h),t=e}else if(e!=null&&e>t){let d=r.shape.map(h=>h);d[r.shape.length-1]=e-t,o=et([r,mt(d)],r.shape.length-1),t=e}else o=r;let s=Se(o),a=z(vn(o,s),[n,t]),i=Fa(a),l=Math.floor(t/2)+1,u=pl(i),c=Eu(i),p=cr(u,[l,t-l],u.shape.length-1),m=cr(c,[l,t-l],c.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=l,z(vn(p[0],m[0]),f)}var Oa=S({rfft_:gU});function xU(r){let t={x:v(r,"x","sqrt")};return D.runKernel(Do,t)}var bt=S({sqrt_:xU});function yU(r,e){let t=v(r,"a","squaredDifference"),n=v(e,"b","squaredDifference");[t,n]=je(t,n),Be(t.shape,n.shape);let o={a:t,b:n},s={};return D.runKernel(Fo,o,s)}var Pa=S({squaredDifference_:yU});function bU(r,e){let t=v(r,"x","squeeze");return z(t,Cb(t.shape,e).newShape)}var Cn=S({squeeze_:bU});function wU(r,e=0){let t=ya(r,"tensors","stack","string_or_numeric");A(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&A(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");let n=t,o={axis:e};return D.runKernel(hs,n,o)}var jt=S({stack_:wU});function _U(r,e=0){let n={x:v(r,"x","step")},o={alpha:e};return D.runKernel(On,n,o)}var Ds=S({step_:_U});function vU(r,e,t,n,o=0,s=0,a=0,i=0,l=0){let c={x:v(r,"x","stridedSlice")},p={begin:e,end:t,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return D.runKernel(Di,c,p)}var ef=S({stridedSlice_:vU});function kU(r){let t={x:v(r,"x","tan")};return D.runKernel($i,t)}var tf=S({tan_:kU});function Gt(r,e){$n(r);let t=Ir(r,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ur(r,null,t,e)}function Vi(r,e,t){if($n(r),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Ir(r,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ur(r,e,n,t)}function CU(r,e,t){if($n(r),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Ir(r,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ur(r,e,n,t)}function IU(r,e,t){if($n(r),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Ir(r,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ur(r,e,n,t)}function SU(r,e,t){if($n(r),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Ir(r,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,Ur(r,e,n,t)}function NU(r,e=1,t=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);let s={x:n},a={k:e,sorted:t},[i,l]=D.runKernel(Ri,s,a);return{values:i,indices:l}}var rf=S({topk_:NU});function TU(r,e=0,t=1,n,o){if(n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Zc(e,t,n,!0,o),a=Ie(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Wu=S({truncatedNormal_:TU});function EU(r,e=0){let t=v(r,"x","unique","string_or_numeric");A(t.rank>0,()=>"The input tensor must be at least 1D");let n={x:t},o={axis:e},[s,a]=D.runKernel(gu,n,o);return{values:s,indices:a}}var ep=S({unique_:EU});function AU(r,e,t){let n=v(r,"x","unsortedSegmentSum"),o=v(e,"segmentIds","unsortedSegmentSum","int32");A(it(t),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:t};return D.runKernel(xa,s,a)}var nf=S({unsortedSegmentSum_:AU});function DU(r,e=0){let t=v(r,"x","unstack","string_or_numeric");A(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);let n={value:t},o={axis:e};return D.runKernel(ws,n,o)}var pr=S({unstack_:DU});function Zw(r,e=!0,t,n){return D.makeVariable(r,e,t,n)}function Jw(r,e){let t=[];for(let s=0;s<e.length;s++)e[s]&&t.push(s);let n=Ie(r,"int32"),o=Ie([t.length,r.length],"int32");for(let s=0;s<t.length;s++){let a=n.indexToLoc(t[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function $U(r){let e=v(r,"condition","whereAsync","bool"),t=await e.data(),n=Jw(e.shape,t);return r!==e&&e.dispose(),n}var of=$U;async function RU(r,e,t){let n=v(r,"tensor","boolMask"),o=v(e,"mask","boolMask","bool"),s=t==null?0:t,a=o.rank,i=n.shape;A(a>0,()=>"mask cannot be scalar"),We(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let h=s;h<s+a;h++)l*=i[h];let u=i.slice(0,s).concat([l],i.slice(s+a)),c=z(n,u),p=z(o,[-1]),m=await of(p),f=Cn(m,[1]),d=Bo(c,f,s);return r!==n&&n.dispose(),e!==o&&o.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),d}var FU=RU;function OU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","notEqualStrict"),n=v(e,"b","notEqualStrict");return We(t.shape,n.shape,"Error in notEqualStrict: "),kn(t,n)}function PU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","lessStrict"),n=v(e,"b","lessStrict");return We(t.shape,n.shape,"Error in lessStrict: "),Ta(t,n)}function MU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","equalStrict"),n=v(e,"b","equalStrict");return We(t.shape,n.shape,"Error in equalStrict: "),Xr(t,n)}function LU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","lessEqualStrict"),n=v(e,"b","lessEqualStrict");return We(t.shape,n.shape,"Error in lessEqualStrict: "),on(t,n)}function zU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","greaterStrict"),n=v(e,"b","greaterStrict");return We(t.shape,n.shape,"Error in greaterStrict: "),Yt(t,n)}function BU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","greaterEqualStrict"),n=v(e,"b","greaterEqualStrict");return We(t.shape,n.shape,"Error in greaterEqualStrict: "),Pr(t,n)}var Qw=S({equalStrict_:MU}),e_=S({greaterEqualStrict_:BU}),t_=S({greaterStrict_:zU}),r_=S({lessEqualStrict_:LU}),n_=S({lessStrict_:PU}),o_=S({notEqualStrict_:OU});function VU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","addStrict"),n=v(e,"b","addStrict");return We(t.shape,n.shape,"Error in addStrict: "),Q(t,n)}function WU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","subStrict"),n=v(e,"b","subStrict");return We(t.shape,n.shape,"Error in subStrict: "),ce(t,n)}function jU(r,e){return Pt("strict variants of ops have been deprecated and will be removed in future"),We(r.shape,e.shape,"Error in powStrict: "),_r(r,e)}function GU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","mul"),n=v(e,"b","mul");return We(t.shape,n.shape,"Error in multiplyStrict: "),P(t,n)}function UU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","div"),n=v(e,"b","div");return We(t.shape,n.shape,"Error in divideStrict: "),fe(t,n)}function qU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","modStrict"),n=v(e,"b","modStrict");return We(t.shape,n.shape,"Error in modStrict: "),Ru(t,n)}function HU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","minimumStrict"),n=v(e,"b","minimumStrict");return We(t.shape,n.shape,"Error in minimumStrict: "),Bn(t,n)}function KU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","maximumStrict"),n=v(e,"b","maximumStrict");return We(t.shape,n.shape,"Error in maximumStrict: "),Nr(t,n)}function XU(r,e){Pt("strict variants of ops have been deprecated and will be removed in future");let t=v(r,"a","squaredDifferenceStrict"),n=v(e,"b","squaredDifferenceStrict");return We(t.shape,n.shape,"Error in squaredDifferenceStrict: "),Pa(t,n)}var s_=S({addStrict_:VU}),i_=S({divStrict_:UU}),a_=S({maximumStrict_:KU}),l_=S({minimumStrict_:HU}),u_=S({modStrict_:qU}),c_=S({mulStrict_:GU}),p_=S({powStrict_:jU}),m_=S({squaredDifferenceStrict_:XU}),f_=S({subStrict_:WU});function YU(r,e="euclidean",t=null,n=!1){r=v(r,"x","norm");let o=hN(r,e,t),s=o.shape;if(n){let a=rr(t,r.shape);s=Vo(o.shape,a)}return z(o,s)}function hN(r,e,t=null){if(r.rank===0)return Et(r);if(r.rank!==1&&t===null)return hN(z(r,[-1]),e,t);if(r.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return we(Et(r),t);if(e===Infinity)return ur(Et(r),t);if(e===-Infinity)return zi(Et(r),t);if(e==="euclidean"||e===2)return bt(we(_r(Et(r),ue(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return ur(we(Et(r),t[0]),t[1]-1);if(e===Infinity)return ur(we(Et(r),t[1]),t[0]);if(e===-Infinity)return zi(we(Et(r),t[1]),t[0]);if(e==="fro"||e==="euclidean")return bt(we(Me(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}var ju=S({norm_:YU});function ZU(r,e,t,n,o=!0){let s=v(r,"v","movingAverage"),a=v(e,"x","movingAverage"),i=v(t,"decay","movingAverage");Hb(s,a),A(Gr(s.shape,a.shape),()=>"Shape mismatch in v and x");let l=ue(1),u=ce(l,i),c=P(ce(a,s),u);if(o){A(n!=null,()=>"When using zeroDebias: true, step is required.");let p=v(n,"step","movingAverage");c=fe(c,ce(l,_r(i,p)))}return Q(s,c)}var JU=S({movingAverage_:ZU});function QU(r,e,t){let n=v(r,"indices","scatterND","int32"),o=v(e,"updates","scatterND");rg(o,n,t);let s={indices:n,updates:o},a={shape:t};return D.runKernel(Si,s,a)}var d_=S({scatterND_:QU});function gN(r,e,t,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(t.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${s}.`);let a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function eq(r,e,t,n=0){let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(e,"sparseValues","sparseToDense"),a=v(n,"defaultValue","sparseToDense",s.dtype);gN(o,s,t,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},l={outputShape:t};return D.runKernel(hu,i,l)}var sf=S({sparseToDense_:eq});function tq(r,e){let t=v(e,"indices","gatherND","int32"),o={params:v(r,"x","gatherND"),indices:t};return D.runKernel(ci,o)}var h_=S({gatherND_:tq});function xN(r,e){if(e==null)return r.shape.slice();if(Gr(r.shape,e))return e;if(r.shape.length===e.length){let t=[];for(let n=0;n<r.shape.length;n++)e[n]==null&&r.shape[n]!=null?t.push(r.shape[n]):t.push(e[n]);return t}return e}function rq(r,e,t,n){let o=v(r,"x","dropout");if(A(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),A(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return r instanceof R?o.clone():o;let s=xN(o,t),a=1-e,i=fe(Ts(Q(As(s,0,1,"float32",n),a)),a);return P(o,i)}var g_=S({dropout_:rq});function x_(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function af(r,e,t){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=e-t*Math.cos(a)}return Gt(o,"float32")}async function nq(r,e,t=1){let n=v(r,"predictions","inTopK"),o=v(e,"targets","inTopK");A(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),A(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),We(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];A(t>0&&t<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${t}`);let a=await n.data(),i=await o.data(),[l,u]=[a.length/s,s],c=Ib("bool",l);for(let p=0;p<l;p++){let m=p*u,f=a.subarray(m,m+u),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),c[p]=0;for(let h=0;h<t;h++)if(d[h].index===i[p]){c[p]=1;break}}return r!==n&&n.dispose(),e!==o&&o.dispose(),Or(c,o.shape,"bool")}var oq=nq;var Wo={};Ze(Wo,{conv2d:()=>aq,depthwiseConv2d:()=>pq,matMul:()=>fq});function sq(r,e,t,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);let u=s==="NHWC"?i.shape[3]:i.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];A(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),A(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),a!=null&&A(it(o),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);let p={x:i,dy:l},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:t};return D.runKernel(Xl,p,m)}var tp=S({conv2DBackpropFilter_:sq});function Gu(r,e,t){if(t==null||t==="linear")return r;if(t==="relu")return P(r,Ds(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Uu(r,e){let t=e,n=St(r.shape,e.shape);return n.length>0&&(t=we(t,n)),z(t,r.shape)}function qu(r,e,t,n){if(e==="linear")return r;if(e==="relu")return Er(r);if(e==="elu")return Ns(r);if(e==="relu6")return Pu(r);if(e==="prelu")return $a(r,t);if(e==="leakyrelu")return Na(r,n);throw new Error(`Unknown fused activation ${e}.`)}var Hu=(r,e)=>!(r>0)||e==="linear";function iq({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Hu(D.state.gradientDepth,l)===!1){let k=Kr(r,e,t,n,o,s,a);return i!=null&&(k=Q(k,i)),qu(k,l,u,c)}let p=v(r,"x","conv2d"),m=v(e,"filter","conv2d"),f=p,d=!1;p.rank===3&&(d=!0,f=z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),a!=null&&A(it(n),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${n}.`),A(f.shape[3]===m.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${m.shape[2]}.`),A(Mt(t,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),A(o==="NHWC",()=>`Error in conv2d: got dataFormat of ${o} but only NHWC is currently supported.`);let h=ku(f.shape,m.shape,t,s,n,a),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=je(g,p),Be(h.outShape,g.shape));let x;u!=null&&(x=v(u,"prelu weights","fused conv2d"));let b=(k,E)=>{let[T,F,O,M]=E,j=Gu(k,O,l);A(Mn(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=Kc(F.shape,j,T,t,n),U=tp(F,j,T.shape,t,n),Y=[W,U];if(M!=null){let K=Uu(M,j);Y.push(K)}return Y},w={x:f,filter:m,bias:g,preluActivationWeights:x},_={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?Yr((E,T,F)=>{let O=D.runKernel(ks,w,_);return F([T,E,O]),d&&(O=z(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:b}})(f,m):Yr((E,T,F,O)=>{let M=D.runKernel(ks,w,_);return O([T,E,M,F]),d&&(M=z(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:b}})(f,m,g)}var aq=S({fusedConv2d_:iq});function lq(r,e,t,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=e;l.rank===3&&(l=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={x:i,dy:l},c={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:t};return D.runKernel(Ql,u,c)}var dg=S({depthwiseConv2dNativeBackpropFilter_:lq});function uq(r,e,t,n,o,s=[1,1],a){let i=e,l=!1;e.rank===3&&(l=!0,i=z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u={dy:i,filter:t},c={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},p=D.runKernel(eu,u,c);return l?z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var hg=S({depthwiseConv2dNativeBackpropInput_:uq});function cq({x:r,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Hu(D.state.gradientDepth,l)===!1){let k=Ln(r,e,t,n,o,s,a);return i!=null&&(k=Q(k,i)),qu(k,l,u,c)}let p=v(r,"x","depthwiseConv2d"),m=v(e,"filter","depthwiseConv2d"),f=p,d=!1;p.rank===3&&(d=!0,f=z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),A(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),A(Mt(t,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${s}'`),a!=null&&A(it(n),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${n}.`);let h=ku(f.shape,m.shape,t,s,n,a,!0),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=je(g,p),Be(h.outShape,g.shape));let x;u!=null&&(x=v(u,"prelu weights","fused depthwiseConv2d"));let b=(k,E)=>{A(Mn(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[T,F,O,M]=E,j=Gu(k,O,l),W=hg(F.shape,j,T,t,n,s,a),U=dg(F,j,T.shape,t,n,s,a);if(M!=null){let Y=Uu(g,j);return[W,U,Y]}return[W,U]},w={x:f,filter:m,bias:g,preluActivationWeights:x},_={strides:t,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return i==null?Yr((E,T,F)=>{let O=D.runKernel(Cs,w,_);return F([T,E,O]),d&&(O=z(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:b}})(f,m):Yr((E,T,F,O)=>{let M=D.runKernel(Cs,w,_);return O([T,E,M,F]),d&&(M=z(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:b}})(f,m,g)}var pq=S({fusedDepthwiseConv2d_:cq});function mq({a:r,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(Hu(D.state.gradientDepth,s)===!1){let M=Ge(r,e,t,n);return o!=null&&(M=Q(M,o)),qu(M,s,a,i)}let l=v(r,"a","fused matMul"),u=v(e,"b","fused matMul");[l,u]=je(l,u);let c=t?l.shape[l.rank-2]:l.shape[l.rank-1],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=l.shape.slice(0,-2),h=u.shape.slice(0,-2),g=ht(d),x=ht(h);A(l.rank>=2&&u.rank>=2&&l.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`),A(Gr(d,h),()=>`Error in fused matMul: outer dimensions (${d}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`),A(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${n} must match.`);let b=l.shape.slice(0,-2).concat([m,f]),w=t?z(l,[g,c,m]):z(l,[g,m,c]),_=n?z(u,[x,f,p]):z(u,[x,p,f]),k;o!=null&&(k=v(o,"bias","fused matMul"),[k]=je(k,l),Be(b,k.shape));let E;a!=null&&(E=v(a,"prelu weights","fused matMul"));let T=(M,j)=>{let[W,U,Y,K]=j,Z=Gu(z(M,Y.shape),Y,s),re,X;if(!t&&!n?(re=Ge(Z,U,!1,!0),X=Ge(W,Z,!0,!1)):!t&&n?(re=Ge(Z,U,!1,!1),X=Ge(Z,W,!0,!1)):t&&!n?(re=Ge(U,Z,!1,!0),X=Ge(W,Z,!1,!1)):(re=Ge(U,Z,!0,!0),X=Ge(Z,W,!0,!0)),o!=null){let oe=Uu(K,Z);return[re,X,oe]}else return[re,X]},F={a:w,b:_,bias:k,preluActivationWeights:E},O={transposeA:t,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?Yr((j,W,U)=>{let Y=D.runKernel(vs,F,O);return U([j,W,Y]),{value:z(Y,b),gradFunc:T}})(w,_):Yr((j,W,U,Y)=>{let K=D.runKernel(vs,F,O);return Y([j,W,K,U]),{value:z(K,b),gradFunc:T}})(w,_,k)}var fq=S({fusedMatMul_:mq});function dq(r){return af(r,.54,.46)}var yN=S({hammingWindow_:dq});function hq(r){return af(r,.5,.5)}var gg=S({hannWindow_:hq});function gq(r,e,t,n=!1,o=0){let s=0,a=[];for(;s+e<=r.size;)a.push(Oe(r,s,e)),s+=t;if(n)for(;s<r.size;){let i=s+e-r.size,l=et([Oe(r,s,e-i),Sa([i],o)]);a.push(l),s+=t}return a.length===0?Vi([],[0,e]):z(et(a),[a.length,e])}var xg=S({frame_:gq});function xq(r,e,t,n,o=gg){n==null&&(n=x_(e));let s=xg(r,e,t),a=P(s,o(e)),i=[];for(let l=0;l<s.shape[0];l++)i.push(Oa(Oe(a,[l,0],[1,e]),n));return et(i)}var bN=S({stft_:xq});function yq(r,e,t,n,o="bilinear",s=0){let a=v(r,"image","cropAndResize"),i=v(e,"boxes","cropAndResize","float32"),l=v(t,"boxInd","cropAndResize","int32"),u=i.shape[0];A(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),A(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),A(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),A(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),A(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),A(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let c={image:a,boxes:i,boxInd:l},p={method:o,extrapolationValue:s,cropSize:n};return D.runKernel(ni,c,p)}var wN=S({cropAndResize_:yq});function bq(r){let e=v(r,"image","flipLeftRight","float32");A(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);let t={image:e};return D.runKernel(ui,t,{})}var _N=S({flipLeftRight_:bq});function wq(r,e,t=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");A(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:e,fillValue:t,center:n};return D.runKernel(Fi,s,a)}var vN=S({rotateWithOffset_:wq});function jo(r,e,t,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return t=Math.min(t,a),A(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),A(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),A(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),A(e.rank===1,()=>"scores must be a 1D tensor"),A(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),A(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function _q(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression"),a=v(e,"scores","nonMaxSuppression"),i=jo(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let l={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return D.runKernel(_i,{boxes:s,scores:a},l)}var kN=S({nonMaxSuppression_:_q});function CN(r,e,t){let n=vq(r,e,t),o=n<0?-(n+1):n;r.splice(o,0,e)}function vq(r,e,t){return Cq(r,e,t||kq)}function kq(r,e){return r>e?1:r<e?-1:0}function Cq(r,e,t){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=t(e,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function b_(r,e,t,n,o){return y_(r,e,t,n,o,0)}function w_(r,e,t,n,o,s){return y_(r,e,t,n,o,0,!1,s,!0)}function __(r,e,t,n,o,s){return y_(r,e,t,n,o,s,!0)}function y_(r,e,t,n,o,s,a=!1,i=!1,l=!1){let u=[];for(let g=0;g<e.length;g++)e[g]>o&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(IN);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<t&&u.length>0;){let g=u.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<o)break;let _=!1;for(let k=p.length-1;k>=w;--k){let E=Iq(r,b,p[k]);if(E>=n){_=!0;break}if(g.score=g.score*Sq(n,c,E),g.score<=o)break}g.suppressBeginIndex=p.length,_||(g.score===x?(p.push(b),m.push(g.score)):g.score>o&&CN(u,g,IN))}let f=p.length,d=t-f;i&&d>0&&(p.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:p};return a&&(h.selectedScores=m),l&&(h.validOutputs=f),h}function Iq(r,e,t){let n=r.subarray(e*4,e*4+4),o=r.subarray(t*4,t*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),p=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(i-s)*(l-a),d=(p-u)*(m-c);if(f<=0||d<=0)return 0;let h=Math.max(s,u),g=Math.max(a,c),x=Math.min(i,p),b=Math.min(l,m),w=Math.max(x-h,0)*Math.max(b-g,0);return w/(f+d-w)}function Sq(r,e,t){let n=Math.exp(e*t*t);return t<=r?n:0}function IN(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}async function Nq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),a=v(e,"scores","nonMaxSuppressionAsync"),i=jo(s,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let l=await Promise.all([s.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:p}=b_(u,c,t,n,o);return s!==r&&s.dispose(),a!==e&&a.dispose(),Gt(p,"int32")}var SN=Nq;function Tq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),l=jo(a,i,t,n,o,s);t=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:a,scores:i},c={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},p=D.runKernel(ki,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var NN=S({nonMaxSuppressionWithScore_:Tq});async function Eq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),l=jo(a,i,t,n,o,s);t=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([a.data(),i.data()]),c=u[0],p=u[1],{selectedIndices:m,selectedScores:f}=__(c,p,t,n,o,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Gt(m,"int32"),selectedScores:Gt(f)}}var TN=Eq;function Aq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppression"),i=v(e,"scores","nonMaxSuppression"),l=jo(a,i,t,n,o,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,m={boxes:a,scores:i},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},d=D.runKernel(vi,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var EN=S({nonMaxSuppressionPadded_:Aq});async function Dq(r,e,t,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(e,"scores","nonMaxSuppressionAsync"),l=jo(a,i,t,n,o,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[m,f]=await Promise.all([a.data(),i.data()]),{selectedIndices:d,validOutputs:h}=w_(m,f,u,c,p,s);return a!==r&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Gt(d,"int32"),validOutputs:ue(h,"int32")}}var AN=Dq;function $q(r,e,t=!1,n=!1){let o=v(r,"images","resizeBilinear");A(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),A(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),A(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},l={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(Co,i,l);return a?z(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var yg=S({resizeBilinear_:$q});function Rq(r,e,t=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");A(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),A(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),A(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=z(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=e,i={images:s},l={alignCorners:t,halfPixelCenters:n,size:e},u=D.runKernel(da,i,l);return a?z(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var bg=S({resizeNearestNeighbor_:Rq});function Fq(r,e,t){A(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),A(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);let n=v(r,"a","bandPart");A(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=s),t<0&&(t=a);let i=z(Jc(0,s,1,"int32"),[-1,1]),l=Jc(0,a,1,"int32"),u=ce(i,l),c=hr(on(u,ue(+e,"int32")),Pr(u,ue(-t,"int32"))),p=mt([s,a],n.dtype);return z(jt(pr(z(n,[-1,s,a])).map(m=>$t(c,m,p))),o)}var DN=S({bandPart_:Fq});function Oq(r){let e;if(Array.isArray(r)){e=!1,A(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)A(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else e=!0,r=cr(r,r.shape[0],0).map(o=>Cn(o,[0]));A(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let t=[],n=r;for(let o=0;o<r.length;++o)t.push(D.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=P(we(P(t[a],s)),t[a]);s=ce(s,i)}return fe(s,ju(s,"euclidean"))}));return e?jt(t,0):t}var $N=S({gramSchmidt_:Oq});function Pq(r,e=!1){if(A(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return RN(r,e);{let t=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),n=pr(z(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(l=>{let[u,c]=RN(l,e);o.push(u),s.push(c)});let a=z(jt(o,0),r.shape),i=z(jt(s,0),r.shape);return[a,i]}}function RN(r,e=!1){return D.tidy(()=>{A(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let t=r.shape[0],n=r.shape[1],o=Xc(t),s=Pn(r),a=Vi([[1]],[1,1]),i=Pn(a),l=t>=n?n:t;for(let u=0;u<l;++u){let c=s,p=i,m=o;[i,s,o]=D.tidy(()=>{let f=Oe(s,[u,u],[t-u,1]),d=ju(f),h=Oe(s,[u,u],[1,1]),g=$t(Yt(h,0),Vi([[-1]]),Vi([[1]])),x=ce(h,P(g,d)),b=fe(f,x);b.shape[0]===1?i=Pn(a):i=et([a,Oe(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let w=qe(fe(Ge(g,x),d)),_=Oe(s,[u,0],[t-u,n]),k=P(w,i),E=Ue(i);if(u===0)s=ce(_,Ge(k,Ge(E,_)));else{let O=ce(_,Ge(k,Ge(E,_)));s=et([Oe(s,[0,0],[u,n]),O],0)}let T=Ue(k),F=Oe(o,[0,u],[t,o.shape[1]-u]);if(u===0)o=ce(F,Ge(Ge(F,i),T));else{let O=ce(F,Ge(Ge(F,i),T));o=et([Oe(o,[0,0],[t,u]),O],1)}return[i,s,o]}),De([c,p,m])}return!e&&t>n&&(o=Oe(o,[0,0],[t,n]),s=Oe(s,[0,0],[n,n])),[o,s]})}var FN=S({qr_:Pq});var Ut;(function(r){r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Ut||(Ut={}));function Mq(r,e,t=Ut.SUM_BY_NONZERO_WEIGHTS){let n=v(r,"losses","computeWeightedLoss"),o=null;e!=null&&(o=v(e,"weights","computeWeightedLoss"));let s=o==null?n:P(n,o);if(t===Ut.NONE)return s;if(t===Ut.SUM)return we(s);if(t===Ut.MEAN){if(o==null)return yt(s);{let a=n.size/o.size,i=fe(we(s),we(o));return a>1?fe(i,ue(a)):i}}if(t===Ut.SUM_BY_NONZERO_WEIGHTS){if(o==null)return fe(we(s),ue(n.size));{let a=P(o,Tr(n.shape)),i=ne(we(kn(a,ue(0))),"float32");return fe(we(s),i)}}throw Error(`Unknown reduction: ${t}`)}var Ar=S({computeWeightedLoss_:Mq});function Lq(r,e,t,n=Ut.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","absoluteDifference"),s=v(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=v(t,"weights","absoluteDifference")),We(o.shape,s.shape,"Error in absoluteDifference: ");let i=Et(ce(o,s));return Ar(i,a,n)}var ON=S({absoluteDifference_:Lq});function zq(r,e,t,n,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","cosineDistance"),a=v(e,"predictions","cosineDistance"),i=null;n!=null&&(i=v(n,"weights","cosineDistance")),We(s.shape,a.shape,"Error in cosineDistance: ");let l=ue(1),u=ce(l,we(P(s,a),t,!0));return Ar(u,i,o)}var PN=S({cosineDistance_:zq});function Bq(r,e,t,n=Ut.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","hingeLoss"),s=v(e,"predictions","hingeLoss"),a=null;t!=null&&(a=v(t,"weights","hingeLoss")),We(o.shape,s.shape,"Error in hingeLoss: ");let i=ue(1);o=ce(P(ue(2),o),i);let l=Er(ce(i,P(o,s)));return Ar(l,a,n)}var MN=S({hingeLoss_:Bq});function Vq(r,e,t,n=1,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","huberLoss"),a=v(e,"predictions","huberLoss"),i=null;t!=null&&(i=v(t,"weights","huberLoss")),We(s.shape,a.shape,"Error in huberLoss: ");let l=ue(n),u=Et(ce(a,s)),c=Bn(u,l),p=ce(u,c),m=Q(P(ue(.5),Me(c)),P(l,p));return Ar(m,i,o)}var LN=S({huberLoss_:Vq});function Wq(r,e,t,n=1e-7,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","logLoss"),a=v(e,"predictions","logLoss"),i=null;t!=null&&(i=v(t,"weights","logLoss")),We(s.shape,a.shape,"Error in logLoss: ");let l=ue(1),u=ue(n),c=qe(P(s,lr(Q(a,u)))),p=P(ce(l,s),lr(Q(ce(l,a),u))),m=ce(c,p);return Ar(m,i,o)}var zN=S({logLoss_:Wq});function jq(r,e,t,n=Ut.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","meanSquaredError"),s=v(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=v(t,"weights","meanSquaredError")),We(o.shape,s.shape,"Error in meanSquaredError: ");let i=Pa(o,s);return Ar(i,a,n)}var BN=S({meanSquaredError_:jq});function Gq(r,e){let t=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(e,"logits","sigmoidCrossEntropyWithLogits");We(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Er(n),s=P(n,t),a=Au(Qt(qe(Et(n))));return Q(ce(o,s),a)}function Uq(r,e,t,n=0,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),a=v(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","sigmoidCrossEntropy")),We(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=ue(n),c=ue(1),p=ue(.5);s=Q(P(s,ce(c,u)),P(p,u))}let l=Gq(s,a);return Ar(l,i,o)}var VN=S({sigmoidCrossEntropy_:Uq});function qq(r,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Yr((o,s,a)=>{let l=Um(s,[t],!0),u=ce(ne(s,"float32"),l);a([o,u]);let c=qe(P(u,o));return{value:we(c,[t]),gradFunc:(f,d)=>{let[h,g]=d,x=Vo(f.shape,[t]);return[P(z(f,x),ce(ne(h,"float32"),Qt(g))),P(z(f,x),ce(Qt(g),ne(h,"float32")))]}}})(r,e)}function Hq(r,e,t,n=0,o=Ut.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"onehotLabels","softmaxCrossEntropy"),a=v(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=v(t,"weights","softmaxCrossEntropy")),We(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let u=ue(n),c=ue(1),p=ue(s.shape[1]);s=Q(P(s,ce(c,u)),fe(u,p))}let l=qq(s,a);return Ar(l,i,o)}var WN=S({softmaxCrossEntropy_:Hq});var Kq={fft:Fa,ifft:Bi,rfft:Oa,irfft:Vu},Xq={hammingWindow:yN,hannWindow:gg,frame:xg,stft:bN},$s={flipLeftRight:_N,resizeNearestNeighbor:bg,resizeBilinear:yg,rotateWithOffset:vN,cropAndResize:wN,nonMaxSuppression:kN,nonMaxSuppressionAsync:SN,nonMaxSuppressionWithScore:NN,nonMaxSuppressionWithScoreAsync:TN,nonMaxSuppressionPadded:EN,nonMaxSuppressionPaddedAsync:AN},v_={bandPart:DN,gramSchmidt:$N,qr:FN},Yq={absoluteDifference:ON,computeWeightedLoss:Ar,cosineDistance:PN,hingeLoss:MN,huberLoss:LN,logLoss:zN,meanSquaredError:BN,sigmoidCrossEntropy:VN,softmaxCrossEntropy:WN};var Lr=class extends og{minimize(e,t=!1,n){let{value:o,grads:s}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:s[i.name]}));this.applyGradients(a)}else this.applyGradients(s);return De(s),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return lg(e,t)}dispose(){this.iterations_!=null&&De(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ue(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Lr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var rp=class extends Lr{constructor(e,t,n=null){super();this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:V(()=>Se(s).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:V(()=>Se(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let l=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;V(()=>{let c=Q(P(l,this.rho),P(Me(i),1-this.rho)),p=P(fe(bt(Q(u,this.epsilon)),bt(Q(l,this.epsilon))),i),m=Q(P(u,this.rho),P(Me(p),1-this.rho));l.assign(c),u.assign(m);let f=Q(P(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(De(this.accumulatedGrads.map(e=>e.variable)),De(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};rp.className="Adadelta";nn(rp);var np=class extends Lr{constructor(e,t=.1){super();this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulatedGrads[o]==null){let l=!1;this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:V(()=>Sa(s.shape,this.initialAccumulatorValue).variable(l))}}let a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[o].variable;V(()=>{let l=Q(i,Me(a));i.assign(l);let u=Q(P(fe(a,bt(Q(l,D.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&De(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};np.className="Adagrad";nn(np);var op=class extends Lr{constructor(e,t,n,o=null){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=ue(t).variable(),this.accBeta2=ue(n).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);V(()=>{let n=ce(1,this.accBeta1),o=ce(1,this.accBeta2);t.forEach((s,a)=>{let i=D.registeredVariables[s],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:V(()=>Se(i).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${s}/v`,variable:V(()=>Se(i).variable(l))});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,p=this.accumulatedSecondMoment[a].variable,m=Q(P(c,this.beta1),P(u,1-this.beta1)),f=Q(P(p,this.beta2),P(Me(u),1-this.beta2)),d=fe(m,n),h=fe(f,o);c.assign(m),p.assign(f);let g=Q(P(fe(d,Q(bt(h),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(P(this.accBeta1,this.beta1)),this.accBeta2.assign(P(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&De(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&De(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),V(()=>{this.accBeta1.assign(_r(this.beta1,this.iterations_+1)),this.accBeta2.assign(_r(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};op.className="Adam";nn(op);var sp=class extends Lr{constructor(e,t,n,o=null,s=0){super();this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=ue(0).variable(),this.accBeta1=ue(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);V(()=>{let n=ce(1,this.accBeta1),o=fe(-this.learningRate,Q(P(this.iteration,this.decay),1));t.forEach((s,a)=>{let i=D.registeredVariables[s],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${s}/m`,variable:Se(i).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${s}/v`,variable:Se(i).variable(l)});let u=Array.isArray(e)?e[a].tensor:e[s];if(u==null)return;let c=this.accumulatedFirstMoment[a].variable,p=this.accumulatedWeightedInfNorm[a].variable,m=Q(P(c,this.beta1),P(u,1-this.beta1)),f=P(p,this.beta2),d=Et(u),h=Nr(f,d);c.assign(m),p.assign(h);let g=Q(P(fe(o,n),fe(m,Q(h,this.epsilon))),i);i.assign(g)}),this.iteration.assign(Q(this.iteration,1)),this.accBeta1.assign(P(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&De(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&De(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};sp.className="Adamax";nn(sp);var ml=class extends Lr{constructor(e){super();this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=Array.isArray(e)?e[o].tensor:e[n];if(s==null)return;let a=D.registeredVariables[n];V(()=>{let i=Q(P(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Dt(ue(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};ml.className="SGD";nn(ml);var ip=class extends ml{constructor(e,t,n=!1){super(e);this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ue(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n];if(this.accumulations[o]==null){let l=!1;this.accumulations[o]={originalName:`${n}/momentum`,variable:V(()=>Se(s).variable(l))}}let a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&V(()=>{let l,u=Q(P(this.m,a),i);this.useNesterov?l=Q(P(this.c,Q(i,P(u,this.m))),s):l=Q(P(this.c,u),s),a.assign(u),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&De(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ip.className="Momentum";nn(ip);var ap=class extends Lr{constructor(e,t=.9,n=0,o=null,s=!1){super();if(this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{let s=D.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:V(()=>Se(s).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:V(()=>Se(s).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:V(()=>Se(s).variable(a))});let i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;let l=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;V(()=>{let c=Q(P(l,this.decay),P(Me(i),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[o].variable,m=Q(P(p,this.decay),P(i,1-this.decay)),f=fe(P(i,this.learningRate),bt(ce(c,Q(Me(m),this.epsilon)))),d=Q(P(u,this.momentum),f);l.assign(c),p.assign(m),u.assign(d);let h=ce(s,d);s.assign(h)}else{let p=Q(P(l,this.decay),P(Me(i),1-this.decay)),m=Q(P(u,this.momentum),fe(P(i,this.learningRate),bt(Q(p,this.epsilon))));l.assign(p),u.assign(m);let f=ce(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&De(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&De(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&De(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};ap.className="RMSProp";nn(ap);var Ma=class{static sgd(e){return new ml(e)}static momentum(e,t,n=!1){return new ip(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,s=!1){return new ap(e,t,n,o,s)}static adam(e=.001,t=.9,n=.999,o=null){return new op(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new rp(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,s=0){return new sp(e,t,n,o,s)}static adagrad(e,t=.1){return new np(e,t)}};var fl={sgd:Ma.sgd,momentum:Ma.momentum,adadelta:Ma.adadelta,adagrad:Ma.adagrad,rmsprop:Ma.rmsprop,adamax:Ma.adamax,adam:Ma.adam};var Zq=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function lf(){return new Promise(r=>Zq(()=>r()))}var N={};Ze(N,{ERF_A1:()=>lH,ERF_A2:()=>uH,ERF_A3:()=>cH,ERF_A4:()=>pH,ERF_A5:()=>mH,ERF_P:()=>aH,PARALLELIZE_THRESHOLD:()=>wg,SELU_SCALE:()=>C_,SELU_SCALEALPHA:()=>k_,applyActivation:()=>qu,assertAndGetBroadcastShape:()=>Be,assertAxesAreInnerMostDims:()=>VG,assertParamsConsistent:()=>Jq,assignToTypedArray:()=>wH,axesAreInnerMostDims:()=>Ow,calculateShapes:()=>OS,castTensor:()=>NH,combineLocations:()=>QS,complexWithEvenIndex:()=>xH,complexWithOddIndex:()=>yH,computeConv2DInfo:()=>ku,computeConv3DInfo:()=>ZS,computeDefaultPad:()=>bw,computeDilation2DInfo:()=>mj,computeOptimalWindowSize:()=>eH,computeOutAndReduceShapes:()=>Pw,computeOutShape:()=>Qq,computePool2DInfo:()=>xw,computePool3DInfo:()=>fj,convertConv2DDataFormat:()=>YS,eitherStridesOrDilationsAreOne:()=>Mt,expandShapeToKeepDim:()=>Vo,exponent:()=>vH,exponents:()=>_H,fromStringArrayToUint8:()=>AH,fromUint8ToStringArray:()=>EH,getAxesPermutation:()=>Mw,getBroadcastDims:()=>nG,getComplexWithIndex:()=>bH,getFusedBiasGradient:()=>Uu,getFusedDyActivation:()=>Gu,getImageCenter:()=>tH,getInnerMostAxes:()=>WG,getPermuted:()=>nH,getReductionAxes:()=>St,getReshaped:()=>rH,getReshapedPermuted:()=>oH,getSliceBeginCoords:()=>sH,getSliceSize:()=>iH,getUndoAxesPermutation:()=>Gm,log:()=>dH,mergeRealAndImagArrays:()=>hH,prepareAndValidate:()=>FS,prepareSplitSize:()=>kH,reshapeTensor:()=>TH,segment_util:()=>jN,shouldFuse:()=>Hu,slice_util:()=>ir,splitRealAndImagArrays:()=>gH,tupleValuesAreOne:()=>Mn,upcastType:()=>dr,validateInput:()=>rg,validateUpdateShape:()=>cw,warn:()=>fH});function Jq(r,e){let t=r[0].length;r.forEach((o,s)=>{A(o.length===t,()=>`Error in concat${t}D: rank of tensors[${s}] must be the same as the rank of the rest (${t})`)}),A(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<t;a++)A(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function Qq(r,e){let t=r[0].slice();for(let n=1;n<r.length;n++)t[e]+=r[n][e];return t}var wg=30;function eH(r){return r<=wg?r:$c(r,Math.floor(Math.sqrt(r)))}function tH(r,e,t){let n=t*(typeof r=="number"?r:r[0]),o=e*(typeof r=="number"?r:r[1]);return[n,o]}function rH(r,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(r[0]/t),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=e.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/e[a],e[a]]);o=o.concat(r.slice(s+1))}return o}function nH(r,e,t=!0){let n=[];if(t){n.push(e);for(let o=e+1;o<r;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=e*2+1||a%2==1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function oH(r,e,t,n=!0){let o=[];n?o.push(r[0]/t):o.push(r[0]*t);for(let s=1;s<r.length;++s)s<=e.length?n?o.push(e[s-1]*r[s]):o.push(r[s]/e[s-1]):o.push(r[s]);return o}function sH(r,e){let t=[0];for(let n=0;n<e;++n)t.push(r[n][0]);return t}function iH(r,e,t){let n=r.slice(0,1);for(let o=0;o<t;++o)n.push(r[o+1]-e[o][0]-e[o][1]);return n}var k_=1.7580993408473768,C_=1.0507009873554805;var aH=.3275911,lH=.254829592,uH=-.284496736,cH=1.421413741,pH=-1.453152027,mH=1.061405429;function fH(...r){G().getBool("IS_TEST")||console.warn(...r)}function dH(...r){G().getBool("IS_TEST")||console.log(...r)}function hH(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);let t=new Float32Array(r.length*2);for(let n=0;n<t.length;n+=2)t[n]=r[n/2],t[n+1]=e[n/2];return t}function gH(r){let e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)e[n/2]=r[n],t[n/2]=r[n+1];return{real:e,imag:t}}function xH(r){let e=Math.ceil(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function yH(r){let e=Math.floor(r.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<r.length;o+=4)t[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:t,imag:n}}function bH(r,e){let t=r[e*2],n=r[e*2+1];return{real:t,imag:n}}function wH(r,e,t,n){r[n*2]=e,r[n*2+1]=t}function _H(r,e){let t=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(e?2:-2)*Math.PI*(o/r);t[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:t,imag:n}}function vH(r,e,t){let n=(t?2:-2)*Math.PI*(r/e),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}function kH(r,e,t=0){let n=[];if(typeof e=="number")A(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(r.shape[t]/e);else{let o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);A(o<=1,()=>"There should be only one negative value in split array.");let s=e.indexOf(-1);if(s!==-1){let a=e.reduce((i,l)=>l>0?i+l:i);e[s]=r.shape[t]-a}A(r.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}var jN={};Ze(jN,{collectGatherOpShapeInfo:()=>SH,computeOutShape:()=>IH,segOpComputeOptimalWindowSize:()=>CH});function CH(r,e){let t=!1,n;for(r<=wg?(n=r,t=!0):n=$c(r,Math.floor(Math.sqrt(r)));!t;)n>e||n===r?t=!0:n=$c(r,n+1);return n}function IH(r,e,t){let n=[],o=r.length;for(let s=0;s<o;s++)s!==e?n.push(r[s]):n.push(t);return n}function SH(r,e,t,n){let o=e.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let p=0;p<n;++p)if(r.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);let a=r.shape[t],i=[],l=1,u=1,c=1;for(let p=0;p<n;++p)i.push(r.shape[p]),l*=r.shape[p];for(let p=n;p<t;p++)i.push(r.shape[p]),u*=r.shape[p];for(let p=n;p<o;p++)i.push(e.shape[p]);for(let p=t+1;p<s;p++)i.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}function NH(r,e,t){if(e==="complex64"){if(r.dtype==="complex64")return r.clone();let n=mt(r.shape),o=ne(r,"float32"),s=t.complex(o,n);return n.dispose(),o.dispose(),s}if(!Eb(r.dtype,e))return D.makeTensorFromDataId(r.dataId,r.shape,e);if(r.dtype==="complex64"){let n=t.real(r),o=ne(n,e);return n.dispose(),o}if(e==="int32")return t.int(r);if(e==="bool"){let n=ue(0,r.dtype),o=t.notEqual(r,n);return n.dispose(),o}else throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${e}`)}function TH(r,e){return D.makeTensorFromDataId(r.dataId,e,r.dtype)}function EH(r){try{return r.map(e=>zc(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function AH(r){return r.map(e=>ol(e))}var Dr={};Ze(Dr,{nonMaxSuppressionV3Impl:()=>b_,nonMaxSuppressionV4Impl:()=>w_,nonMaxSuppressionV5Impl:()=>__,whereImpl:()=>Jw});var _g={kernelName:ls,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,Ds(ne(t,"float32"),-1))}}};var GN={kernelName:Ks,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Me(ne(t,"float32")),o=bt(ce(ue(1),n));return qe(fe(r,o))}}}};var UN={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=bt(ce(Me(ne(t,"float32")),1));return fe(r,n)}}}};var qN={kernelName:wn,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Be(t.shape,n.shape);return{a:()=>{let i=r,l=St(t.shape,o);return l.length>0&&(i=we(i,l)),z(i,t.shape)},b:()=>{let i=r,l=St(n.shape,o);return l.length>0&&(i=we(i,l)),z(i,n.shape)}}}};var HN={kernelName:Kn,saveAllInputs:!0,gradFunc:(r,e)=>{let t={};return e.forEach((n,o)=>{t[o]=()=>r.clone()}),t}};var KN={kernelName:Xn,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Se(t)}}};var XN={kernelName:na,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>Se(t)}}};var YN={kernelName:Ys,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,bt(ce(ue(1),Me(ne(t,"float32")))))}}};var ZN={kernelName:Zs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=bt(Q(ue(1),Me(ne(t,"float32"))));return fe(r,n)}}}};var JN={kernelName:ei,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Be(t.shape,n.shape);return{a:()=>{let i=Q(Me(t),Me(n)),l=P(r,fe(n,i)),u=St(t.shape,o);return u.length>0&&(l=we(l,u)),z(l,t.shape)},b:()=>{let i=Q(Me(t),Me(n)),l=qe(P(r,fe(t,i))),u=St(n.shape,o);return u.length>0&&(l=we(l,u)),z(l,n.shape)}}}};var QN={kernelName:Js,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,Q(Me(ne(t,"float32")),1))}}};var eT={kernelName:Qs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,ce(ue(1),Me(ne(t,"float32"))))}}};function DH(r,e,t,n,o=[1,1,1],s,a){let i=v(r,"dy","avgPool3dGrad"),l=v(e,"input","avgPool3dGrad"),u=i,c=l,p=!1;l.rank===4&&(p=!0,u=z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=z(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),A(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),A(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),A(Mt(n,o),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),a!=null&&A(it(s),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let m={dy:u,input:c},f={filterSize:t,strides:n,dilations:o,pad:s,dimRoundingMode:a},d=D.runKernel(ql,m,f);return p?z(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var tT=S({avgPool3dGrad_:DH});var rT={kernelName:oa,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,dilations:a,pad:i,dimRoundingMode:l}=t,u=a==null?[1,1,1]:a;return{x:()=>tT(r,n,o,s,u,i,l)}}};function $H(r,e,t,n,o){let s=v(r,"dy","avgPoolGrad"),a=v(e,"input","avgPoolGrad");A(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,l=s,u=!1;a.rank===3&&(u=!0,i=z(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),A(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let c={dy:l,input:i},p={filterSize:t,strides:n,pad:o},m=D.runKernel(Ul,c,p);return u?z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var nT=S({avgPoolGrad_:$H});var oT={kernelName:Yn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{filterSize:o,strides:s,pad:a}=t;return{x:()=>nT(r,n,o,s,a)}}};var sT={kernelName:Zn,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{let[n,o]=e,{transposeA:s,transposeB:a}=t;return!s&&!a?{a:()=>Ge(r,o,!1,!0),b:()=>Ge(n,r,!0,!1)}:!s&&a?{a:()=>Ge(r,o,!1,!1),b:()=>Ge(r,n,!0,!1)}:s&&!a?{a:()=>Ge(o,r,!1,!0),b:()=>Ge(n,r,!1,!1)}:{a:()=>Ge(o,r,!0,!0),b:()=>Ge(r,n,!0,!0)}}};var iT={kernelName:sa,gradFunc:(r,e,t)=>{let{blockShape:n,crops:o}=t;return{x:()=>Da(r,n,o)}}};var aT={kernelName:Pb,gradFunc:(r,e,t)=>{let n=t,o=n.inputShape,s=n.shape,a=Array.from(s);for(let l=o.length-1;l>=0;l--)if(o[l]===s[l])a[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>we(r,i,!0)}}};var lT={kernelName:Rn,gradFunc:r=>({x:()=>r.clone()})};var uT={kernelName:ti,gradFunc:r=>({x:()=>Se(r)})};var cT={kernelName:Fn,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{clipValueMin:o,clipValueMax:s}=t;return{x:()=>$t(hr(Pr(n,o),on(n,s)),r,Se(r))}}};var pT={kernelName:ia,inputsToSave:["x"],gradFunc:_g.gradFunc};var mT={kernelName:us,saveAllInputs:!0,gradFunc:(r,e,t)=>{let n=e.map(l=>l.shape),{axis:o}=t,s=rr(o,e[0].shape)[0],a=n.map(l=>l[s]);return cr(r,a,s).map(l=>()=>l)}};var fT={kernelName:Jn,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{dilations:s,strides:a,pad:i,dataFormat:l}=t;return A(Mn(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Kc(n.shape,r,o,a,i,l),filter:()=>tp(n,r,o.shape,a,i,l)}}};var dT={kernelName:Qn,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,{strides:s,pad:a,dataFormat:i,dimRoundingMode:l}=t;return{dy:()=>Kr(r,o,s,a,i,1,l),filter:()=>tp(r,n,o.shape,s,a,i,l)}}};function RH(r,e,t,n,o){let s=r;r.rank===4&&(s=z(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=e;a.rank===4&&(a=z(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),A(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),A(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),A(s.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${t[3]}.`),A(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);let i={x:s,dy:a},l={strides:n,pad:o,filterShape:t};return D.runKernel(Yl,i,l)}var hT=S({conv3DBackpropFilter_:RH});var gT={kernelName:aa,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s}=t;A(Mn(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=e;return{x:()=>ig(a.shape,r,i,o,s),filter:()=>hT(a,r,i.shape,o,s)}}};var xT={kernelName:eo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(qe(zu(ne(t,"float32"))),r)}}};var yT={kernelName:ri,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(Bu(ne(t,"float32")),r)}}};var bT={kernelName:to,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o,exclusive:s,reverse:a}=t;return{x:()=>{let i=Mw([o],n.rank),l=Tu(r,o,s,!a);return i!=null&&(l=Ue(l,i)),l}}}};var wT={kernelName:ro,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=t,i=n==null?[1,1]:n;A(Mn(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[l,u]=e;return A(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),A(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),A(Mt(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),a!=null&&A(it(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),{x:()=>hg(l.shape,r,u,o,s,n,a),filter:()=>dg(l,r,u.shape,o,s,n,a)}}};var _T={kernelName:la,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{let[n,o]=e,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>D.runKernel(Fc,s,t),filter:()=>D.runKernel(Oc,a,t)}}};var vT={kernelName:si,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e,n={dy:r,y:t};return{x:()=>D.runKernel(ru,n)}}};var kT={kernelName:ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=P(Qt(qe(Me(t))),2/Math.sqrt(Math.PI));return{x:()=>P(r,n)}}};var CT={kernelName:oo,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,t)}}};var IT={kernelName:cs,inputsToSave:["input"],gradFunc:(r,e)=>{let[t]=e;return{input:()=>z(r,t.shape)}}};var ST={kernelName:li,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,Qt(t))}}};var NT={kernelName:so,gradFunc:r=>({x:()=>Se(r)})};var TT={kernelName:io,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Be(t.shape,n.shape);return{a:()=>{let i=fe(r,ne(n,"float32")),l=St(t.shape,o);return l.length>0?z(we(i,l),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),l=St(n.shape,o);l.length>0&&(i=z(we(i,l),n.shape));let u=Me(n);return qe(fe(i,ne(u,"float32")))}}}};var ET={kernelName:ao,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{let{varianceEpsilon:n}=t,[o,s,a,i]=e,l=i==null?ue(1):i,u=St(s.shape,o.shape),c=[];if(s.rank===1){for(let _=0;_<o.shape.length-1;++_)c.push(o.shape[_]);c.push(1)}let p=ce(o,s),m=P(r,l),f=Mu(Q(a,ue(n))),d=P(P(P(f,f),f),ue(-.5));return{x:()=>s.rank===1?z(P(P(r,zn(z(f,[1,1,1,s.shape[0]]),c)),l),o.shape):z(P(P(r,f),l),o.shape),mean:()=>{let _=P(P(f,ue(-1)),m);return s.rank===1&&(_=we(_,u)),z(_,s.shape)},variance:()=>{let _=P(P(d,p),m);return s.rank===1&&(_=we(_,u)),z(_,s.shape)},scale:()=>{let _=P(p,f),k=P(r,_);return s.rank===1&&(k=we(k,u)),z(k,s.shape)},offset:()=>{let _=r;return s.rank===1&&(_=we(_,u)),z(_,s.shape)}}}};var $T={kernelName:ps,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{let[n,o]=e,{axis:s}=t,a=rr(s,n.shape)[0];return{x:()=>{let l=n.shape,u=o.size,c=l.slice(0,a),p=c.length,m=l.slice(s,l.length).slice(1),f=m.length,d=AT(0,p),h=AT(p+1,p+1+f),g=DT([c,[u],m]),x=z(r,g),b=z(o,[u]),w=DT([[p],d,h]),_=Ue(x,w),k=nf(_,b,n.shape[a]),E=Gm(w);return k=Ue(k,E),k},indices:()=>o}}};function AT(r,e){let t=[];for(let n=r;n<e;++n)t.push(n);return t}function DT(r){let e=[];for(let t=0;t<r.length;++t)for(let n=0;n<r[t].length;++n)e.push(r[t][n]);return e}var RT={kernelName:lo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>Se(t),b:()=>Se(n)}}};var FT={kernelName:ms,gradFunc:r=>({x:()=>ne(r,"float32")})};var OT={kernelName:mi,gradFunc:r=>({x:()=>Se(r)})};var PT={kernelName:fi,gradFunc:r=>({x:()=>Se(r)})};var MT={kernelName:di,gradFunc:r=>({x:()=>Se(r)})};var LT={kernelName:uo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{alpha:o}=t,s=Yt(n,0);return{x:()=>$t(s,r,P(r,o))}}};var zT={kernelName:xi,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,Q(t,1))}}};var BT={kernelName:co,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,ne(t,"float32"))}}};var VT={kernelName:Mb,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t;return{logits:()=>{let s=!0,a=Qt(n);return ce(r,P(we(r,o,s),a))}}}};function FH(r,e,t,n=5,o=1,s=1,a=.5){let i={x:r,y:e,dy:t},l={depthRadius:n,bias:o,alpha:s,beta:a};return D.runKernel(au,i,l)}var WT=S({localResponseNormalizationBackprop_:FH});var jT={kernelName:ca,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{depthRadius:s,bias:a,alpha:i,beta:l}=t;return{x:()=>WT(n,o,r,s,a,i,l)}}};function vg(r,e,t,n){return e.rank<t.rank&&(e=z(e,Vo(e.shape,n))),r.rank<t.rank&&(r=z(r,Vo(r.shape,n))),{x:()=>P(r,ne(Xr(t,e),r.dtype))}}var I_={kernelName:po,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{reductionIndices:o}=n,s=e[0],a=e[1],i=rr(o,s.shape),l=vg(r,a,s,i);return{x:()=>l.x()}}};var GT={kernelName:mo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>P(r,ne(Pr(t,n),"float32")),b:()=>P(r,ne(Ta(t,n),"float32"))}}};function OH(r,e,t,n,o,s=[1,1,1],a,i){let l=v(r,"dy","maxPool3dGrad"),u=v(e,"input","maxPool3dGrad"),c=v(t,"output","maxPool3dGrad"),p=l,m=u,f=c,d=!1;u.rank===4&&(d=!0,p=z(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=z(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=z(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),A(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),A(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),A(f.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`),A(Mt(o,s),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`),i!=null&&A(it(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);let h={dy:p,input:m,output:f},g={filterSize:n,strides:o,dilations:s,pad:a,dimRoundingMode:i},x=D.runKernel(uu,h,g);return d?z(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}var UT=S({maxPool3dGrad_:OH});var qT={kernelName:pa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,dilations:i,pad:l,dimRoundingMode:u}=t,c=i==null?[1,1,1]:i;return{x:()=>UT(r,n,o,s,a,c,l,u)}}};function PH(r,e,t,n,o,s,a){let i=v(r,"dy","maxPoolGrad"),l=v(e,"input","maxPoolGrad"),u=v(t,"output","maxPoolGrad");A(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),A(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),A(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),a!=null&&A(it(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);let c={dy:i,input:l,output:u},p={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return D.runKernel(lu,c,p)}var HT=S({maxPoolGrad_:PH});var KT={kernelName:fo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n,o]=e,{filterSize:s,strides:a,pad:i}=t;return{x:()=>HT(r,n,o,s,a,i)}}};var XT={kernelName:ho,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{axis:o}=t,s=rr(o,n.shape),i=Pw(n.shape,s)[1],l=ht(i);return{x:()=>{let c=n.shape.slice();s.forEach(f=>{c[f]=1});let p=z(r,c);return fe(P(p,Tr(n.shape,"float32")),l)}}}};var YT={kernelName:go,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{let n=t,{axis:o}=n,[s,a]=e,i=rr(o,s.shape),l=vg(r,a,s,i);return{x:()=>l.x()}}};var ZT={kernelName:xo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e;return{a:()=>P(r,ne(on(t,n),"float32")),b:()=>P(r,ne(Yt(t,n),"float32"))}}};var JT={kernelName:ma,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Oe(r,s,n.shape)}}};var QT={kernelName:bi,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Be(t.shape,n.shape);return{a:()=>{let i=St(t.shape,o);return i.length>0?z(we(r,i),t.shape):r},b:()=>{let i=P(r,qe(Ts(fe(t,n)))),l=St(n.shape,o);return l.length>0?z(we(i,l),n.shape):i}}}};var e1={kernelName:yo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Be(t.shape,n.shape);return{a:()=>{let i=P(r,ne(n,"float32")),l=St(t.shape,o);return l.length>0?z(we(i,l),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),l=St(n.shape,o);return l.length>0?z(we(i,l),n.shape):i}}}};var t1={kernelName:fs,gradFunc:r=>({x:()=>qe(r)})};var r1={kernelName:bo,inputsToSave:["indices"],gradFunc:(r,e)=>{let t=e[0];return{indices:()=>mt(t.shape,"float32")}}};var n1={kernelName:ds,gradFunc:r=>({x:()=>Se(r)})};var o1={kernelName:hs,saveAllInputs:!0,gradFunc:(r,e,t)=>{let{axis:n}=t;return pr(r,n).map(s=>()=>s)}};var S_={kernelName:wo,inputsToSave:["x"],gradFunc:(r,e,t)=>{let n=e[0],{paddings:o}=t,s=o.map(a=>a[0]);return{x:()=>Oe(r,s,n.shape)}}};var s1={kernelName:_o,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{let[t,n,o]=e,s=t,a=n,i=Be(s.shape,a.shape);return{a:()=>{let c=ne(a,"float32"),p=P(r,P(c,_r(s,ce(c,ue(1))))),m=St(s.shape,i);return m.length>0&&(p=we(p,m)),z(p,s.shape)},b:()=>{let c=Yt(s,0),p=$t(c,lr(s),Se(s)),m=P(r,P(o,p)),f=St(a.shape,i);return f.length>0&&(m=we(m,f)),z(m,a.shape)}}}};var i1={kernelName:vo,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{let[t,n]=e,o=Yt(t,0);return{x:()=>$t(o,r,P(r,n)),alpha:()=>{let s=$t(o,Se(r),P(r,t)),a=St(n.shape,r.shape);return a.length>0&&(s=we(s,a)),z(s,n.shape)}}}};var a1={kernelName:no,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Be(t.shape,n.shape);return{a:()=>{let i=fe(r,ne(n,"float32")),l=St(t.shape,o);return l.length>0?z(we(i,l),t.shape):i},b:()=>{let i=P(r,ne(t,"float32")),l=St(n.shape,o);l.length>0&&(i=z(we(i,l),n.shape));let u=Me(n);return qe(fe(i,ne(u,"float32")))}}}};var l1={kernelName:Ii,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,qe(Me(t)))}}};var u1={kernelName:Io,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e,n=P(on(t,6),Ds(t));return{x:()=>P(r,ne(n,"float32"))}}};var c1={kernelName:ko,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,ne(Ds(t),"float32"))}}};var p1={kernelName:gs,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>z(r,t.shape)}}};var m1={kernelName:Co,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(du,o,t)}}};var f1={kernelName:da,inputsToSave:["images"],gradFunc:(r,e,t)=>{let[n]=e,o={dy:r,images:n};return{images:()=>D.runKernel(fu,o,t)}}};var d1={kernelName:So,gradFunc:(r,e,t)=>{let{dims:n}=t,o=rr(n,r.shape);return{x:()=>Zt(r,o)}}};var h1={kernelName:No,gradFunc:r=>({x:()=>Se(r)})};var g1={kernelName:To,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>qe(fe(r,P(_r(t,1.5),2)))}}};var x1={kernelName:xs,inputsToSave:["condition"],gradFunc:(r,e)=>{let[t]=e;return{condition:()=>ne(Se(t),"float32"),t:()=>P(r,ne(t,r.dtype)),e:()=>P(r,ne(Ea(t),r.dtype))}}};var y1={kernelName:Ni,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>{let n=Yt(t,ue(0)),o=ue(k_),s=ue(C_),a=P(r,s),i=P(P(r,o),Qt(ne(t,"float32")));return $t(n,a,i)}}}};var b1={kernelName:Ao,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,P(t,ce(ue(1),t)))}}};var w1={kernelName:Ei,gradFunc:r=>({x:()=>Se(r)})};var _1={kernelName:Eo,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(Ia(ne(t,"float32")),r)}}};var v1={kernelName:Ti,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(Nu(ne(t,"float32")),r)}}};var k1={kernelName:ys,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{begin:o,size:s}=t,a=n.shape,[i,l]=pw(n,o,s),u=[];for(let c=0;c<r.rank;c++)u.push([i[c],a[c]-i[c]-l[c]]);return{x:()=>Mr(r,u)}}};var C1={kernelName:Ro,outputsToSave:[!0],gradFunc:(r,e,t)=>{let[n]=e,{dim:o}=t,s=!0,a=P(r,n);return{logits:()=>ce(a,P(we(a,[o],s),n))}}};var I1={kernelName:Ai,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,Hr(t))}}};var N_={kernelName:ha,gradFunc:(r,e,t)=>{let{blockShape:n,paddings:o}=t;return{x:()=>Ca(r,n,o)}}};var T_={kernelName:bs,gradFunc:(r,e,t)=>{let{axis:n}=t;return{x:()=>et(r,n)}}};var S1={kernelName:Do,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,P(bt(ne(t,"float32")),2))}}};var N1={kernelName:ga,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(r,P(ne(t,"float32"),2))}}};var T1={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=ue(2);return{a:()=>P(r,P(o,ce(t,n))),b:()=>P(r,P(o,ce(n,t)))}}};var E1={kernelName:On,gradFunc:r=>({x:()=>Se(r)})};var A1={kernelName:Oo,inputsToSave:["a","b"],gradFunc:(r,e)=>{let[t,n]=e,o=Be(t.shape,n.shape);return{a:()=>{let i=r,l=St(t.shape,o);return l.length>0&&(i=we(i,l)),z(i,t.shape)},b:()=>{let i=r,l=St(n.shape,o);return l.length>0&&(i=we(i,l)),z(qe(i),n.shape)}}}};var D1={kernelName:$o,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,o=n.shape.slice(),{axis:s}=t;rr(s,n.shape).forEach(u=>{o[u]=1});let i=z(r,o),l=P(i,Tr(n.shape,"float32"));return{x:()=>l}}};var $1={kernelName:$i,inputsToSave:["x"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>fe(r,Me(Ia(t)))}}};var R1={kernelName:Po,outputsToSave:[!0],gradFunc:(r,e)=>{let[t]=e;return{x:()=>P(ce(ue(1),Me(t)),r)}}};var F1={kernelName:_n,inputsToSave:["x"],gradFunc:(r,e,t)=>{let[n]=e,{reps:o}=t;return{x:()=>{let a=Se(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Q(a,Oe(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)a=Q(a,Oe(r,[i*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)a=Q(a,Oe(r,[i*n.shape[0],l*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)for(let c=0;c<o[3];++c)a=Q(a,Oe(r,[i*n.shape[0],l*n.shape[1],u*n.shape[2],c*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var O1={kernelName:Mo,gradFunc:(r,e,t)=>{let n=t,{perm:o}=n,s=Gm(o);return{x:()=>Ue(r,s)}}};var P1={kernelName:ws,gradFunc:(r,e,t)=>{let n=t,{axis:o}=n;return{value:()=>jt(r,o)}}};var M1={kernelName:xa,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{let[t]=e;return{x:()=>MH(r,t)}}};function MH(r,e){let t=Nr(e,Se(e)),n=Bo(r,t),o=Pr(e,ue(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=wr(o,i+1);o=hr(o,Tr(n.shape,"bool"));let a=Se(n);return $t(o,n,a)}var L1={kernelName:_s,gradFunc:r=>({x:()=>Se(r)})};var LH=[_g,GN,UN,qN,HN,KN,XN,YN,ZN,JN,QN,eT,rT,oT,sT,iT,aT,lT,uT,cT,pT,mT,dT,fT,gT,xT,yT,bT,wT,_T,a1,vT,kT,CT,IT,ST,TT,NT,ET,$T,RT,FT,OT,PT,MT,LT,zT,BT,VT,jT,I_,I_,GT,qT,KT,XT,YT,ZT,JT,QT,e1,t1,r1,n1,o1,S_,S_,s1,i1,l1,u1,c1,p1,m1,f1,d1,h1,g1,x1,y1,b1,w1,_1,v1,k1,C1,I1,N_,N_,T_,T_,S1,T1,N1,E1,A1,D1,$1,R1,F1,O1,P1,M1,L1];for(let r of LH)zb(r);R.prototype.abs=function(){return this.throwIfDisposed(),Et(this)};R.prototype.acos=function(){return this.throwIfDisposed(),Nm(this)};R.prototype.acosh=function(){return this.throwIfDisposed(),Tm(this)};R.prototype.addStrict=function(r){return this.throwIfDisposed(),s_(this,r)};R.prototype.add=function(r){return this.throwIfDisposed(),Q(this,r)};R.prototype.all=function(r,e){return this.throwIfDisposed(),vu(this,r,e)};R.prototype.any=function(r,e){return this.throwIfDisposed(),ll(this,r,e)};R.prototype.argMax=function(r){return this.throwIfDisposed(),ul(this,r)};R.prototype.argMin=function(r){return this.throwIfDisposed(),Em(this,r)};R.prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),z(this,[])};R.prototype.asType=function(r){return this.throwIfDisposed(),ne(this,r)};R.prototype.as1D=function(){return this.throwIfDisposed(),z(this,[this.size])};R.prototype.as2D=function(r,e){return this.throwIfDisposed(),z(this,[r,e])};R.prototype.as3D=function(r,e,t){return this.throwIfDisposed(),z(this,[r,e,t])};R.prototype.as4D=function(r,e,t,n){return this.throwIfDisposed(),z(this,[r,e,t,n])};R.prototype.as5D=function(r,e,t,n,o){return this.throwIfDisposed(),z(this,[r,e,t,n,o])};R.prototype.asin=function(){return this.throwIfDisposed(),Am(this)};R.prototype.asinh=function(){return this.throwIfDisposed(),Dm(this)};R.prototype.atan=function(){return this.throwIfDisposed(),$m(this)};R.prototype.atan2=function(r){return this.throwIfDisposed(),Rm(this,r)};R.prototype.atanh=function(){return this.throwIfDisposed(),Fm(this)};R.prototype.avgPool=function(r,e,t,n){return this.throwIfDisposed(),ka(this,r,e,t,n)};R.prototype.batchToSpaceND=function(r,e){return this.throwIfDisposed(),Ca(this,r,e)};R.prototype.batchNorm=function(r,e,t,n,o){return this.throwIfDisposed(),zo(this,r,e,t,n,o)};R.prototype.broadcastTo=function(r){return this.throwIfDisposed(),cl(this,r)};R.prototype.cast=function(r){return this.throwIfDisposed(),ne(this,r)};R.prototype.ceil=function(){return this.throwIfDisposed(),Pm(this)};R.prototype.clipByValue=function(r,e){return this.throwIfDisposed(),ar(this,r,e)};R.prototype.concat=function(r,e){return this.throwIfDisposed(),r instanceof R&&(r=[r]),et([this,...r],e)};R.prototype.conv1d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Iu(this,r,e,t,n,o,s)};R.prototype.conv2dTranspose=function(r,e,t,n,o){return this.throwIfDisposed(),Su(this,r,e,t,n,o)};R.prototype.conv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Kr(this,r,e,t,n,o,s)};R.prototype.cos=function(){return this.throwIfDisposed(),Ia(this)};R.prototype.cosh=function(){return this.throwIfDisposed(),Nu(this)};R.prototype.cumsum=function(r,e,t){return this.throwIfDisposed(),Tu(this,r,e,t)};R.prototype.depthToSpace=function(r,e){return this.throwIfDisposed(),Lm(this,r,e)};R.prototype.depthwiseConv2D=function(r,e,t,n,o,s){return Pt("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Ln(this,r,e,t,n,o,s)};R.prototype.depthwiseConv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Ln(this,r,e,t,n,o,s)};R.prototype.dilation2d=function(r,e,t,n,o){return this.throwIfDisposed(),zm(this,r,e,t,n,o)};R.prototype.divNoNan=function(r){return this.throwIfDisposed(),Bm(this,r)};R.prototype.divStrict=function(r){return this.throwIfDisposed(),i_(this,r)};R.prototype.div=function(r){return this.throwIfDisposed(),fe(this,r)};R.prototype.dot=function(r){return this.throwIfDisposed(),Ew(this,r)};R.prototype.elu=function(){return this.throwIfDisposed(),Ns(this)};R.prototype.equalStrict=function(r){return this.throwIfDisposed(),Qw(this,r)};R.prototype.equal=function(r){return this.throwIfDisposed(),Xr(this,r)};R.prototype.erf=function(){return this.throwIfDisposed(),Vm(this)};R.prototype.exp=function(){return this.throwIfDisposed(),Qt(this)};R.prototype.expandDims=function(r){return this.throwIfDisposed(),wr(this,r)};R.prototype.expm1=function(){return this.throwIfDisposed(),Wm(this)};R.prototype.fft=function(){return this.throwIfDisposed(),Fa(this)};R.prototype.flatten=function(){return this.throwIfDisposed(),z(this,[this.size])};R.prototype.floor=function(){return this.throwIfDisposed(),Ts(this)};R.prototype.floorDiv=function(r){return this.throwIfDisposed(),_u(this,r)};R.prototype.gather=function(r,e){return this.throwIfDisposed(),Bo(this,r,e)};R.prototype.greaterEqualStrict=function(r){return this.throwIfDisposed(),e_(this,r)};R.prototype.greaterEqual=function(r){return this.throwIfDisposed(),Pr(this,r)};R.prototype.greaterStrict=function(r){return this.throwIfDisposed(),t_(this,r)};R.prototype.greater=function(r){return this.throwIfDisposed(),Yt(this,r)};R.prototype.ifft=function(){return this.throwIfDisposed(),Bi(this)};R.prototype.irfft=function(){return this.throwIfDisposed(),Vu(this)};R.prototype.isFinite=function(){return this.throwIfDisposed(),Aw(this)};R.prototype.isInf=function(){return this.throwIfDisposed(),Dw(this)};R.prototype.isNaN=function(){return this.throwIfDisposed(),$w(this)};R.prototype.leakyRelu=function(r){return this.throwIfDisposed(),Na(this,r)};R.prototype.lessEqualStrict=function(r){return this.throwIfDisposed(),r_(this,r)};R.prototype.lessEqual=function(r){return this.throwIfDisposed(),on(this,r)};R.prototype.lessStrict=function(r){return this.throwIfDisposed(),n_(this,r)};R.prototype.less=function(r){return this.throwIfDisposed(),Ta(this,r)};R.prototype.localResponseNormalization=function(r,e,t,n){return this.throwIfDisposed(),jm(this,r,e,t,n)};R.prototype.logSigmoid=function(){return this.throwIfDisposed(),Fw(this)};R.prototype.logSoftmax=function(r){return this.throwIfDisposed(),Du(this,r)};R.prototype.logSumExp=function(r,e){return this.throwIfDisposed(),Um(this,r,e)};R.prototype.log=function(){return this.throwIfDisposed(),lr(this)};R.prototype.log1p=function(){return this.throwIfDisposed(),Au(this)};R.prototype.logicalAnd=function(r){return this.throwIfDisposed(),hr(this,r)};R.prototype.logicalNot=function(){return this.throwIfDisposed(),Ea(this)};R.prototype.logicalOr=function(r){return this.throwIfDisposed(),$u(this,r)};R.prototype.logicalXor=function(r){return this.throwIfDisposed(),Lw(this,r)};R.prototype.matMul=function(r,e,t){return this.throwIfDisposed(),Ge(this,r,e,t)};R.prototype.maxPool=function(r,e,t,n){return this.throwIfDisposed(),Aa(this,r,e,t,n)};R.prototype.max=function(r,e){return this.throwIfDisposed(),ur(this,r,e)};R.prototype.maximumStrict=function(r){return this.throwIfDisposed(),a_(this,r)};R.prototype.maximum=function(r){return this.throwIfDisposed(),Nr(this,r)};R.prototype.mean=function(r,e){return this.throwIfDisposed(),yt(this,r,e)};R.prototype.min=function(r,e){return this.throwIfDisposed(),zi(this,r,e)};R.prototype.minimumStrict=function(r){return this.throwIfDisposed(),l_(this,r)};R.prototype.minimum=function(r){return this.throwIfDisposed(),Bn(this,r)};R.prototype.mirrorPad=function(r,e){return this.throwIfDisposed(),Hm(this,r,e)};R.prototype.modStrict=function(r){return this.throwIfDisposed(),u_(this,r)};R.prototype.mod=function(r){return this.throwIfDisposed(),Ru(this,r)};R.prototype.mulStrict=function(r){return this.throwIfDisposed(),c_(this,r)};R.prototype.mul=function(r){return this.throwIfDisposed(),P(this,r)};R.prototype.neg=function(){return this.throwIfDisposed(),qe(this)};R.prototype.norm=function(r,e,t){return this.throwIfDisposed(),ju(this,r,e,t)};R.prototype.notEqualStrict=function(r){return this.throwIfDisposed(),o_(this,r)};R.prototype.notEqual=function(r){return this.throwIfDisposed(),kn(this,r)};R.prototype.oneHot=function(r,e=1,t=0){return this.throwIfDisposed(),Is(this,r,e,t)};R.prototype.onesLike=function(){return this.throwIfDisposed(),nr(this)};R.prototype.pad=function(r,e){return this.throwIfDisposed(),Mr(this,r,e)};R.prototype.pool=function(r,e,t,n,o){return this.throwIfDisposed(),Vw(this,r,e,t,n,o)};R.prototype.powStrict=function(r){return this.throwIfDisposed(),p_(this,r)};R.prototype.pow=function(r){return this.throwIfDisposed(),_r(this,r)};R.prototype.prelu=function(r){return this.throwIfDisposed(),$a(this,r)};R.prototype.prod=function(r,e){return this.throwIfDisposed(),Fu(this,r,e)};R.prototype.reciprocal=function(){return this.throwIfDisposed(),Km(this)};R.prototype.relu=function(){return this.throwIfDisposed(),Er(this)};R.prototype.relu6=function(){return this.throwIfDisposed(),Pu(this)};R.prototype.reshapeAs=function(r){return this.throwIfDisposed(),z(this,r.shape)};R.prototype.reshape=function(r){return this.throwIfDisposed(),z(this,r)};R.prototype.resizeBilinear=function(r,e,t){return this.throwIfDisposed(),yg(this,r,e,t)};R.prototype.resizeNearestNeighbor=function(r,e,t){return this.throwIfDisposed(),bg(this,r,e,t)};R.prototype.reverse=function(r){return this.throwIfDisposed(),Zt(this,r)};R.prototype.rfft=function(){return this.throwIfDisposed(),Oa(this)};R.prototype.round=function(){return this.throwIfDisposed(),Xm(this)};R.prototype.rsqrt=function(){return this.throwIfDisposed(),Mu(this)};R.prototype.selu=function(){return this.throwIfDisposed(),Lu(this)};R.prototype.separableConv2d=function(r,e,t,n,o,s){return this.throwIfDisposed(),Ym(this,r,e,t,n,o,s)};R.prototype.sigmoid=function(){return this.throwIfDisposed(),Hr(this)};R.prototype.sign=function(){return this.throwIfDisposed(),Zm(this)};R.prototype.sin=function(){return this.throwIfDisposed(),zu(this)};R.prototype.sinh=function(){return this.throwIfDisposed(),Bu(this)};R.prototype.slice=function(r,e){return this.throwIfDisposed(),Oe(this,r,e)};R.prototype.softmax=function(r){return this.throwIfDisposed(),Ra(this,r)};R.prototype.softplus=function(){return this.throwIfDisposed(),Es(this)};R.prototype.spaceToBatchND=function(r,e){return this.throwIfDisposed(),Da(this,r,e)};R.prototype.split=function(r,e){return this.throwIfDisposed(),cr(this,r,e)};R.prototype.sqrt=function(){return this.throwIfDisposed(),bt(this)};R.prototype.square=function(){return this.throwIfDisposed(),Me(this)};R.prototype.squaredDifference=function(r){return this.throwIfDisposed(),Pa(this,r)};R.prototype.squaredDifferenceStrict=function(r){return this.throwIfDisposed(),m_(this,r)};R.prototype.squeeze=function(r){return this.throwIfDisposed(),Cn(this,r)};R.prototype.stack=function(r,e){this.throwIfDisposed();let t=r instanceof R?[this,r]:[this,...r];return jt(t,e)};R.prototype.step=function(r){return this.throwIfDisposed(),Ds(this,r)};R.prototype.stridedSlice=function(r,e,t,n,o,s,a,i){return this.throwIfDisposed(),ef(this,r,e,t,n,o,s,a,i)};R.prototype.subStrict=function(r){return this.throwIfDisposed(),f_(this,r)};R.prototype.sub=function(r){return this.throwIfDisposed(),ce(this,r)};R.prototype.sum=function(r,e){return this.throwIfDisposed(),we(this,r,e)};R.prototype.tan=function(){return this.throwIfDisposed(),tf(this)};R.prototype.tanh=function(){return this.throwIfDisposed(),Li(this)};R.prototype.tile=function(r){return this.throwIfDisposed(),zn(this,r)};R.prototype.toBool=function(){return this.throwIfDisposed(),ne(this,"bool")};R.prototype.toFloat=function(){return this.throwIfDisposed(),ne(this,"float32")};R.prototype.toInt=function(){return this.throwIfDisposed(),ne(this,"int32")};R.prototype.topk=function(r,e){return this.throwIfDisposed(),rf(this,r,e)};R.prototype.transpose=function(r){return this.throwIfDisposed(),Ue(this,r)};R.prototype.unique=function(r){return this.throwIfDisposed(),ep(this,r)};R.prototype.unsortedSegmentSum=function(r,e){return this.throwIfDisposed(),nf(this,r,e)};R.prototype.unstack=function(r){return this.throwIfDisposed(),pr(this,r)};R.prototype.where=function(r,e){return this.throwIfDisposed(),$t(r,this,e)};R.prototype.zerosLike=function(){return this.throwIfDisposed(),Se(this)};function te(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}var zH=Dr.whereImpl,kg=class extends Us{constructor(){super();this.blockSize=48,this.firstUse=!0,this.data=new el(this,Ss())}write(e,t,n){this.firstUse&&(this.firstUse=!1,G().get("IS_NODE")&&N.warn(`
============================
Hi there \u{1F44B}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));let o={};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(a=>y.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,o){this.data.set(e,{values:t,dtype:o,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(o,s)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>y.decodeString(o))}catch(o){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ie(e.shape,e.dtype,n)}makeOutput(e,t,n){let o=this.write(e,t,n);return Ss().makeTensorFromDataId(o,t,n,this)}disposeData(e){if(this.data.has(e)){let{complexTensorInfos:t}=this.data.get(e);t!=null&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){let t=e.dataId;if(this.data.has(t)){let n=this.data.get(t);n.refCount--,n.refCount<1&&this.disposeData(t)}}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){te([e],"where");let t=this.readSync(e.dataId);return zH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};var Ig={};Ze(Ig,{addImpl:()=>U1,bincountImpl:()=>uf,bincountReduceImpl:()=>E_,ceilImpl:()=>H1,concatImpl:()=>cf,expImpl:()=>X1,expm1Impl:()=>Z1,floorImpl:()=>Q1,gatherV2Impl:()=>D_,greaterImpl:()=>tE,lessImpl:()=>nE,linSpaceImpl:()=>$_,logImpl:()=>sE,maxImpl:()=>R_,maximumImpl:()=>aE,minimumImpl:()=>uE,multiplyImpl:()=>Cg,negImpl:()=>mE,notEqualImpl:()=>dE,prodImpl:()=>xE,rangeImpl:()=>ff,rsqrtImpl:()=>bE,simpleAbsImpl:()=>z1,sliceImpl:()=>df,squaredDifferenceImpl:()=>vE,stridedSliceImpl:()=>F_,subImpl:()=>CE,tileImpl:()=>O_,topKImpl:()=>P_,transposeImpl:()=>mf,uniqueImpl:()=>M_});function z1(r){let e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}var BH=r=>{let{x:e}=r.inputs,t=r.backend;te(e,"abs");let n=new Float32Array(y.sizeFromShape(e.shape)),o=t.data.get(e.dataId).values;return n=z1(o),t.makeOutput(n,e.shape,"float32")},B1={kernelName:ls,backendName:"cpu",kernelFunc:BH};function Je(r){return(e,t,n,o,s)=>{let a=N.assertAndGetBroadcastShape(e,t),i=a.length,l=y.computeStrides(a),u=y.sizeFromShape(a),c=y.getTypedArrayFromDType(s,u),p=e.length,m=t.length,f=y.computeStrides(e),d=y.computeStrides(t),h=N.getBroadcastDims(e,a),g=N.getBroadcastDims(t,a);if(h.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=r(n[x%n.length],o[x%o.length]);else for(let x=0;x<c.length;++x){let b=y.indexToLoc(x,i,l),w=b.slice(-p);h.forEach(T=>w[T]=0);let _=y.locToIndex(w,p,f),k=b.slice(-m);g.forEach(T=>k[T]=0);let E=y.locToIndex(k,m,d);c[x]=r(n[_],o[E])}return[c,a]}}function mr(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),l=t.data.get(i.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",s),imag:t.makeTensorInfo(o.shape,"float32",a)},i}var V1={kernelName:Kl,backendName:"cpu",kernelFunc:mr};function lp(r,e,t="float32"){if(t==="complex64"){let o=lp(r,e,"float32"),s=lp(r,e,"float32");return mr({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(e),t);return r.makeTensorInfo(e,t,n)}function $r(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var W1={kernelName:ms,backendName:"cpu",kernelFunc:$r};function Go(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var j1={kernelName:mu,backendName:"cpu",kernelFunc:Go};function Uo(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return $r({inputs:{x:o},backend:t});let a=lp(t,o.shape,o.dtype),i=Uo({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=mr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}if(o.dtype==="complex64"){let a=Go({inputs:{input:o},backend:t}),i=Uo({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=$r({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32"){let a=t.data.get(o.dataId).values,i=Int32Array.from(a);return t.makeTensorInfo(o.shape,"int32",i)}if(s==="bool"){let a=t.data.get(o.dataId).values,i=y.toTypedArray([0],o.dtype),[l,u]=Je((c,p)=>c!==p?1:0)(o.shape,[],a,i,"bool");return t.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var G1={kernelName:Rn,backendName:"cpu",kernelFunc:Uo};function ot(r,e,t,n){return t==null?({inputs:o,backend:s})=>{let{a,b:i}=o,l=s;te([a,i],r);let u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,p=n||a.dtype,[m,f]=e(a.shape,i.shape,u,c,p);return l.makeTensorInfo(f,p,m)}:({inputs:o,backend:s})=>{let{a,b:i}=o,l=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let u=Uo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=l.data.get(p.dataId).values,d=l.data.get(m.dataId).values,h=Uo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(h.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(x.dataId).values,_=l.data.get(b.dataId).values,[k,E,T]=t(a.shape,i.shape,f,d,w,_),F=l.makeTensorInfo(T,"float32",k),O=l.makeTensorInfo(T,"float32",E),M=mr({inputs:{real:F,imag:O},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(F),l.disposeIntermediateTensorInfo(O),M}else{let u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,p=n||a.dtype,[m,f]=e(a.shape,i.shape,u,c,p);return l.makeTensorInfo(f,p,m)}}}function up(r){return(e,t,n,o,s,a)=>{let i=N.assertAndGetBroadcastShape(e,t),l=y.sizeFromShape(i),u=i.length,c=y.computeStrides(i),p=y.getTypedArrayFromDType("float32",l),m=y.getTypedArrayFromDType("float32",l),f=N.getBroadcastDims(e,i),d=N.getBroadcastDims(t,i),h=N.mergeRealAndImagArrays(n,o),g=N.mergeRealAndImagArrays(s,a),x=e.length,b=y.computeStrides(e),w=t.length,_=y.computeStrides(t);if(f.length+d.length===0)for(let k=0;k<p.length;k++){let E=k%h.length,T=k%g.length,F=r(h[E*2],h[E*2+1],g[T*2],g[T*2+1]);p[k]=F.real,m[k]=F.imag}else for(let k=0;k<p.length;k++){let E=y.indexToLoc(k,u,c),T=E.slice(-x);f.forEach(W=>T[W]=0);let F=y.locToIndex(T,x,b),O=E.slice(-w);d.forEach(W=>O[W]=0);let M=y.locToIndex(O,w,_),j=r(h[F*2],h[F*2+1],g[M*2],g[M*2+1]);p[k]=j.real,m[k]=j.imag}return[p,m,i]}}var U1=Je((r,e)=>r+e),VH=up((r,e,t,n)=>({real:r+t,imag:e+n})),La=ot(wn,U1,VH),q1={kernelName:wn,backendName:"cpu",kernelFunc:La};function uf(r,e,t,n,o){let s=y.sizeFromShape(n),a=y.makeZerosTypedArray(o,t);for(let i=0;i<r.length;i++){let l=r[i];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(s>0?a[l]+=e[i]:a[l]+=1)}return a}function E_(r,e,t,n=!1){let o=r.shape[0],s=r.shape[1],a=Ie([o,t],e.dtype);for(let i=0;i<o;i++)for(let l=0;l<s;l++){let u=r.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(n?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,l),i,u):a.set(a.get(i,u)+1,i,u))}return a}function qo(r){return(e,t,n)=>{let o=y.getTypedArrayFromDType(t,e.length);for(let s=0;s<e.length;++s)o[s]=r(e[s],n);return o}}function Re(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(te(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,l=i.data.get(a.dataId).values,u=y.sizeFromShape(a.shape),c=t||a.dtype,p=y.getArrayFromDType(c,u);for(let m=0;m<u;++m)p[m]=e(l[m],o);return i.makeTensorInfo(a.shape,c,p)}}function Ho(r,e,t){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;if(te(a,r),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");let i=s,l=i.data.get(a.dataId).values,u=t||a.dtype,c=e(l,u,o);return i.makeTensorInfo(a.shape,u,c)}}var H1=qo(r=>Math.ceil(r)),WH=Ho(ti,H1),K1={kernelName:ti,backendName:"cpu",kernelFunc:WH};function cf(r,e,t,n){let o=y.getArrayFromDType(t,y.sizeFromShape(e));if(n&&t!=="string"){let s=0;r.forEach(a=>{let i=y.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=t==="string"?N.fromUint8ToStringArray(a.vals):a.vals,l=0;for(let u=0;u<a.shape[0];++u){let c=u*e[1]+s;for(let p=0;p<a.shape[1];++p)o[c+p]=i[l++]}s+=a.shape[1]})}return o}var X1=qo(r=>Math.exp(r)),A_=Ho(oo,X1),Y1={kernelName:oo,backendName:"cpu",kernelFunc:A_};var Z1=qo(r=>Math.expm1(r)),jH=Ho(li,Z1),J1={kernelName:li,backendName:"cpu",kernelFunc:jH};var Q1=qo(r=>Math.floor(r)),GH=Ho(so,Q1),eE={kernelName:so,backendName:"cpu",kernelFunc:GH};function D_(r,e,t){let n=Ie(t,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],l=a[2],u=e.locToIndex([i,l]);a[2]=e.values[u];let c=r.locToIndex(a);n.values[o]=r.values[c]}return n}var tE=Je((r,e)=>r>e?1:0),UH=ot(pi,tE,null,"bool"),rE={kernelName:pi,backendName:"cpu",kernelFunc:UH};var nE=Je((r,e)=>r<e?1:0),qH=ot(hi,nE,null,"bool"),oE={kernelName:hi,backendName:"cpu",kernelFunc:qH};function $_(r,e,t){let n=(e-r)/(t-1),o=y.makeZerosTypedArray(t,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var sE=qo(r=>Math.log(r)),HH=Ho(co,sE),iE={kernelName:co,backendName:"cpu",kernelFunc:HH};function R_(r,e,t,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(t));for(let s=0;s<o.length;++s){let a=s*e,i=r[a];for(let l=0;l<e;++l){let u=r[a+l];u>i&&(i=u)}o[s]=i}return o}var aE=Je((r,e)=>Math.max(r,e)),KH=ot(mo,aE),lE={kernelName:mo,backendName:"cpu",kernelFunc:KH};var uE=Je((r,e)=>Math.min(r,e)),XH=ot(xo,uE),cE={kernelName:xo,backendName:"cpu",kernelFunc:XH};var Cg=Je((r,e)=>r*e),YH=up((r,e,t,n)=>({real:r*t-e*n,imag:r*n+e*t})),pf=ot(yo,Cg,YH),pE={kernelName:yo,backendName:"cpu",kernelFunc:pf};function mE(r,e,t){let n=y.createScalarValue(-1,t);return Cg([],e,n,r,t)}function ZH(r){let{inputs:e,backend:t}=r,{x:n}=e;te(n,"neg");let o=t.data.get(n.dataId).values,[s,a]=mE(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,s)}var fE={kernelName:fs,backendName:"cpu",kernelFunc:ZH};var dE=Je((r,e)=>r!==e?1:0),JH=ot(wi,dE,null,"bool"),hE={kernelName:wi,backendName:"cpu",kernelFunc:JH};function mf(r,e,t,n,o){let s=e.length,a=y.sizeFromShape(e),i=y.computeStrides(e),l=y.computeStrides(o),u=y.getTypedArrayFromDType(t,y.sizeFromShape(o));for(let c=0;c<a;++c){let p=y.indexToLoc(c,s,i),m=new Array(p.length);for(let d=0;d<m.length;d++)m[d]=p[n[d]];let f=y.locToIndex(m,s,l);u[f]=r[c]}return u}function or(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{perm:s}=t;te(o,"transpose");let a=o.shape.length,i=new Array(a);for(let p=0;p<i.length;p++)i[p]=o.shape[s[p]];let l=n.data.get(o.dataId).values,u=mf(l,o.shape,o.dtype,s,i);return{dataId:n.write(u,i,o.dtype),shape:i,dtype:o.dtype}}var gE={kernelName:Mo,backendName:"cpu",kernelFunc:or};function xE(r,e,t,n){let[o,s]=N.computeOutAndReduceShapes(r,n),a=dr(e,"int32"),i=y.makeZerosTypedArray(y.sizeFromShape(o),a),l=y.sizeFromShape(s);for(let u=0;u<i.length;++u){let c=u*l,p=1;for(let m=0;m<l;++m)p*=t[c+m];i[u]=p}return{outVals:i,outShape:o,outDtype:a}}function QH(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;te(o,"prod");let i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=N.getAxesPermutation(l,i),c=l,p=o,m=[];u!=null&&(p=or({inputs:{x:o},backend:t,attrs:{perm:u}}),m.push(p),c=N.getInnerMostAxes(c.length,i));let f=t.data.get(p.dataId).values,{outVals:d,outShape:h,outDtype:g}=xE(p.shape,p.dtype,f,c),x=h;return a&&(x=N.expandShapeToKeepDim(h,l)),m.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.makeTensorInfo(x,g,d)}var yE={kernelName:Ci,backendName:"cpu",kernelFunc:QH};function ff(r,e,t,n){let o=r===e,s=r<e&&t<0,a=e<r&&t>1;if(o||s||a)return y.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((e-r)/t)),l=y.makeZerosTypedArray(i,n);e<r&&t===1&&(t=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}var bE=qo(r=>1/Math.sqrt(r)),eK=Ho(To,bE),wE={kernelName:To,backendName:"cpu",kernelFunc:eK};function df(r,e,t,n,o){let s=ir.isSliceContinous(n,e,t),a=y.sizeFromShape(t),i=y.computeStrides(n);if(s){let p=ir.computeFlatOffset(e,i);return o==="string"?r.slice(p,p+a):r.subarray(p,p+a)}let l=o==="string"?N.fromUint8ToStringArray(r):r,u=Ie(n,o,l),c=Ie(t,o);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((d,h)=>d+e[h]);c.set(u.get(...f),...m)}return o==="string"?N.fromStringArrayToUint8(c.values):c.values}function Ko(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n;te(o,"slice");let[i,l]=ir.parseSliceParams(o,s,a);ir.assertParamsValid(o,i,l);let u=t.data.get(o.dataId).values,c=df(u,i,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,c)}var _E={kernelName:ys,backendName:"cpu",kernelFunc:Ko};var vE=Je((r,e)=>{let t=r-e;return t*t}),tK=ot(Fo,vE),kE={kernelName:Fo,backendName:"cpu",kernelFunc:tK};function F_(r,e,t,n){let o=Ie(r,e.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*t[l]+n[l];o.set(e.get(...i),...a)}return o}var CE=Je((r,e)=>r-e),rK=up((r,e,t,n)=>({real:r-t,imag:e-n})),hf=ot(Oo,CE,rK),IE={kernelName:Oo,backendName:"cpu",kernelFunc:hf};function O_(r,e){let t=new Array(r.rank);for(let o=0;o<t.length;o++)t[o]=r.shape[o]*e[o];let n=Ie(t,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let l=0;l<a.length;l++)a[l]=s[l]%r.shape[l];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}function P_(r,e,t,n,o){let s=e[e.length-1],[a,i]=[r.length/s,s],l=y.getTypedArrayFromDType(t,a*n),u=y.getTypedArrayFromDType("int32",a*n);for(let p=0;p<a;p++){let m=p*i,f=r.subarray(m,m+i),d=[];for(let b=0;b<f.length;b++)d.push({value:f[b],index:b});d.sort((b,w)=>w.value-b.value);let h=p*n,g=l.subarray(h,h+n),x=u.subarray(h,h+n);for(let b=0;b<n;b++)g[b]=d[b].value,x[b]=d[b].index}let c=e.slice();return c[c.length-1]=n,[Ie(c,t,l),Ie(c,"int32",u)]}function M_(r,e,t,n){let o=y.parseAxisParam(e,t)[0],s=[1,t[0],1];for(let d=0;d<o;d++)s[0]*=t[d];s[1]=t[o];for(let d=o+1;d<t.length;d++)s[2]*=t[d];let a={},i=new Int32Array(t[o]),l=new pt(s,n,r),u=[],c=s[0]===1&&s[2]===1;for(let d=0;d<t[o];d++){let h;if(c)h=r[d].toString();else{let g=[];for(let x=0;x<s[0];x++)for(let b=0;b<s[2];b++)g.push(l.get(x,d,b));h=g.join(",")}if(a[h]!==void 0)i[d]=a[h];else{let g=Object.keys(a).length;a[h]=g,i[d]=g,u.push(d)}}let p=s.slice();p[1]=Object.keys(a).length;let m=new pt(p,n);u.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let x=0;x<s[2];x++)m.set(l.get(g,d,x),g,h,x)});let f=t.slice();return f[o]=p[1],{outputValues:m.values,outputShape:f,indices:i}}var L_="2.8.5";wu("cpu",()=>new kg,1);var z_=Re(si,r=>r>=0?r:Math.exp(r)-1),SE={kernelName:si,backendName:"cpu",kernelFunc:z_};function B_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n;te([o],"leakyRelu");let a=y.sizeFromShape(o.shape),i=t.data.get(o.dataId).values,l=y.getTypedArrayFromDType("float32",a);for(let u=0;u<i.length;u++)l[u]=i[u]<0?s*i[u]:i[u];return t.makeTensorInfo(o.shape,"float32",l)}var NE={kernelName:uo,backendName:"cpu",kernelFunc:B_};var nK=Je((r,e)=>r<0?e*r:r);function V_(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e;te([n,o],"prelu");let s=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,l]=nK(n.shape,o.shape,s,a,n.dtype);return t.makeTensorInfo(l,n.dtype,i)}var TE={kernelName:vo,backendName:"cpu",kernelFunc:V_};var W_=Re(ko,r=>Math.max(0,r)),EE={kernelName:ko,backendName:"cpu",kernelFunc:W_};var j_=Re(Io,r=>Math.min(Math.max(0,r),6)),AE={kernelName:Io,backendName:"cpu",kernelFunc:j_};function cp(r,e,t,n,o){if(t==="linear")return $r({inputs:{x:e},backend:r});if(t==="relu")return W_({inputs:{x:e},backend:r});if(t==="elu")return z_({inputs:{x:e},backend:r});if(t==="relu6")return j_({inputs:{x:e},backend:r});if(t==="prelu")return V_({inputs:{x:e,alpha:n},backend:r});if(t==="leakyrelu")return B_({inputs:{x:e},backend:r,attrs:{alpha:o}});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function rt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=y.sizeFromShape(o.shape),i=y.inferFromImplicitShape(s,a),l=y.sizeFromShape(i);y.assert(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);let u=t.data.get(o.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=i,p.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var DE={kernelName:gs,backendName:"cpu",kernelFunc:rt};function G_(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;te([o,s],"matMul");let l=o.shape.length,u=s.shape.length,c=a?o.shape[l-2]:o.shape[l-1],p=i?s.shape[u-1]:s.shape[u-2],m=a?o.shape[l-1]:o.shape[l-2],f=i?s.shape[u-2]:s.shape[u-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(d),x=y.sizeFromShape(h),b=g===x||g===1||x===1;y.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let _=(g>x?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);y.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let k=a?[g,c,m]:[g,m,c],E=i?[x,f,p]:[x,p,f],T=rt({inputs:{x:o},backend:t,attrs:{shape:k}}),F=rt({inputs:{x:s},backend:t,attrs:{shape:E}}),O=a?T.shape[1]:T.shape[2],M=a?T.shape[2]:T.shape[1],j=i?F.shape[1]:F.shape[2],W=Math.max(g,x),U=t.data.get(T.dataId).values,Y=t.data.get(F.dataId).values,K=y.computeStrides(T.shape),Z=y.computeStrides(F.shape),[re,X,oe]=a?[K[0],1,K[1]]:[K[0],K[1],1],[ae,ie,pe]=i?[1,Z[1],Z[0]]:[Z[1],1,Z[0]],le=M*j,ge=Ie([W,M,j],T.dtype),ye=ge.values,be=t.blockSize;for(let ke=0;ke<W;ke++)for(let Ae=0;Ae<M;Ae+=be)for(let $e=0;$e<j;$e+=be)for(let Fe=0;Fe<O;Fe+=be){let He=Math.min(Ae+be,M),ct=Math.min($e+be,j),kt=Math.min(Fe+be,O);for(let Ct=Ae;Ct<He;Ct++)for(let ft=$e;ft<ct;ft++){let It=0;for(let Ke=Fe;Ke<kt;Ke++){let Ot=Math.min(ke,g-1)*re,hn=Math.min(ke,x-1)*pe,tr=U[Ot+Ct*X+Ke*oe],gn=Y[Ke*ae+ft*ie+hn];It+=tr*gn}ye[ke*le+(Ct*j+ft)]+=It}}return t.disposeIntermediateTensorInfo(T),t.disposeIntermediateTensorInfo(F),t.makeTensorInfo(_,ge.dtype,ge.values)}var $E={kernelName:Zn,backendName:"cpu",kernelFunc:G_};function oK(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n,m,f,d,h=[];m=G_({inputs:{a:o,b:s},attrs:{transposeA:l,transposeB:u},backend:t}),a&&(f=La({inputs:{a:m,b:a},backend:t}),h.push(m),m=f),c&&(d=cp(t,m,c,i,p),h.push(m),m=d);for(let x of h)t.disposeIntermediateTensorInfo(x);return m}var RE={kernelName:vs,backendName:"cpu",kernelFunc:oK};var sK=Re(Ks,r=>Math.acos(r)),FE={kernelName:Ks,backendName:"cpu",kernelFunc:sK};var iK=Re(Xs,r=>Math.acosh(r)),OE={kernelName:Xs,backendName:"cpu",kernelFunc:iK};function aK(r){let{inputs:e,backend:t}=r,n=e;te(e,"addN");let o=n.map(i=>t.data.get(i.dataId).values),s=Ie(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let l=o[i];for(let u=0;u<a.length;u++)a[u]+=l[u]}return t.makeTensorInfo(s.shape,s.dtype,s.values)}var PE={kernelName:Kn,backendName:"cpu",kernelFunc:aK};function lK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;te(o,"all");let i=y.parseAxisParam(s,o.shape),l=i,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=or({inputs:{x:o},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];w=w&&k}d[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let x=N.expandShapeToKeepDim(p,i),b=rt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}var ME={kernelName:jl,backendName:"cpu",kernelFunc:lK};function uK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;te(o,"any");let i=y.parseAxisParam(s,o.shape),l=i,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=or({inputs:{x:o},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];w=w||k}d[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let x=N.expandShapeToKeepDim(p,i),b=rt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}var LE={kernelName:Gl,backendName:"cpu",kernelFunc:uK};function cK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;te(o,"argMax");let a=y.parseAxisParam(s,o.shape),i=N.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=or({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],N.assertAxesAreInnerMostDims("argMax",a,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,a),m=y.sizeFromShape(c),f=y.makeZerosTypedArray(m,"int32"),d=y.sizeFromShape(p),h=t.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,b=h[x],w=0;for(let _=0;_<d;++_){let k=h[x+_];k>b&&(b=k,w=_)}f[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var zE={kernelName:Xn,backendName:"cpu",kernelFunc:cK};function pK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n;te(o,"argMin");let a=y.parseAxisParam(s,o.shape),i=N.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=or({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],N.assertAxesAreInnerMostDims("argMin",a,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,a),m=y.sizeFromShape(c),f=y.makeZerosTypedArray(m,"int32"),d=y.sizeFromShape(p),h=t.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,b=h[x],w=0;for(let _=0;_<d;++_){let k=h[x+_];k<b&&(b=k,w=_)}f[g]=w}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(c,"int32",f)}var BE={kernelName:na,backendName:"cpu",kernelFunc:pK};var mK=Re(Ys,r=>Math.asin(r)),VE={kernelName:Ys,backendName:"cpu",kernelFunc:mK};var fK=Re(Zs,r=>Math.asinh(r)),WE={kernelName:Zs,backendName:"cpu",kernelFunc:fK};var dK=Re(Js,r=>Math.atan(r)),jE={kernelName:Js,backendName:"cpu",kernelFunc:dK};var hK=Je((r,e)=>Math.atan2(r,e)),gK=ot(ei,hK),GE={kernelName:ei,backendName:"cpu",kernelFunc:gK};var xK=Re(Qs,r=>Math.atanh(r)),UE={kernelName:Qs,backendName:"cpu",kernelFunc:xK};function pp(r,e,t,n,o,s){let a=o.strideHeight,i=o.strideWidth,l=o.dilationHeight,u=o.dilationWidth,c=o.effectiveFilterHeight,p=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ie(o.outShape,t),g=h.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],b=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let _=0;_<o.batchSize;++_){let k=_*x,E=_*n[0];for(let T=0;T<o.inChannels;++T)for(let F=0;F<o.outHeight;++F){let O=F*a-m,M=Math.max(0,O),j=Math.min(o.inHeight,c+O),W=k+F*b;for(let U=0;U<o.outWidth;++U){let Y=U*i-f,K=Math.max(0,Y),Z=Math.min(o.inWidth,p+Y),re=d,X=0,oe=0;for(let ie=M;ie<j;ie+=l){let pe=E+ie*n[1];for(let le=K;le<Z;le+=u){let ge=pe+le*n[2],ye=r[ge+T];s==="max"&&ye>re?re=ye:s==="avg"&&(X+=ye,oe++)}if(isNaN(re))break}let ae=W+U*w+T;g[ae]=s==="avg"?X/oe:re}}}return h}function Sg(r,e,t,n,o=!1,s=!1){let a=Ie(n.outShape,"int32"),i=n.strideHeight,l=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,p=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,h=Ie(e,t,r);for(let g=0;g<n.batchSize;++g)for(let x=0;x<n.inChannels;++x)for(let b=0;b<n.outHeight;++b){let w=b*i-f,_=w;for(;_<0;)_+=u;let k=Math.min(n.inHeight,p+w);for(let E=0;E<n.outWidth;++E){let T=E*l-d,F=T;for(;F<0;)F+=c;let O=Math.min(n.inWidth,m+T),M=Number.NEGATIVE_INFINITY,j=-1;for(let W=_;W<k;W+=u){let U=W-w;for(let Y=F;Y<O;Y+=c){let K=Y-T,Z=h.get(g,W,Y,x);Z>M&&(M=Z,o?j=s?((g*n.inHeight+W)*n.inWidth+Y)*n.inChannels+x:(W*n.inWidth+Y)*n.inChannels+x:j=U*m+K)}}a.set(j,g,b,E,x)}}return a}function Ng(r,e,t,n,o,s){let a=o.strideDepth,i=o.strideHeight,l=o.strideWidth,u=o.dilationDepth,c=o.dilationHeight,p=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=Ie(o.outShape,t),_=w.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],E=o.outShape[2]*o.outShape[3]*o.outShape[4],T=o.outShape[3]*o.outShape[4],F=o.outShape[4];for(let O=0;O<o.batchSize;++O){let M=O*k,j=O*n[0];for(let W=0;W<o.inChannels;++W)for(let U=0;U<o.outDepth;++U){let Y=U*a-h,K=Y;for(;K<0;)K+=u;let Z=Math.min(o.inDepth,m+Y),re=M+U*E;for(let X=0;X<o.outHeight;++X){let oe=X*i-g,ae=oe;for(;ae<0;)ae+=c;let ie=Math.min(o.inHeight,f+oe),pe=re+X*T;for(let le=0;le<o.outWidth;++le){let ge=le*l-x,ye=ge;for(;ye<0;)ye+=p;let be=Math.min(o.inWidth,d+ge),ke=pe+le*F,Ae=b,$e=0,Fe=0;for(let ct=K;ct<Z;ct+=u){let kt=j+ct*n[1];for(let Ct=ae;Ct<ie;Ct+=c){let ft=kt+Ct*n[2];for(let It=ye;It<be;It+=p){let Ke=ft+It*n[3],Ot=r[Ke+W];if(s==="max"&&Ot>Ae?Ae=Ot:s==="avg"&&($e+=Ot,Fe++),isNaN(Ae))break}if(isNaN(Ae))break}if(isNaN(Ae))break}let He=ke+W;_[He]=s==="avg"?$e/Fe:Ae}}}}return w}function qE(r,e){let t=Ie(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left;for(let h=0;h<e.batchSize;++h)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){let b=x*n-m,w=b;for(;w<0;)w+=a;let _=Math.min(e.inDepth,u+b);for(let k=0;k<e.outHeight;++k){let E=k*o-f,T=E;for(;T<0;)T+=i;let F=Math.min(e.inHeight,c+E);for(let O=0;O<e.outWidth;++O){let M=O*s-d,j=M;for(;j<0;)j+=l;let W=Math.min(e.inWidth,p+M),U=Number.NEGATIVE_INFINITY,Y=-1;for(let K=w;K<_;K+=a){let Z=K-b;for(let re=T;re<F;re+=i){let X=re-E;for(let oe=j;oe<W;oe+=l){let ae=oe-M,ie=r.get(h,K,re,oe,g);ie>=U&&(U=ie,Y=Z*c*p+X*c+ae)}}}t.set(Y,h,x,k,O,g)}}}return t}function yK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;te(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;y.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,a,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))p=$r({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=y.computeStrides(o.shape),d=pp(m,o.shape,o.dtype,f,c,"avg");p=t.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var HE={kernelName:Yn,backendName:"cpu",kernelFunc:yK};function bK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u,dilations:c}=n;te(o,"avgPool3d");let p=c;p==null&&(p=[1,1,1]);let m=N.computePool3DInfo(o.shape,s,a,p,i,l,u),f=t.data.get(o.dataId).values,d=Ng(f,o.shape,o.dtype,y.computeStrides(o.shape),m,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}var KE={kernelName:oa,backendName:"cpu",kernelFunc:bK};function wK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:l,dilations:u,dimRoundingMode:c}=n;te([o,s],"avgPool3DGrad");let p=N.computePool3DInfo(s.shape,a,i,u,l,c),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,h=p.filterDepth,g=p.filterHeight,x=p.filterWidth,b=p.dilationDepth,w=p.dilationHeight,_=p.dilationWidth,k=p.effectiveFilterDepth,E=p.effectiveFilterHeight,T=p.effectiveFilterWidth,F=k-1-p.padInfo.front,O=T-1-p.padInfo.left,M=E-1-p.padInfo.top,j=Ie(s.shape,"float32"),W=1/(h*g*x),U=t.bufferSync(o);for(let Y=0;Y<p.batchSize;++Y)for(let K=0;K<p.inChannels;++K)for(let Z=0;Z<p.inDepth;++Z)for(let re=0;re<p.inHeight;++re)for(let X=0;X<p.inWidth;++X){let oe=Z-F,ae=re-M,ie=X-O,pe=0;for(let le=0;le<k;le+=b){let ge=(oe+le)/m;if(!(ge<0||ge>=p.outDepth||Math.floor(ge)!==ge))for(let ye=0;ye<E;ye+=w){let be=(ae+ye)/f;if(!(be<0||be>=p.outHeight||Math.floor(be)!==be))for(let ke=0;ke<T;ke+=_){let Ae=(ie+ke)/d;if(Ae<0||Ae>=p.outWidth||Math.floor(Ae)!==Ae)continue;pe+=U.get(Y,ge,be,Ae,K)}}}j.set(pe*W,Y,Z,re,X,K)}return t.makeTensorInfo(j.shape,j.dtype,j.values)}var XE={kernelName:ql,backendName:"cpu",kernelFunc:wK};function _K(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;te([o,s],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=n,c=N.computePool2DInfo(a.shape,i,l,1,u),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,d=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,_=x-1-c.padInfo.top,k=Ie(a.shape,"float32"),E=1/(f*d),T=t.data.get(o.dataId).values,F=Ie(o.shape,"float32",T);for(let O=0;O<c.batchSize;++O)for(let M=0;M<c.inChannels;++M)for(let j=0;j<c.inHeight;++j)for(let W=0;W<c.inWidth;++W){let U=j-_,Y=W-w,K=0;for(let Z=0;Z<x;Z+=h){let re=(U+Z)/p;if(!(re<0||re>=c.outHeight||Math.floor(re)!==re))for(let X=0;X<b;X+=g){let oe=(Y+X)/m;if(oe<0||oe>=c.outWidth||Math.floor(oe)!==oe)continue;K+=F.get(O,re,oe,M)}}k.set(K*E,O,j,W,M)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}var YE={kernelName:Ul,backendName:"cpu",kernelFunc:_K};function vK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:l}=e;y.assert(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),te([o,i,l,s,a],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let c=t.data.get(o.dataId).values,p=t.data.get(i.dataId).values,m=t.data.get(l.dataId).values,f=s?t.data.get(s.dataId).values:new Float32Array([1]),d=a?t.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(c.length),g=d.length,x=f.length,b=m.length,w=p.length,_=0,k=0,E=0,T=0;for(let F=0;F<c.length;++F)h[F]=d[_++]+(c[F]-p[k++])*f[E++]/Math.sqrt(m[T++]+u),_>=g&&(_=0),k>=w&&(k=0),E>=x&&(E=0),T>=b&&(T=0);return t.makeTensorInfo(o.shape,o.dtype,h)}var ZE={kernelName:ao,backendName:"cpu",kernelFunc:vK};function kK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;te([o],"batchToSpaceND");let i=s.reduce((x,b)=>x*b),l=N.getReshaped(o.shape,s,i),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(o.shape,s,i),p=N.getSliceBeginCoords(a,s.length),m=N.getSliceSize(c,a,s.length),f=rt({inputs:{x:o},backend:t,attrs:{shape:l}}),d=or({inputs:{x:f},backend:t,attrs:{perm:u}}),h=rt({inputs:{x:d},backend:t,attrs:{shape:c}}),g=Ko({inputs:{x:h},backend:t,attrs:{begin:p,size:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var JE={kernelName:sa,backendName:"cpu",kernelFunc:kK};function CK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.data.get(o.dataId).values,l=t.data.get(s.dataId).values,u=uf(i,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var QE={kernelName:Hl,backendName:"cpu",kernelFunc:CK};var IK=Re(Fn,(r,e)=>{let t=e;return r>t.clipValueMax?t.clipValueMax:r<t.clipValueMin?t.clipValueMin:r}),eA={kernelName:Fn,backendName:"cpu",kernelFunc:IK};var SK=r=>{let{x:e}=r.inputs,t=r.backend,n=new Float32Array(y.sizeFromShape(e.shape)),o=t.data.get(e.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(s.dataId).values,l=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){let c=i[u],p=l[u];n[u]=Math.hypot(c,p)}return t.makeOutput(n,e.shape,"float32")},tA={kernelName:ia,backendName:"cpu",kernelFunc:SK};function Wi(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,s=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,s)}var rA={kernelName:su,backendName:"cpu",kernelFunc:Wi};function dl(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=N.computeOutShape(e.map(h=>h.shape),s);if(y.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(h=>y.sizeFromShape(h.shape)>0);if(i.length===1)return $r({inputs:{x:i[0]},backend:t});let l=i.map(h=>h.shape);if(N.assertParamsConsistent(l,s),i[0].dtype==="complex64"){let h=i.map(_=>Go({inputs:{input:_},backend:t})),g=i.map(_=>Wi({inputs:{input:_},backend:t})),x=dl({inputs:h,backend:t,attrs:{axis:s}}),b=dl({inputs:g,backend:t,attrs:{axis:s}}),w=mr({inputs:{real:x,imag:b},backend:t});return h.forEach(_=>t.disposeIntermediateTensorInfo(_)),g.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),w}let u=i.map(h=>{let g=y.sizeFromShape(h.shape.slice(s));return rt({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}})}),c=u.map(h=>({vals:t.data.get(h.dataId).values,shape:h.shape}));a=N.computeOutShape(u.map(h=>h.shape),1);let p=u[0].shape[0]===1,m=cf(c,a,e[0].dtype,p),f=N.computeOutShape(i.map(h=>h.shape),s),d=t.makeTensorInfo(f,e[0].dtype,m);return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var nA={kernelName:us,backendName:"cpu",kernelFunc:dl};function U_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n;te([o,s],"conv2d");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,s.shape,a,u,i,c,!1,p),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,x=m.padInfo.left,b=m.padInfo.top,w=m.dataFormat==="channelsLast",_=new pt(m.outShape,o.dtype),k=y.computeStrides(o.shape),E=y.computeStrides(s.shape),T=k[0],F=w?k[1]:k[2],O=w?k[2]:1,M=w?1:k[1],j=_.strides[0],W=w?_.strides[1]:_.strides[2],U=w?_.strides[2]:1,Y=w?1:_.strides[1],K=t.data.get(o.dataId).values,Z=t.data.get(s.dataId).values,re=_.values;for(let X=0;X<m.batchSize;++X){let oe=X*T,ae=X*j;for(let ie=0;ie<m.outHeight;++ie){let pe=ae+ie*W,le=ie*m.strideHeight-b;for(let ge=0;ge<f;++ge){let ye=le+ge*h;if(ye<0||ye>=m.inHeight)continue;let be=ge*E[0],ke=oe+ye*F;for(let Ae=0;Ae<m.outWidth;++Ae){let $e=pe+Ae*U,Fe=Ae*m.strideWidth-x;for(let He=0;He<d;++He){let ct=Fe+He*g;if(ct<0||ct>=m.inWidth)continue;let kt=be+He*E[1],Ct=ke+ct*O,ft=kt;for(let It=0;It<m.inChannels;++It){let Ke=K[Ct+It*M];for(let Ot=0;Ot<m.outChannels;++Ot)re[$e+Ot*Y]+=Ke*Z[ft+Ot];ft+=m.outChannels}}}}}}return t.makeTensorInfo(_.shape,_.dtype,re)}var oA={kernelName:Jn,backendName:"cpu",kernelFunc:U_};function NK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=n;te([o,s],"conv2dBackpropFilter");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,c,a,1,i,u,!1,p),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,x=m.dataFormat==="channelsLast",b=new pt(m.filterShape,"float32"),w=m.padInfo.left,_=m.padInfo.top,k=t.data.get(o.dataId).values,E=t.data.get(s.dataId).values,T=new pt(o.shape,o.dtype,k),F=new pt(s.shape,s.dtype,E);for(let O=0;O<h;++O){let M=Math.max(0,Math.ceil((_-O)/f)),j=Math.min(m.outHeight,(m.inHeight+_-O)/f);for(let W=0;W<g;++W){let U=Math.max(0,Math.ceil((w-W)/d)),Y=Math.min(m.outWidth,(m.inWidth+w-W)/d);for(let K=0;K<m.inChannels;++K)for(let Z=0;Z<m.outChannels;++Z){let re=0;for(let X=0;X<m.batchSize;++X)for(let oe=M;oe<j;++oe){let ae=O+oe*f-_;for(let ie=U;ie<Y;++ie){let pe=W+ie*d-w;x?re+=T.get(X,ae,pe,K)*F.get(X,oe,ie,Z):re+=T.get(X,K,ae,pe)*F.get(X,Z,oe,ie)}}b.set(re,O,W,K,Z)}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var sA={kernelName:Xl,backendName:"cpu",kernelFunc:NK};function TK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=n;te([o,s],"conv2dBackpropInput");let p=y.computeStrides(s.shape),m=y.computeStrides(o.shape),f=N.convertConv2DDataFormat(u),d=N.computeConv2DInfo(a,s.shape,i,1,l,c,!1,f),h=new pt(d.inShape,"float32"),g=h.values,x=t.data.get(o.dataId).values,b=t.data.get(s.dataId).values,[w,_,k]=p,{batchSize:E,filterHeight:T,filterWidth:F,inChannels:O,inHeight:M,inWidth:j,outChannels:W,outHeight:U,outWidth:Y,strideHeight:K,strideWidth:Z}=d;f=d.dataFormat;let re=T-1-d.padInfo.top,X=F-1-d.padInfo.left,oe=f==="channelsLast",ae=h.strides[0],ie=oe?h.strides[1]:h.strides[2],pe=oe?h.strides[2]:1,le=oe?1:h.strides[1],ge=m[0],ye=oe?m[1]:m[2],be=oe?m[2]:1,ke=oe?1:m[1];for(let Ae=0;Ae<E;++Ae)for(let $e=0;$e<O;++$e)for(let Fe=0;Fe<M;++Fe){let He=Fe-re,ct=Math.max(0,Math.ceil(He/K)),kt=Math.min(U,(T+He)/K);for(let Ct=0;Ct<j;++Ct){let ft=Ct-X,It=Math.max(0,Math.ceil(ft/Z)),Ke=Math.min(Y,(F+ft)/Z),Ot=0;for(let tr=ct;tr<kt;++tr){let gn=tr*K-He;for(let kr=It;kr<Ke;++kr){let Gn=kr*Z-ft,tn=ge*Ae+ye*tr+be*kr,xn=w*(T-1-gn)+_*(F-1-Gn)+k*$e;for(let Cr=0;Cr<W;++Cr){let An=x[tn+ke*Cr],Un=b[xn+Cr];Ot+=An*Un}}}let hn=ae*Ae+ie*Fe+pe*Ct+le*$e;g[hn]=Ot}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}var iA={kernelName:Qn,backendName:"cpu",kernelFunc:TK};function EK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n;te([o,s],"conv3d");let u=N.computeConv3DInfo(o.shape,s.shape,a,l,i),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=u,x=g.front,b=g.left,w=g.top,_=new pt(u.outShape,o.dtype),k=t.data.get(o.dataId).values,E=t.data.get(s.dataId).values,T=_.values,F=y.computeStrides(o.shape),O=y.computeStrides(s.shape);for(let M=0;M<u.batchSize;++M){let j=M*F[0],W=M*_.strides[0];for(let U=0;U<u.outDepth;++U){let Y=W+U*_.strides[1],K=U*u.strideDepth-x;for(let Z=0;Z<c;++Z){let re=K+Z*f;if(re<0||re>=u.inDepth)continue;let X=Z*O[0],oe=j+re*F[1];for(let ae=0;ae<u.outHeight;++ae){let ie=Y+ae*_.strides[2],pe=ae*u.strideHeight-w;for(let le=0;le<p;++le){let ge=pe+le*d;if(ge<0||ge>=u.inHeight)continue;let ye=X+le*O[1],be=oe+ge*F[2];for(let ke=0;ke<u.outWidth;++ke){let Ae=ie+ke*u.outChannels,$e=ke*u.strideWidth-b;for(let Fe=0;Fe<m;++Fe){let He=$e+Fe*h;if(He<0||He>=u.inWidth)continue;let ct=ye+Fe*O[2],kt=be+He*u.inChannels,Ct=ct;for(let ft=0;ft<u.inChannels;++ft){let It=k[kt+ft];for(let Ke=0;Ke<u.outChannels;++Ke)T[Ae+Ke]+=It*E[Ct+Ke];Ct+=u.outChannels}}}}}}}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}var aA={kernelName:aa,backendName:"cpu",kernelFunc:EK};function AK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:l}=n;te([o,s],"conv3dBackpropFilterV2");let u=y.computeStrides(o.shape),c=y.computeStrides(s.shape),p=N.computeConv3DInfo(o.shape,l,a,1,i),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,h=p.filterDepth,g=p.filterHeight,x=p.filterWidth,b=new pt(p.filterShape,"float32"),w=b.values,[_,k,E,T]=b.strides,F=t.data.get(s.dataId).values,[O,M,j,W]=c,U=t.data.get(o.dataId).values,[Y,K,Z,re]=u,X=p.padInfo.front,oe=p.padInfo.left,ae=p.padInfo.top;for(let ie=0;ie<h;++ie){let pe=Math.max(0,Math.ceil((X-ie)/m)),le=Math.min(p.outDepth,(p.inDepth+X-ie)/m),ge=ie*_;for(let ye=0;ye<g;++ye){let be=Math.max(0,Math.ceil((ae-ye)/f)),ke=Math.min(p.outHeight,(p.inHeight+ae-ye)/f),Ae=ye*k+ge;for(let $e=0;$e<x;++$e){let Fe=Math.max(0,Math.ceil((oe-$e)/d)),He=Math.min(p.outWidth,(p.inWidth+oe-$e)/d),ct=$e*E+Ae;for(let kt=0;kt<p.inChannels;++kt){let Ct=kt*T+ct;for(let ft=0;ft<p.outChannels;++ft){let It=0;for(let Ke=0;Ke<p.batchSize;++Ke){let Ot=Ke*Y,hn=Ke*O;for(let tr=pe;tr<le;++tr){let kr=(ie+tr*m-X)*K+Ot,Gn=tr*M+hn;for(let tn=be;tn<ke;++tn){let Cr=(ye+tn*f-ae)*Z+kr,An=tn*j+Gn;for(let Un=Fe;Un<He;++Un){let os=($e+Un*d-oe)*re+Cr,Dn=Un*W+An;It+=U[os+kt]*F[Dn+ft]}}}}w[Ct+ft]=It}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}var lA={kernelName:Yl,backendName:"cpu",kernelFunc:AK};function DK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:l}=n;te([o],"conv3dBackpropInputV2");let u=y.computeStrides(o.shape),c=y.computeStrides(s.shape),p=N.computeConv3DInfo(l,s.shape,i,1,a),m=new pt(p.inShape,"float32"),f=m.values,[d,h,g,x]=m.strides,b=t.data.get(o.dataId).values,[w,_,k,E]=u,T=t.data.get(s.dataId).values,[F,O,M,j]=c,{batchSize:W,filterDepth:U,filterHeight:Y,filterWidth:K,inChannels:Z,inDepth:re,inHeight:X,inWidth:oe,outChannels:ae,outDepth:ie,outHeight:pe,outWidth:le,strideDepth:ge,strideHeight:ye,strideWidth:be}=p,ke=U-1-p.padInfo.front,Ae=Y-1-p.padInfo.top,$e=K-1-p.padInfo.left;for(let Fe=0;Fe<W;++Fe)for(let He=0;He<Z;++He)for(let ct=0;ct<re;++ct){let kt=ct-ke,Ct=Math.max(0,Math.ceil(kt/ge)),ft=Math.min(ie,(U+kt)/ge);for(let It=0;It<X;++It){let Ke=It-Ae,Ot=Math.max(0,Math.ceil(Ke/ye)),hn=Math.min(pe,(Y+Ke)/ye);for(let tr=0;tr<oe;++tr){let gn=tr-$e,kr=Math.max(0,Math.ceil(gn/be)),Gn=Math.min(le,(K+gn)/be),tn=0;for(let xn=Ct;xn<ft;++xn){let Cr=xn*ge-kt;for(let An=Ot;An<hn;++An){let Un=An*ye-Ke;for(let rn=kr;rn<Gn;++rn){let os=rn*be-gn,Dn=w*Fe+_*xn+k*An+E*rn,yc=F*(U-1-Cr)+O*(Y-1-Un)+M*(K-1-os)+j*He;for(let ss=0;ss<ae;++ss){let Ji=b[Dn+ss],Fl=T[yc+ss];tn+=Ji*Fl}}}}f[d*Fe+h*ct+g*It+x*tr+He]=tn}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}var uA={kernelName:Zl,backendName:"cpu",kernelFunc:DK};var $K=Re(eo,r=>Math.cos(r)),cA={kernelName:eo,backendName:"cpu",kernelFunc:$K};var RK=Re(ri,r=>Math.cosh(r)),pA={kernelName:ri,backendName:"cpu",kernelFunc:RK};function FK(r){let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=n,[c,p,m,f]=o.shape,d=s.shape[0],[h,g]=i,x=Ie([d,h,g,f],"float32"),b=t.data.get(s.dataId).values,w=t.data.get(a.dataId).values,_=t.data.get(o.dataId).values,k=y.computeStrides(o.shape),E=y.computeStrides(x.shape);for(let T=0;T<d;T++){let F=T*4,O=b[F],M=b[F+1],j=b[F+2],W=b[F+3],U=w[T];if(U>=c)continue;let Y=h>1?(j-O)*(p-1)/(h-1):0,K=g>1?(W-M)*(m-1)/(g-1):0;for(let Z=0;Z<h;Z++){let re=h>1?O*(p-1)+Z*Y:.5*(O+j)*(p-1);if(re<0||re>p-1){for(let X=0;X<g;X++)for(let oe=0;oe<f;oe++){let ae=oe+X*E[2]+Z*E[1]+T*E[0];x.values[ae]=u}continue}if(l==="bilinear"){let X=Math.floor(re),oe=Math.ceil(re),ae=re-X;for(let ie=0;ie<g;ie++){let pe=g>1?M*(m-1)+ie*K:.5*(M+W)*(m-1);if(pe<0||pe>m-1){for(let be=0;be<f;be++){let ke=be+ie*E[2]+Z*E[1]+T*E[0];x.values[ke]=u}continue}let le=Math.floor(pe),ge=Math.ceil(pe),ye=pe-le;for(let be=0;be<f;be++){let ke=be+le*k[2]+X*k[1]+U*k[0],Ae=_[ke];ke=be+ge*k[2]+X*k[1]+U*k[0];let $e=_[ke];ke=be+le*k[2]+oe*k[1]+U*k[0];let Fe=_[ke];ke=be+ge*k[2]+oe*k[1]+U*k[0];let He=_[ke],ct=Ae+($e-Ae)*ye,kt=Fe+(He-Fe)*ye;ke=be+ie*E[2]+Z*E[1]+T*E[0],x.values[ke]=ct+(kt-ct)*ae}}}else for(let X=0;X<g;++X){let oe=g>1?M*(m-1)+X*K:.5*(M+W)*(m-1);if(oe<0||oe>m-1){for(let pe=0;pe<f;pe++){let le=pe+X*E[2]+Z*E[1]+T*E[0];x.values[le]=u}continue}let ae=Math.round(oe),ie=Math.round(re);for(let pe=0;pe<f;pe++){let le=pe+ae*k[2]+ie*k[1]+U*k[0],ge=pe+X*E[2]+Z*E[1]+T*E[0];x.values[ge]=_[le]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}var mA={kernelName:ni,backendName:"cpu",kernelFunc:FK};function OK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n;te(o,"cumsum");let l=N.getAxesPermutation([s],o.shape.length),u=o;l!=null&&(u=or({inputs:{x:o},backend:t,attrs:{perm:l}}));let c=N.getInnerMostAxes(1,o.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=dr(u.dtype,"int32"),m=y.makeZerosTypedArray(y.sizeFromShape(u.shape),p),f=t.data.get(u.dataId).values,d=u.shape[u.shape.length-1],h=i?(x,b)=>x+d-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=d)for(let b=0;b<d;b++){let w=h(x,b);if(b===0)m[w]=a?0:f[w];else{let _=h(x,b-1);m[w]=a?f[_]+m[_]:f[w]+m[_]}}let g=t.makeTensorInfo(u.shape,p,m);if(l!=null){let x=N.getUndoAxesPermutation(l),b=or({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),b}return g}var fA={kernelName:to,backendName:"cpu",kernelFunc:OK};function PK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let l=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,c=uf(l,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,c)}else if(o.shape.length===2){let l=t.bufferSync(o),u=t.bufferSync(s),c=E_(l,u,a,i);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var dA={kernelName:Jl,backendName:"cpu",kernelFunc:PK};function MK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;y.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`),y.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=o.shape[1],u=o.shape[2],c=o.shape[3],p=l*s,m=u*s,f=c/(s*s),d=t.data.get(o.dataId).values,h=new Float32Array(i*p*m*f),g=0;for(let x=0;x<i;++x)for(let b=0;b<p;++b){let w=Math.floor(b/s),_=b%s;for(let k=0;k<m;++k){let E=Math.floor(k/s),T=k%s,F=(_*s+T)*f;for(let O=0;O<f;++O){let j=O+F+c*(E+u*(w+l*x));h[g++]=d[j]}}}return t.makeTensorInfo([i,p,m,f],o.dtype,h)}var hA={kernelName:oi,backendName:"cpu",kernelFunc:MK};function q_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=n;te([o,s],"depthwiseConv2DNative");let c=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(a,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);let f=N.computeConv2DInfo(o.shape,s.shape,a,m,i,u,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:x,padInfo:b}=f,w=b.left,_=b.top,k=f.outChannels/f.inChannels,E=new pt(f.outShape,o.dtype),T=t.data.get(o.dataId).values,F=t.data.get(s.dataId).values,O=E.values;for(let M=0;M<f.batchSize;++M){let j=M*c[0],W=M*E.strides[0];for(let U=0;U<f.outHeight;++U){let Y=W+U*E.strides[1],K=U*f.strideHeight-w;for(let Z=0;Z<d;++Z){let re=K+Z*g;if(re<0||re>=f.inHeight)continue;let X=Z*p[0],oe=j+re*c[1];for(let ae=0;ae<f.outWidth;++ae){let ie=Y+ae*E.strides[2],pe=ae*f.strideWidth-_;for(let le=0;le<h;++le){let ge=pe+le*x;if(ge<0||ge>=f.inWidth)continue;let ye=X+le*p[1],be=oe+ge*f.inChannels,ke=ie,Ae=ye;for(let $e=0;$e<f.inChannels;++$e){let Fe=T[be+$e];for(let He=0;He<k;++He)O[ke+He]+=Fe*F[Ae+He];ke+=k,Ae+=k}}}}}}return t.makeTensorInfo(E.shape,E.dtype,E.values)}var gA={kernelName:ro,backendName:"cpu",kernelFunc:q_};function LK(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=n;te([o,s],"depthwiseConv2dNativeBackpropFilter");let p=N.computeConv2DInfo(o.shape,c,a,i,l,u,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=p,g=new pt(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,w=p.outChannels/p.inChannels,_=t.data.get(o.dataId).values,k=new pt(o.shape,o.dtype,_),E=t.data.get(s.dataId).values,T=new pt(s.shape,s.dtype,E);for(let F=0;F<d;++F){let O=Math.max(0,Math.ceil((b-F)/m)),M=Math.min(p.outHeight,(p.inHeight+b-F)/m);for(let j=0;j<h;++j){let W=Math.max(0,Math.ceil((x-j)/f)),U=Math.min(p.outWidth,(p.inWidth+x-j)/f);for(let Y=0;Y<p.outChannels;++Y){let K=Math.trunc(Y/w),Z=Y%w,re=0;for(let X=0;X<p.batchSize;++X)for(let oe=O;oe<M;++oe){let ae=F+oe*m-b;for(let ie=W;ie<U;++ie){let pe=j+ie*f-x;re+=k.get(X,ae,pe,K)*T.get(X,oe,ie,Y)}}g.set(re,F,j,K,Z)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}var xA={kernelName:Ql,backendName:"cpu",kernelFunc:LK};function zK(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=n;te([o,s],"depthwiseConv2DNativeBackpropInput");let p=y.computeStrides(o.shape),m=y.computeStrides(s.shape),f=N.computeConv2DInfo(c,s.shape,a,i,l,u,!0),d=new pt(f.inShape,"float32"),h=d.values,[g,x,b]=d.strides,w=t.data.get(o.dataId).values,[_,k,E]=p,T=t.data.get(s.dataId).values,[F,O,M]=m,{batchSize:j,filterHeight:W,filterWidth:U,inChannels:Y,inHeight:K,inWidth:Z,outChannels:re,outHeight:X,outWidth:oe,strideHeight:ae,strideWidth:ie}=f,pe=W-1-f.padInfo.top,le=U-1-f.padInfo.left,ge=re/Y;for(let ye=0;ye<j;++ye)for(let be=0;be<Y;++be)for(let ke=0;ke<K;++ke){let Ae=ke-pe,$e=Math.max(0,Math.ceil(Ae/ae)),Fe=Math.min(X,(W+Ae)/ae);for(let He=0;He<Z;++He){let ct=He-le,kt=Math.max(0,Math.ceil(ct/ie)),Ct=Math.min(oe,(U+ct)/ie),ft=0;for(let It=$e;It<Fe;++It){let Ke=It*ae-Ae;for(let Ot=kt;Ot<Ct;++Ot){let hn=Ot*ie-ct,tr=_*ye+k*It+E*Ot,gn=F*(W-1-Ke)+O*(U-1-hn)+M*be;for(let kr=0;kr<ge;++kr){let Gn=be*ge+kr,tn=w[tr+Gn],xn=T[gn+kr];ft+=tn*xn}}}h[g*ye+x*ke+b*He+be]=ft}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}var yA={kernelName:eu,backendName:"cpu",kernelFunc:zK};function BK(r){let{inputs:e,backend:t}=r,{x:n}=e,o=y.sizeFromShape(n.shape),s=t.data.get(n.dataId).values,a=Ie([o,o],n.dtype),i=a.values;for(let u=0;u<s.length;u++)i[u*o+u]=s[u];let l=[...n.shape,...n.shape];return t.makeTensorInfo(l,a.dtype,a.values)}var bA={kernelName:tu,backendName:"cpu",kernelFunc:BK};var wA={kernelName:la,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=t,l=e,u=l.data.get(n.dataId).values,c=n.shape.length,p=l.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:_,strideWidth:k,filterHeight:E,filterWidth:T,dilationHeight:F,dilationWidth:O,outShape:M}=N.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),j=y.sizeFromShape(M),W=M.length,U=y.getArrayFromDType(n.dtype,j);for(let K=0;K<f;++K)for(let Z=0;Z<x;++Z){let re=Z*_-w.top;for(let X=0;X<b;++X){let oe=X*k-w.left;for(let ae=0;ae<g;++ae){let ie=Number.MIN_SAFE_INTEGER;for(let le=0;le<E;++le){let ge=re+le*F;if(ge>=0&&ge<d)for(let ye=0;ye<T;++ye){let be=oe+ye*O;if(be>=0&&be<h){let ke=y.locToIndex([K,ge,be,ae],c,y.computeStrides(n.shape)),Ae=y.locToIndex([le,ye,ae],m,y.computeStrides(o.shape)),$e=u[ke]+p[Ae];$e>ie&&(ie=$e)}}}let pe=y.locToIndex([K,Z,X,ae],W,y.computeStrides(M));U[pe]=ie}}}return{dataId:l.write(y.toTypedArray(U,n.dtype),M,n.dtype),shape:M,dtype:n.dtype}}};var _A={kernelName:Oc,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:l}=t,u=e,c=y.toNestedArray(n.shape,u.data.get(n.dataId).values),p=y.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:k,filterWidth:E,dilationHeight:T,dilationWidth:F,outShape:O}=N.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",l);y.assert(s.rank===O.length,()=>`Error in ${Oc}, dy must have the same rank as output ${O.length}, but got ${s.rank}`);let M=y.toNestedArray(O,u.data.get(s.dataId).values),j=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let U=0;U<m;++U)for(let Y=0;Y<g;++Y){let K=Y*w-b.top;for(let Z=0;Z<x;++Z){let re=Z*_-b.left;for(let X=0;X<h;++X){let oe=Number.MIN_SAFE_INTEGER,ae=0,ie=0;for(let pe=0;pe<k;++pe){let le=K+pe*T;if(le>=0&&le<f)for(let ge=0;ge<E;++ge){let ye=re+ge*F;if(ye>=0&&ye<d){let be=c[U][le][ye][X]+p[pe][ge][X];be>oe&&(oe=be,ae=pe,ie=ge)}}}j[ae][ie][X]+=M[U][Y][Z][X]}}}return{dataId:u.write(y.toTypedArray(j,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var vA={kernelName:Fc,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:l}=t,u=e,c=y.toNestedArray(n.shape,u.data.get(n.dataId).values),p=y.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:_,filterHeight:k,filterWidth:E,dilationHeight:T,dilationWidth:F,outShape:O}=N.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",l);y.assert(s.rank===O.length,()=>`Error in ${Fc}, dy must have the same rank as output ${O.length}, but got ${s.rank}`);let M=y.toNestedArray(O,u.data.get(s.dataId).values),j=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let U=0;U<m;++U)for(let Y=0;Y<g;++Y){let K=Y*w-b.top;for(let Z=0;Z<x;++Z){let re=Z*_-b.left;for(let X=0;X<h;++X){let oe=Number.MIN_SAFE_INTEGER,ae=K<0?0:K,ie=re<0?0:re;for(let pe=0;pe<k;++pe){let le=K+pe*T;if(le>=0&&le<f)for(let ge=0;ge<E;++ge){let ye=re+ge*F;if(ye>=0&&ye<d){let be=c[U][le][ye][X]+p[pe][ge][X];be>oe&&(oe=be,ae=le,ie=ye)}}}j[U][ae][ie][X]+=M[U][Y][Z][X]}}}return{dataId:u.write(y.toTypedArray(j,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function VK(r){let{inputs:e,backend:t}=r,{dy:n,y:o}=e;te([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let l=0;l<a.length;++l){let u=a[l];u>=1?s[l]=i[l]:s[l]=i[l]*(u+1)}return t.makeTensorInfo(o.shape,"float32",s)}var kA={kernelName:ru,backendName:"cpu",kernelFunc:VK};var WK=Je((r,e)=>r===e?1:0),H_=ot(ai,WK,null,"bool"),CA={kernelName:ai,backendName:"cpu",kernelFunc:H_};var jK=N.ERF_P,GK=N.ERF_A1,UK=N.ERF_A2,qK=N.ERF_A3,HK=N.ERF_A4,KK=N.ERF_A5,XK=Re(ii,r=>{let e=Math.sign(r),t=Math.abs(r),n=1/(1+jK*t);return e*(1-((((KK*n+HK)*n+qK)*n+UK)*n+GK)*n*Math.exp(-t*t))}),IA={kernelName:ii,backendName:"cpu",kernelFunc:XK};function mp(r){let{inputs:e,backend:t,attrs:n}=r,{input:o}=e,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),l=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),i.splice(l,0,1),rt({inputs:{x:o},backend:t,attrs:{shape:i}})}var SA={kernelName:cs,backendName:"cpu",kernelFunc:mp};var YK=Je((r,e)=>r/e),gf=ot(no,YK),xf={kernelName:no,backendName:"cpu",kernelFunc:gf};function Tg(r,e,t){let n=r.shape,o=n[0],s=n[1],a=t.data.get(r.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[o,s],c=y.sizeFromShape(u),p=y.getTypedArrayFromDType("float32",c),m=y.getTypedArrayFromDType("float32",c);for(let g=0;g<o;g++){let x=Ko({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,s]}}),b=Ko({inputs:{x:l},backend:t,attrs:{begin:[g,0],size:[1,s]}}),w=mr({inputs:{real:x,imag:b},backend:t}),{real:_,imag:k}=ZK(w,e,t),E=N.mergeRealAndImagArrays(_,k);for(let T=0;T<s;T++){let F=N.getComplexWithIndex(E,T);p[g*s+T]=F.real,m[g*s+T]=F.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w)}let f=t.makeTensorInfo(u,"float32",p),d=t.makeTensorInfo(u,"float32",m),h=mr({inputs:{real:f,imag:d},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),h}function ZK(r,e,t){let n=y.sizeFromShape(r.shape),o=t.data.get(r.dataId),s=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(JK(n)){let i=K_(s,a,n,e,t),l=[r.shape[0],r.shape[1]];if(e){let u=t.makeTensorInfo(l,"float32",i.real),c=t.makeTensorInfo(l,"float32",i.imag),p=t.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),m=$r({inputs:{x:p},backend:t}),f=xf.kernelFunc({inputs:{a:u,b:p},backend:t}),d=xf.kernelFunc({inputs:{a:c,b:m},backend:t}),h=t.data.get(f.dataId).values,g=t.data.get(d.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return i}else{let i=N.mergeRealAndImagArrays(s,a),l=QK(i,n,e);return N.splitRealAndImagArrays(l)}}function JK(r){return(r&r-1)==0}function K_(r,e,t,n,o){if(t===1)return{real:r,imag:e};let s=N.mergeRealAndImagArrays(r,e),a=t/2,i=N.complexWithEvenIndex(s),l=i.real,u=i.imag,c=[l.length],p=o.makeTensorInfo(c,"float32",l),m=o.makeTensorInfo(c,"float32",u),f=mr({inputs:{real:p,imag:m},backend:o}),d=N.complexWithOddIndex(s),h=d.real,g=d.imag,x=[h.length],b=o.makeTensorInfo(x,"float32",h),w=o.makeTensorInfo(x,"float32",g),_=mr({inputs:{real:b,imag:w},backend:o}),k=K_(l,u,a,n,o),E=k.real,T=k.imag,F=[E.length],O=o.makeTensorInfo(F,"float32",E),M=o.makeTensorInfo(F,"float32",T),j=mr({inputs:{real:O,imag:M},backend:o}),W=K_(h,g,a,n,o),U=W.real,Y=W.imag,K=[U.length],Z=o.makeTensorInfo(K,"float32",U),re=o.makeTensorInfo(K,"float32",Y),X=mr({inputs:{real:Z,imag:re},backend:o}),oe=N.exponents(t,n),ae=[oe.real.length],ie=o.makeTensorInfo(ae,"float32",oe.real),pe=o.makeTensorInfo(ae,"float32",oe.imag),le=mr({inputs:{real:ie,imag:pe},backend:o}),ge=pf({inputs:{a:le,b:X},backend:o}),ye=La({inputs:{a:j,b:ge},backend:o}),be=hf({inputs:{a:j,b:ge},backend:o}),ke=Go({inputs:{input:ye},backend:o}),Ae=Go({inputs:{input:be},backend:o}),$e=Wi({inputs:{input:ye},backend:o}),Fe=Wi({inputs:{input:be},backend:o}),He=dl({inputs:[ke,Ae],backend:o,attrs:{axis:0}}),ct=dl({inputs:[$e,Fe],backend:o,attrs:{axis:0}}),kt=o.data.get(He.dataId).values,Ct=o.data.get(ct.dataId).values;return o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(O),o.disposeIntermediateTensorInfo(M),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(re),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(be),o.disposeIntermediateTensorInfo(ke),o.disposeIntermediateTensorInfo($e),o.disposeIntermediateTensorInfo(Ae),o.disposeIntermediateTensorInfo(Fe),o.disposeIntermediateTensorInfo(He),o.disposeIntermediateTensorInfo(ct),{real:kt,imag:Ct}}function QK(r,e,t){let n=new Float32Array(e*2);for(let o=0;o<e;o++){let s=0,a=0;for(let i=0;i<e;i++){let l=N.exponent(o*i,e,t),u=N.getComplexWithIndex(r,i);s+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}t&&(s/=e,a/=e),N.assignToTypedArray(n,s,a,o)}return n}function e6(r){let{inputs:e,backend:t}=r,{input:n}=e,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=rt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),l=Tg(i,!1,t),u=rt({inputs:{x:l},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var NA={kernelName:nu,backendName:"cpu",kernelFunc:e6};function yf(r){let{backend:e,attrs:t}=r,{shape:n,value:o,dtype:s}=t,a=s||y.inferDtype(o),i=y.getArrayFromDType(a,y.sizeFromShape(n));return t6(i,o,a),e.makeTensorInfo(n,a,i)}var TA={kernelName:ua,backendName:"cpu",kernelFunc:yf};function t6(r,e,t){r.fill(e)}var EA={kernelName:ui,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,o=t,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[a,i,l,u]=n.shape,c=o.data.get(n.dataId).values;for(let m=0;m<a;m++){let f=m*l*i*u;for(let d=0;d<i;d++){let h=d*(l*u);for(let g=0;g<l;g++){let x=g*u;for(let b=0;b<u;b++){let _=[a,d,g,b][2],k=Math.round(l-_),E=f+h+x+b,T=c[E];if(k>=0&&k<l){let F=k*u,O=f+h+F+b;T=c[O]}s[E]=T}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var r6=Je((r,e)=>Math.floor(r/e)),n6=ot(io,r6,null,"int32"),AA={kernelName:io,backendName:"cpu",kernelFunc:n6};function o6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=U_({inputs:{x:o,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(a){let g=h;h=La({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=cp(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var DA={kernelName:ks,backendName:"cpu",kernelFunc:o6};function s6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=q_({inputs:{x:o,filter:s},backend:t,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(a){let g=h;h=La({inputs:{a:h,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=cp(t,h,f,i,d),t.disposeIntermediateTensorInfo(g)}return h}var $A={kernelName:Cs,backendName:"cpu",kernelFunc:s6};function i6(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=y.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[l,u,c,p]=N.prepareAndValidate(n,o);if(u===0)return t.makeTensorInfo(l,n.dtype,[]);let m=Ie([u,c],n.dtype),f=t.data.get(o.dataId).values,d=t.data.get(n.dataId).values;for(let h=0;h<u;h++){let g=[],x=0;for(let b=0;b<i;b++){let w=f[h*i+b];x+=w*p[b],g.push(w)}if(x<0||x>=s/c)throw new Error(`Invalid indices: ${g} does not index into ${n.shape}`);for(let b=0;b<c;b++)m.values[h*c+b]=d[x*c+b]}return t.makeTensorInfo(l,m.dtype,m.values)}var RA={kernelName:ci,backendName:"cpu",kernelFunc:i6};function a6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n;te([o,s],"gatherV2");let l=i;i==null&&(l=0);let u=y.sizeFromShape(s.shape),c=y.parseAxisParam(a,o.shape)[0],p=N.segment_util.collectGatherOpShapeInfo(o,s,c,l),m=rt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=rt({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,u/p.batchSize]}}),d=[p.batchSize,p.outerSize,u/p.batchSize,p.sliceSize],h=t.bufferSync(f),g=t.bufferSync(m),x=D_(g,h,d);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.makeTensorInfo(p.outputShape,x.dtype,x.values)}var FA={kernelName:ps,backendName:"cpu",kernelFunc:a6};var l6=Je((r,e)=>r>=e?1:0),u6=ot(lo,l6,null,"bool"),OA={kernelName:lo,backendName:"cpu",kernelFunc:u6};function c6(r){let{inputs:e,backend:t}=r,{input:n}=e,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=rt({inputs:{x:n},backend:t,attrs:{shape:[a,s]}}),l=Tg(i,!0,t),u=rt({inputs:{x:l},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),u}var PA={kernelName:ou,backendName:"cpu",kernelFunc:c6};var p6=Re(mi,r=>Number.isFinite(r)?1:0,"bool"),MA={kernelName:mi,backendName:"cpu",kernelFunc:p6};var m6=Re(fi,r=>Math.abs(r)===Infinity?1:0,"bool"),LA={kernelName:fi,backendName:"cpu",kernelFunc:m6};var f6=Re(di,r=>Number.isNaN(r)?1:0,"bool"),zA={kernelName:di,backendName:"cpu",kernelFunc:f6};var d6=Je((r,e)=>r<=e?1:0),h6=ot(gi,d6,null,"bool"),BA={kernelName:gi,backendName:"cpu",kernelFunc:h6};function g6(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=$_(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var VA={kernelName:iu,backendName:"cpu",kernelFunc:g6};var x6=Re(xi,r=>Math.log1p(r)),WA={kernelName:xi,backendName:"cpu",kernelFunc:x6};var y6=Je((r,e)=>r&&e),b6=ot(yi,y6,null,"bool"),jA={kernelName:yi,backendName:"cpu",kernelFunc:b6};var w6=Re(tl,r=>r?0:1,"bool"),GA={kernelName:tl,backendName:"cpu",kernelFunc:w6};var _6=Je((r,e)=>r||e),v6=ot(rl,_6,null,"bool"),UA={kernelName:rl,backendName:"cpu",kernelFunc:v6};function k6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:l}=n;te(o,"LRN");let u=o.shape[3],c=u-1,p=t.data.get(o.dataId).values,m=y.sizeFromShape(o.shape),f=new Float32Array(m);function d(h){let g=h%u,x=h-g+Math.max(0,g-s),b=h-g+Math.min(g+s,c),w=0;for(;x<=b;x++){let _=p[x];w+=_*_}return w}for(let h=0;h<m;h++){let g=d(h),x=p[h]*Math.pow(a+i*g,-l);f[h]=x}return t.makeTensorInfo(o.shape,o.dtype,f)}var qA={kernelName:ca,backendName:"cpu",kernelFunc:k6};function C6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=n;te(a,"LRNGrad");let p=y.sizeFromShape(a.shape),m=a.shape[3],f=t.data.get(a.dataId).values,d=t.data.get(o.dataId).values,h=t.data.get(s.dataId).values,g=new Float32Array(p),x=p;for(let b=0;b<x;b++){let w=b%m,_=b-w+Math.max(0,w-i),k=b-w+Math.min(m,w+i+1),E=0;for(let T=_;T<k;T++)E+=Math.pow(d[T],2);E=u*E+l;for(let T=_;T<k;T++){let F=-2*u*c*d[T]*h[b]/E;b===T&&(F+=Math.pow(E,-c)),F*=f[b],g[T]+=F}}return t.makeTensorInfo(a.shape,o.dtype,g)}var HA={kernelName:au,backendName:"cpu",kernelFunc:C6};function X_(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=t,l=o.shape,u=l.length,c=y.parseAxisParam(s,l),p=c,m=N.getAxesPermutation(p,u),f=i.data.get(o.dataId).values;if(m!=null){let _=new Array(u);for(let k=0;k<_.length;k++)_[k]=l[m[k]];f=mf(f,l,o.dtype,m,_),p=N.getInnerMostAxes(p.length,u),l=_}te(o,"max"),N.assertAxesAreInnerMostDims("max",p,u);let[d,h]=N.computeOutAndReduceShapes(l,p),g=y.sizeFromShape(h),x=R_(f,g,d,o.dtype),b=i.write(x,d,o.dtype),w=d;return a&&(w=N.expandShapeToKeepDim(d,c)),{dataId:b,shape:w,dtype:o.dtype}}var KA={kernelName:po,backendName:"cpu",kernelFunc:X_};function I6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;te(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;y.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,a,u,i,l),p;if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))p=$r({inputs:{x:o},backend:t});else{let m=t.data.get(o.dataId).values,f=y.computeStrides(o.shape),d=pp(m,o.shape,o.dtype,f,c,"max");p=t.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var XA={kernelName:fo,backendName:"cpu",kernelFunc:I6};function S6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u,dilations:c}=n;te(o,"maxPool3d");let p=c;p==null&&(p=[1,1,1]);let m=N.computePool3DInfo(o.shape,s,a,p,i,l,u),f=t.data.get(o.dataId).values,d=Ng(f,o.shape,o.dtype,y.computeStrides(o.shape),m,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}var YA={kernelName:pa,backendName:"cpu",kernelFunc:S6};function N6(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,{filterSize:a,strides:i,pad:l,dilations:u,dimRoundingMode:c}=n;te([o,s],"maxPool3DGrad");let p=N.computePool3DInfo(s.shape,a,i,u,l,c),m=t.bufferSync(s),f=qE(m,p),d=p.strideDepth,h=p.strideHeight,g=p.strideWidth,x=p.dilationDepth,b=p.dilationHeight,w=p.dilationWidth,_=p.effectiveFilterDepth,k=p.effectiveFilterHeight,E=p.effectiveFilterWidth,T=_-1-p.padInfo.front,F=E-1-p.padInfo.left,O=k-1-p.padInfo.top,M=Ie(s.shape,"float32"),j=t.bufferSync(o);for(let W=0;W<p.batchSize;++W)for(let U=0;U<p.inChannels;++U)for(let Y=0;Y<p.inDepth;++Y)for(let K=0;K<p.inHeight;++K)for(let Z=0;Z<p.inWidth;++Z){let re=Y-T,X=K-O,oe=Z-F,ae=0;for(let ie=0;ie<_;ie+=x){let pe=(re+ie)/d;if(!(pe<0||pe>=p.outDepth||Math.floor(pe)!==pe))for(let le=0;le<k;le+=b){let ge=(X+le)/h;if(!(ge<0||ge>=p.outHeight||Math.floor(ge)!==ge))for(let ye=0;ye<E;ye+=w){let be=(oe+ye)/g;if(be<0||be>=p.outWidth||Math.floor(be)!==be)continue;let ke=_*k*E-1-f.get(W,pe,ge,be,U),Ae=ie*k*E+le*E+ye,$e=ke===Ae?1:0;if($e===0)continue;ae+=j.get(W,pe,ge,be,U)*$e}}}M.set(ae,W,Y,K,Z,U)}return t.makeTensorInfo(M.shape,M.dtype,M.values)}var ZA={kernelName:uu,backendName:"cpu",kernelFunc:N6};function T6(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;te([s,a],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=n,m=N.computePool2DInfo(i.shape,l,u,1,c,p),f=t.data.get(i.dataId).values,d=Ie(m.outShape,i.dtype,Sg(f,i.shape,i.dtype,m).values),h=m.strideHeight,g=m.strideWidth,x=m.dilationHeight,b=m.dilationWidth,w=m.effectiveFilterHeight,_=m.effectiveFilterWidth,k=_-1-m.padInfo.left,E=w-1-m.padInfo.top,T=Ie(i.shape,"float32"),F=t.data.get(o.dataId).values,O=Ie(o.shape,"float32",F);for(let M=0;M<m.batchSize;++M)for(let j=0;j<m.inChannels;++j)for(let W=0;W<m.inHeight;++W)for(let U=0;U<m.inWidth;++U){let Y=W-E,K=U-k,Z=0;for(let re=0;re<w;re+=x){let X=(Y+re)/h;if(!(X<0||X>=m.outHeight||Math.floor(X)!==X))for(let oe=0;oe<_;oe+=b){let ae=(K+oe)/g;if(ae<0||ae>=m.outWidth||Math.floor(ae)!==ae)continue;let ie=w*_-1-d.get(M,X,ae,j),pe=re*_+oe,le=ie===pe?1:0;if(le===0)continue;Z+=O.get(M,X,ae,j)*le}}T.set(Z,M,W,U,j)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}var JA={kernelName:lu,backendName:"cpu",kernelFunc:T6};function QA(r,e,t,n,o){let s=y.computeStrides(e),a=pp(r,e,t,s,o,"max"),i=Sg(r,e,t,o,!0,n);return[a.values,i.values]}var e2={kernelName:cu,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,l=t;te(n,"MaxPoolWithArgmax");let u=l.data.get(n.dataId).values,c=N.computePool2DInfo(n.shape,o,s,[1,1],a),[p,m]=QA(u,n.shape,n.dtype,i,c),f=l.write(p,c.outShape,n.dtype),d=l.write(m,c.outShape,n.dtype);return[{dataId:f,shape:c.outShape,dtype:n.dtype},{dataId:d,shape:c.outShape,dtype:"int32"}]}};function Ku(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;te(o,"sum");let i;o.dtype==="bool"?i=Uo({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=$r({inputs:{x:o},backend:t});let l=i.shape.length,u=y.parseAxisParam(s,i.shape),c=N.getAxesPermutation(u,l),p=u,m=i;c!=null&&(m=or({inputs:{x:i},backend:t,attrs:{perm:c}}),p=N.getInnerMostAxes(p.length,l)),N.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,d]=N.computeOutAndReduceShapes(m.shape,p),h=N.upcastType(m.dtype,"int32"),g=lp(t,f,h),x=y.sizeFromShape(d),b=t.data.get(g.dataId).values,w=t.data.get(m.dataId).values;for(let _=0;_<b.length;++_){let k=_*x,E=0;for(let T=0;T<x;++T)E+=w[k+T];b[_]=E}if(a){let _=N.expandShapeToKeepDim(g.shape,u),k=g;g=rt({inputs:{x:g},backend:t,attrs:{shape:_}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(i),c!=null&&t.disposeIntermediateTensorInfo(m),g}var t2={kernelName:$o,backendName:"cpu",kernelFunc:Ku};function E6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=y.parseAxisParam(s,o.shape),u=N.computeOutAndReduceShapes(o.shape,i)[1],c=y.sizeFromShape(u),p=[],m=t.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=Uo({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});p.push(f);let d=gf({inputs:{a:f,b:m},backend:t});p.push(d);let h=Ku({inputs:{x:d},backend:t,attrs:{axis:s,keepDims:a}});return p.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}var r2={kernelName:ho,backendName:"cpu",kernelFunc:E6};function A6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;te(o,"min");let i=y.parseAxisParam(s,o.shape),l=i,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=or({inputs:{x:o},backend:t,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=t.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let _=0;_<f;++_){let k=h[b+_];k<w&&(w=k)}d[x]=w}u!=null&&t.disposeIntermediateTensorInfo(c);let g=t.makeTensorInfo(p,c.dtype,d);if(a){let x=N.expandShapeToKeepDim(p,i),b=rt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),b}return g}var n2={kernelName:go,backendName:"cpu",kernelFunc:A6};function D6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,mode:a}=n;te(o,"mirrorPad");let i=s.map((w,_)=>w[0]+o.shape[_]+w[1]),l=s.map(w=>w[0]),u=s.map((w,_)=>w[0]+o.shape[_]),c=a==="reflect"?0:1,p=t.data.get(o.dataId).values,m=o.shape.length,f=y.computeStrides(o.shape),d=y.sizeFromShape(i),h=i.length,g=y.computeStrides(i),x=y.getTypedArrayFromDType(o.dtype,d);for(let w=0;w<d;w++){let _=y.indexToLoc(w,h,g);for(let E=0;E<h;E++)_[E]<l[E]?_[E]=l[E]*2-_[E]-c:_[E]>=u[E]&&(_[E]=(u[E]-1)*2-_[E]+c);_=_.map((E,T)=>E-l[T]);let k=y.locToIndex(_,m,f);x[w]=p[k]}return{dataId:t.write(x,i,o.dtype),shape:i,dtype:o.dtype}}var o2={kernelName:ma,backendName:"cpu",kernelFunc:D6};var $6=Je((r,e)=>{let t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),R6=ot(bi,$6),s2={kernelName:bi,backendName:"cpu",kernelFunc:R6};var v2=Ec(w2());function rv(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let l=y.parseAxisParam([i],o.shape),u=X_({inputs:{x:o},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),c=N.expandShapeToKeepDim(u.shape,l),p=rt({inputs:{x:u},backend:t,attrs:{shape:c}}),m=hf({inputs:{a:o,b:p},backend:t}),f=A_({inputs:{x:m},backend:t}),d=Ku({inputs:{x:f},backend:t,attrs:{axis:l,keepDims:!1}}),h=rt({inputs:{x:d},backend:t,attrs:{shape:c}}),g=gf({inputs:{a:f,b:h},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),g}var _2={kernelName:Ro,backendName:"cpu",kernelFunc:rv};function B6(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n;te(o,"multinomial");let l=i?o:rv({inputs:{logits:o},backend:t,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=t.data.get(l.dataId).values,m=[u,s],f=y.makeZerosTypedArray(y.sizeFromShape(m),"int32");for(let d=0;d<u;++d){let h=d*c,g=new Float32Array(c-1);g[0]=p[h];for(let w=1;w<g.length;++w)g[w]=g[w-1]+p[h+w];let x=v2.alea(a.toString()),b=d*s;for(let w=0;w<s;++w){let _=x();f[b+w]=g.length;for(let k=0;k<g.length;k++)if(_<g[k]){f[b+w]=k;break}}}return i||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(m,"int32",f)}var k2={kernelName:pu,backendName:"cpu",kernelFunc:B6};var V6=Dr.nonMaxSuppressionV3Impl;function W6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=n;te(o,"NonMaxSuppression");let u=t.data.get(o.dataId).values,c=t.data.get(s.dataId).values,{selectedIndices:p}=V6(u,c,a,i,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var C2={kernelName:_i,backendName:"cpu",kernelFunc:W6};var j6=Dr.nonMaxSuppressionV4Impl;function G6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=n;te(o,"NonMaxSuppressionPadded");let c=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=j6(c,p,a,i,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var I2={kernelName:vi,backendName:"cpu",kernelFunc:G6};var U6=Dr.nonMaxSuppressionV5Impl;function q6(r){let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=n;te(o,"NonMaxSuppressionWithScore");let c=t.data.get(o.dataId).values,p=t.data.get(s.dataId).values,m=a,f=i,d=l,h=u,{selectedIndices:g,selectedScores:x}=U6(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var S2={kernelName:ki,backendName:"cpu",kernelFunc:q6};function H6(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n;te(o,"oneHot");let l=y.sizeFromShape(o.shape),u=new Float32Array(l*s);u.fill(i);let c=t.data.get(o.dataId).values;for(let p=0;p<l;++p)c[p]>=0&&c[p]<s&&(u[p*s+c[p]]=a);return t.makeTensorInfo([...o.shape,s],"int32",u)}var N2={kernelName:bo,backendName:"cpu",kernelFunc:H6};function bf(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Go({inputs:{input:n},backend:t}),s=bf({inputs:{x:o},backend:t}),a=Wi({inputs:{input:n},backend:t}),i=bf({inputs:{x:a},backend:t}),l=mr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return yf({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var T2={kernelName:_s,backendName:"cpu",kernelFunc:bf};function E2(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Go({inputs:{input:n},backend:t}),s=E2({inputs:{x:o},backend:t}),a=Wi({inputs:{input:n},backend:t}),i=bf({inputs:{x:a},backend:t}),l=mr({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return yf({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var A2={kernelName:ds,backendName:"cpu",kernelFunc:E2};function nv(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return mp({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=mp({inputs:{input:c},backend:t,attrs:{dim:o}});return i.push(p),p}),u=dl({inputs:l,backend:t,attrs:{axis:o}});return i.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var D2={kernelName:hs,backendName:"cpu",kernelFunc:nv};function K6(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n;te(o,"pad");let i=s.map((b,w)=>b[0]+o.shape[w]+b[1]),l=s.map(b=>b[0]),u=t.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),p=o.shape.length,m=y.computeStrides(o.shape),f=y.sizeFromShape(i),d=i.length,h=y.computeStrides(i),g=y.getTypedArrayFromDType(o.dtype,f);a!==0&&g.fill(a);for(let b=0;b<c;b++){let _=y.indexToLoc(b,p,m).map((E,T)=>E+l[T]),k=y.locToIndex(_,d,h);g[k]=u[b]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var Ag={kernelName:wo,backendName:"cpu",kernelFunc:K6};var X6=Je((r,e)=>Math.pow(r,e)),Y6=ot(_o,X6),$2={kernelName:_o,backendName:"cpu",kernelFunc:Y6};function Z6(r){let{backend:e,attrs:t}=r,{start:n,stop:o,dtype:s,step:a}=t,i=ff(n,o,a,s);return e.makeTensorInfo([i.length],s,i)}var R2={kernelName:fa,backendName:"cpu",kernelFunc:Z6};var J6=Re(Ii,r=>1/r),F2={kernelName:Ii,backendName:"cpu",kernelFunc:J6};function Q6(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;te(o,"resizeBilinear");let l=y.computeStrides(o.shape),[u,c]=i,[p,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([p,u,c,d])),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=0,_=x[0]/b[0],k=x[1]/b[1];for(let E=0;E<p;E++)for(let T=0;T<u;T++){let F;a?F=_*(T+.5)-.5:F=_*T;let O=Math.max(0,Math.floor(F)),M=F-O,j=Math.min(m-1,Math.ceil(F)),W=E*l[0]+O*l[1],U=E*l[0]+j*l[1];for(let Y=0;Y<c;Y++){let K;a?K=k*(Y+.5)-.5:K=k*Y;let Z=Math.max(0,Math.floor(K)),re=K-Z,X=Math.min(f-1,Math.ceil(K)),oe=W+Z*l[2],ae=U+Z*l[2],ie=W+X*l[2],pe=U+X*l[2];for(let le=0;le<d;le++){let ge=h[oe+le],ye=h[ae+le],be=h[ie+le],ke=h[pe+le],Ae=ge+(be-ge)*re,$e=ye+(ke-ye)*re,Fe=Ae+($e-Ae)*M;g[w++]=Fe}}}return t.makeTensorInfo([p,u,c,d],"float32",g)}var O2={kernelName:Co,backendName:"cpu",kernelFunc:Q6};function e5(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;te([s,o],"resizeBilinearGrad");let i=y.computeStrides(o.shape),[l,u,c,p]=o.shape,[,m,f]=s.shape,d=new Float32Array(l*u*c*p),h=[a&&m>1?u-1:u,a&&f>1?c-1:c],g=[a&&m>1?m-1:m,a&&f>1?f-1:f],x=h[0]/g[0],b=h[1]/g[1],w=t.data.get(s.dataId).values,_=0;for(let k=0;k<l;k++){let E=k*i[0];for(let T=0;T<m;T++){let F=T*x,O=Math.floor(F),M=Math.min(Math.ceil(F),u-1),j=E+O*i[1],W=E+M*i[1],U=F-O,Y=1-U;for(let K=0;K<f;K++){let Z=K*b,re=Math.floor(Z),X=Math.min(Math.ceil(Z),c-1),oe=Z-re,ae=1-oe,ie=j+re*i[2],pe=j+X*i[2],le=W+re*i[2],ge=W+X*i[2],ye=Y*ae,be=Y*oe,ke=U*ae,Ae=U*oe;for(let $e=0;$e<p;$e++){let Fe=w[_++];d[ie+$e]+=Fe*ye,d[pe+$e]+=Fe*be,d[le+$e]+=Fe*ke,d[ge+$e]+=Fe*Ae}}}}return t.makeTensorInfo([l,c,u,p],"float32",d)}var P2={kernelName:du,backendName:"cpu",kernelFunc:e5};function t5(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n;te(o,"resizeNearestNeighbor");let l=y.computeStrides(o.shape),[u,c]=i,[p,m,f,d]=o.shape,h=t.data.get(o.dataId).values,g=new Float32Array(p*u*c*d),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=x[0]/b[0],_=x[1]/b[1],k=0;for(let E=0;E<p;E++){let T=E*l[0];for(let F=0;F<u;F++){let O=a?w*(F+.5):w*F,M=Math.min(m-1,s?Math.round(O):Math.floor(O));a&&(M=Math.max(0,M));let j=T+M*l[1];for(let W=0;W<c;W++){let U=a?_*(W+.5):_*W,Y=Math.min(f-1,s?Math.round(U):Math.floor(U));a&&(Y=Math.max(0,Y));let K=j+Y*l[2];for(let Z=0;Z<d;Z++){let re=h[K+Z];g[k++]=re}}}}return t.makeTensorInfo([p,u,c,d],o.dtype,g)}var M2={kernelName:da,backendName:"cpu",kernelFunc:t5};function r5(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n;te([s,o],"resizeNearestNeighborGrad");let i=y.computeStrides(o.shape),l=y.computeStrides(s.shape),[u,c,p,m]=o.shape,[,f,d]=s.shape,h=new Float32Array(u*c*p*m),g=t.data.get(s.dataId).values,x=[a&&f>1?c-1:c,a&&d>1?p-1:p],b=[a&&f>1?f-1:f,a&&d>1?d-1:d],w=x[0]/b[0],_=x[1]/b[1],k=1/w,E=1/_,T=Math.ceil(k)*2+2,F=Math.ceil(E)*2+2;for(let O=0;O<u;O++){let M=O*i[0];for(let j=0;j<c;j++){let W=M+j*i[1],U=Math.floor(j*k),Y=Math.floor(U-T/2);for(let K=0;K<p;K++){let Z=W+K*i[2],re=Math.floor(K*E),X=Math.floor(re-F/2);for(let oe=0;oe<m;oe++){let ae=0;for(let ie=0;ie<T;ie++){let pe=ie+Y;if(pe<0||pe>=f)continue;let le=M+pe*l[1],ge=pe*w,ye=Math.min(c-1,a?Math.round(ge):Math.floor(ge));if(j===ye)for(let be=0;be<F;be++){let ke=be+X;if(ke<0||ke>=d)continue;let Ae=le+ke*l[2],$e=ke*_,Fe=Math.min(p-1,a?Math.round($e):Math.floor($e));K===Fe&&(ae+=g[Ae+oe])}}h[Z+oe]=ae}}}}return t.makeTensorInfo(o.shape,o.dtype,h)}var L2={kernelName:fu,backendName:"cpu",kernelFunc:r5};function n5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n;te(o,"reverse");let a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return $r({inputs:{x:o},backend:t});let l=new pt(o.shape,o.dtype),u=t.bufferSync(o);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),m=p.slice();i.forEach(f=>m[f]=o.shape[f]-1-m[f]),l.set(u.get(...m),...p)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}var z2={kernelName:So,backendName:"cpu",kernelFunc:n5};var B2={kernelName:Fi,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,l=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[u,c,p,m]=n.shape,[f,d]=N.getImageCenter(a,c,p),h=255,g=Math.sin(o),x=Math.cos(o),b=i.data.get(n.dataId).values;for(let _=0;_<u;_++){let k=_*p*c*m;for(let E=0;E<c;E++){let T=E*(p*m);for(let F=0;F<p;F++){let O=F*m;for(let M=0;M<m;M++){let j=[u,E,F,M],W=j[2],U=j[1],Y=(W-f)*x-(U-d)*g,K=(W-f)*g+(U-d)*x;Y=Math.round(Y+f),K=Math.round(K+d);let Z=s;if(typeof s!="number"&&(M===3?Z=h:Z=s[M]),Y>=0&&Y<p&&K>=0&&K<c){let X=K*(p*m),oe=Y*m,ae=k+X+oe+M;Z=b[ae]}let re=k+T+O+M;l[re]=Z}}}}return{dataId:i.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var o5=Re(No,r=>{let e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),V2={kernelName:No,backendName:"cpu",kernelFunc:o5};function Dg(r,e,t,n,o,s,a,i,l,u){let c=[n/o,o],p=r.values,m=e.values;if(n===0)return Ie(t,e.dtype);let f=Ie(c,e.dtype);f.values.fill(l);for(let d=0;d<s;d++){let h=[],g=0;for(let x=0;x<a;x++){let b=p[d*a+x];h.push(b),g+=b*i[x]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${t}`);for(let x=0;x<o;x++)u?f.values[g*o+x]+=m[d*o+x]:f.values[g*o+x]=e.rank===0?m[0]:m[d*o+x]}return f}function s5(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,o,a),m=!0,f=t.bufferSync(o),d=t.bufferSync(s),h=Dg(f,d,a,p,u,l,i,c,0,m);return t.makeTensorInfo(a,h.dtype,h.values)}var W2={kernelName:Si,backendName:"cpu",kernelFunc:s5};function i5(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e;te([n,o,s],"select");let a=n.shape.length,i=t.data.get(n.dataId).values,l=t.data.get(o.dataId).values,u=t.data.get(s.dataId).values,c=dr(o.dtype,s.dtype),p=y.makeZerosTypedArray(y.sizeFromShape(o.shape),c),m=0,f=a===0||a>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let d=0;d<i.length;d++)for(let h=0;h<f;h++)i[d]===1?p[m++]=l[d]:p[m++]=u[d];return t.makeTensorInfo(o.shape,c,p)}var j2={kernelName:xs,backendName:"cpu",kernelFunc:i5};var a5=N.SELU_SCALEALPHA,l5=N.SELU_SCALE,u5=Re(Ni,r=>r>=0?l5*r:a5*(Math.exp(r)-1)),G2={kernelName:Ni,backendName:"cpu",kernelFunc:u5};var c5=Re(Ao,r=>1/(1+Math.exp(-r))),U2={kernelName:Ao,backendName:"cpu",kernelFunc:c5};var p5=Re(Ei,r=>r<0?-1:r>0?1:0),q2={kernelName:Ei,backendName:"cpu",kernelFunc:p5};var m5=Re(Eo,r=>Math.sin(r)),H2={kernelName:Eo,backendName:"cpu",kernelFunc:m5};var f5=Re(Ti,r=>Math.sinh(r)),K2={kernelName:Ti,backendName:"cpu",kernelFunc:f5};var d5=11920928955078125e-23,X2=Math.log(d5)+2,h5=Re(Ai,r=>{let e=r>-X2,t=r<X2,n=Math.exp(r),o;return t?o=n:e?o=r:o=Math.log(1+n),o}),Y2={kernelName:Ai,backendName:"cpu",kernelFunc:h5};function g5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;te([o],"spaceToBatchND");let i=y.sizeFromShape(s),l=[[0,0]];l.push(...a);for(let E=1+s.length;E<o.shape.length;++E)l.push([0,0]);let u=Ag.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),c=N.getReshaped(u.shape,s,i,!1),p=N.getPermuted(c.length,s.length,!1),m=N.getReshapedPermuted(u.shape,s,i,!1),h=rt({inputs:{x:u},backend:t,attrs:{shape:c}}),b=or({inputs:{x:h},backend:t,attrs:{perm:p}}),k=rt({inputs:{x:b},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(b),k}var Z2={kernelName:ha,backendName:"cpu",kernelFunc:g5};function x5(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=N.calculateShapes(s,o,i),f=!1,d=t.bufferSync(o),h=t.bufferSync(s),g=t.data.get(a.dataId).values[0],x=Dg(d,h,i,m,c,u,l,p,g,f);return t.makeTensorInfo(i,x.dtype,x.values)}var J2={kernelName:hu,backendName:"cpu",kernelFunc:x5};function y5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],l=N.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),c=o.shape.slice();return l.map(p=>{let m=[...c];m[i]=p;let f=Ko({inputs:{x:o},backend:t,attrs:{begin:u,size:m}});return u[i]+=p,f})}var Q2={kernelName:bs,backendName:"cpu",kernelFunc:y5};var b5=Re(Do,r=>Math.sqrt(r)),eD={kernelName:Do,backendName:"cpu",kernelFunc:b5};var tD={kernelName:ga,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{let{x:t}=r,n=e;te(t,"square");let o=n.data.get(t.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let l=o[i];s[i]=l*l}return{dataId:n.write(s,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};var w5=Re(On,(r,e)=>{let t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),rD={kernelName:On,backendName:"cpu",kernelFunc:w5};function _5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n;te(o,"stridedSlice");let{nonStrided:f,$begin:d,$strides:h,size:g,newShape:x,outShape:b}=ir.sliceInfo(o.shape,s,a,i,l,u,c,p,m),w=rt({inputs:{x:o},backend:t,attrs:{shape:x}}),_;if(f){let E=Ko({inputs:{x:w},backend:t,attrs:{begin:d,size:g}});_=rt({inputs:{x:E},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(E)}else if(b.some(E=>E===0))_=t.makeTensorInfo(b,o.dtype,[]);else{let E=t.bufferSync(w),T=F_(b,E,h,d);_=t.makeTensorInfo(T.shape,T.dtype,T.values)}let k=rt({inputs:{x:_},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),k}var nD={kernelName:Di,backendName:"cpu",kernelFunc:_5};var v5=Re($i,r=>Math.tan(r)),oD={kernelName:$i,backendName:"cpu",kernelFunc:v5};var k5=Re(Po,r=>Math.tanh(r)),sD={kernelName:Po,backendName:"cpu",kernelFunc:k5};function C5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;te(o,"tile");let a=O_(t.bufferSync(o),s);return t.makeTensorInfo(a.shape,a.dtype,a.values)}var iD={kernelName:_n,backendName:"cpu",kernelFunc:C5};function I5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n;te(o,"topk");let i=t.data.get(o.dataId).values,[l,u]=P_(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var aD={kernelName:Ri,backendName:"cpu",kernelFunc:I5};function S5(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;te(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:l,indices:u}=M_(a,o,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var lD={kernelName:gu,backendName:"cpu",kernelFunc:S5};function N5(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],l=new Array(a-1),u=0;for(let f=0;f<a;f++)f!==s&&(l[u++]=o.shape[f]);let c=new Array(a).fill(0),p=o.shape.slice();p[s]=1;let m=new Array(i);for(let f=0;f<m.length;f++){c[s]=f;let d=Ko({inputs:{x:o},backend:t,attrs:{begin:c,size:p}});m[f]=rt({inputs:{x:d},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(d)}return m}var uD={kernelName:ws,backendName:"cpu",kernelFunc:N5};function T5(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n;te(o,"unsortedSegmentSum");let i=o.shape.length,l=s.shape.length,u=[],c=[],p=i-l,m=s;for(let d=0;d<p;++d){let h=mp({inputs:{input:m},backend:t,attrs:{dim:d+1}});m=h,c.push(h)}for(let d=0;d<a;++d){let h=y.createScalarValue(d,"int32"),g=t.makeTensorInfo([],"int32",h),x=H_({inputs:{a:g,b:m},backend:t}),b=Uo({inputs:{x},backend:t,attrs:{dtype:"float32"}}),w=pf({inputs:{a:b,b:o},backend:t}),_=Ku({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});u.push(_),c.push(g),c.push(x),c.push(b),c.push(w),c.push(_)}let f=nv({inputs:u,backend:t,attrs:{axis:0}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var cD={kernelName:xa,backendName:"cpu",kernelFunc:T5};var E5=[RE,B1,FE,OE,q1,PE,ME,LE,zE,BE,VE,WE,jE,GE,UE,HE,KE,XE,YE,$E,ZE,JE,QE,G1,K1,eA,V1,tA,nA,sA,iA,oA,lA,uA,aA,cA,pA,mA,fA,dA,hA,gA,xA,yA,bA,wA,vA,_A,xf,SE,kA,CA,IA,Y1,SA,J1,NA,TA,EA,eE,AA,DA,$A,RA,FA,rE,OA,W1,PA,rA,MA,LA,zA,NE,oE,BA,VA,iE,WA,jA,GA,UA,qA,HA,lE,XA,YA,ZA,JA,e2,KA,r2,n2,cE,o2,s2,k2,pE,fE,C2,I2,S2,hE,N2,A2,D2,Ag,$2,TE,yE,R2,j1,F2,EE,AE,DE,O2,P2,M2,L2,z2,B2,V2,wE,W2,j2,G2,U2,q2,H2,K2,_E,_2,Y2,Z2,J2,Q2,eD,tD,kE,rD,nD,IE,t2,oD,sD,iD,aD,gE,lD,uD,cD,T2];for(let r of E5)nl(r);var fD={};Ze(fD,{assertNotComplex:()=>Rs,bindCanvasToFramebuffer:()=>z5,bindColorTextureToFramebuffer:()=>vf,bindTextureToProgramUniformSampler:()=>yv,bindTextureUnit:()=>gD,bindVertexBufferToProgramAttribute:()=>$g,callAndCheck:()=>Ne,canBeRepresented:()=>iv,createFragmentShader:()=>lv,createFramebuffer:()=>hv,createProgram:()=>uv,createStaticIndexBuffer:()=>mv,createStaticVertexBuffer:()=>pv,createTexture:()=>fv,createVertexShader:()=>av,getBatchDim:()=>Ba,getExtensionOrThrow:()=>fp,getFramebufferErrorMessage:()=>xD,getMaxTexturesInShader:()=>_v,getNumChannels:()=>M5,getProgramUniformLocation:()=>xv,getProgramUniformLocationOrThrow:()=>gv,getRowsCols:()=>Va,getShapeAs3D:()=>kf,getTextureShapeFromLogicalShape:()=>bv,getWebGLDisjointQueryTimerVersion:()=>vv,getWebGLErrorMessage:()=>dD,getWebGLMaxTextureSize:()=>wv,hasExtension:()=>In,isCapableOfRenderingToFloatTexture:()=>Cv,isDownloadFloatTextureEnabled:()=>Iv,isReshapeFree:()=>xl,isWebGLFenceEnabled:()=>Sv,isWebGLVersionEnabled:()=>Mg,linkProgram:()=>cv,resetMaxTextureSize:()=>B5,resetMaxTexturesInShader:()=>V5,unbindColorTextureFromFramebuffer:()=>Rg,unbindTextureUnit:()=>L5,validateFramebuffer:()=>dp,validateProgram:()=>_f,validateTextureSize:()=>dv});var Yu={},ov={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function sv(r,e){Yu[r]=e}function Vn(r){if(!(r in Yu)){let t=A5(r);if(t!==null)Yu[r]=t;else return console.log("Could not get context for WebGL version",r),null}let e=Yu[r];return e.isContextLost()?(delete Yu[r],Vn(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Yu[r])}function D5(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function A5(r){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=D5(r);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete Yu[r]},!1),r===1?e.getContext("webgl",ov)||e.getContext("experimental-webgl",ov):e.getContext("webgl2",ov)}var hl;(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(hl||(hl={}));var Rr;(function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"})(Rr||(Rr={}));var vr;(function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(vr||(vr={}));function Zu(r,e){return[e,r]}function pD(r,e){return r*e}function gl(r){let e=y.sizeFromShape(r),t=Math.ceil(e/4);return y.sizeToSquarishShape(t)}function ji(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function mD(r,e){let[t,n]=ji(r,e);return t*n*4}function wf(r,e){let t=r,n,o,s,a,i,l,u,c,p,m;return G().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,s=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,c=1,p=t.HALF_FLOAT,m=t.FLOAT):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=t.RGBA,i=r.RGBA,u=4,c=4,p=e!=null?e.HALF_FLOAT_OES:null,m=r.FLOAT),l=r.RGBA,{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function Ne(r,e){let t=e();return G().getBool("DEBUG")&&$5(r),t}function $5(r){let e=r.getError();if(e!==r.NO_ERROR)throw new Error("WebGL Error: "+dD(r,e))}var R5=596e-10,F5=65504;function iv(r){return!!(G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||R5<Math.abs(r)&&Math.abs(r)<F5)}function dD(r,e){switch(e){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function fp(r,e){return za(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function av(r,e){let t=za(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ne(r,()=>r.shaderSource(t,e)),Ne(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function lv(r,e){let t=za(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ne(r,()=>r.shaderSource(t,e)),Ne(r,()=>r.compileShader(t)),r.getShaderParameter(t,r.COMPILE_STATUS)===!1)throw O5(e,r.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}var P5=/ERROR: [0-9]+:([0-9]+):/g;function O5(r,e){let t=P5.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(r);return}let n=+t[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((p,m)=>y.rightPad((m+1).toString(),s)+p),i=0;for(let p=0;p<a.length;p++)i=Math.max(a[p].length,i);let l=a.slice(0,n-1),u=a.slice(n-1,n),c=a.slice(n);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${y.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function uv(r){return za(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function cv(r,e){if(Ne(r,()=>r.linkProgram(e)),r.getProgramParameter(e,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function _f(r,e){if(Ne(r,()=>r.validateProgram(e)),r.getProgramParameter(e,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function pv(r,e){let t=za(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),Ne(r,()=>r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function mv(r,e){let t=za(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return Ne(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t)),Ne(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,e,r.STATIC_DRAW)),t}function M5(){return G().getNumber("WEBGL_VERSION")===2?1:4}function fv(r){return za(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function dv(r,e){let t=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||e<=0){let n=`[${r}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>t||e>t){let n=`[${r}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function hv(r){return za(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function $g(r,e,t,n,o,s,a){let i=r.getAttribLocation(e,t);return i===-1?!1:(Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),Ne(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),Ne(r,()=>r.enableVertexAttribArray(i)),!0)}function gD(r,e,t){hD(r,t),Ne(r,()=>r.activeTexture(r.TEXTURE0+t)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e))}function L5(r,e){hD(r,e),Ne(r,()=>r.activeTexture(r.TEXTURE0+e)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function gv(r,e,t){return za(r,()=>r.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function xv(r,e,t){return r.getUniformLocation(e,t)}function yv(r,e,t,n){Ne(r,()=>gD(r,e,n)),Ne(r,()=>r.uniform1i(t,n))}function z5(r){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),Ne(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),Ne(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function vf(r,e,t){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),Ne(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function Rg(r,e){Ne(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),Ne(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function dp(r){let e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+xD(r,e))}function xD(r,e){switch(e){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function za(r,e,t){let n=Ne(r,()=>e());if(n==null)throw new Error(t);return n}function hD(r,e){let t=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+r.TEXTURE0;if(n<r.TEXTURE0||n>t){let o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Ba(r,e=2){return y.sizeFromShape(r.slice(0,r.length-e))}function Va(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function kf(r){let e=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(e=[Ba(r),...Va(r)]),e}function bv(r,e=!1){let t=G().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,r=r.map((o,s)=>s>=r.length-2?y.nearestLargerEven(r[s]):r[s]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let n=y.sizeFromShape(r);if(r.length<=1&&n<=t)return[1,n];if(r.length===2&&r[0]<=t&&r[1]<=t)return r;if(r.length===3&&r[0]*r[1]<=t&&r[2]<=t)return[r[0]*r[1],r[2]];if(r.length===3&&r[0]<=t&&r[1]*r[2]<=t)return[r[0],r[1]*r[2]];if(r.length===4&&r[0]*r[1]*r[2]<=t&&r[3]<=t)return[r[0]*r[1]*r[2],r[3]];if(r.length===4&&r[0]<=t&&r[1]*r[2]*r[3]<=t)return[r[0],r[1]*r[2]*r[3]];if(e){let o=Ba(r),s=2,a=2;return r.length&&([s,a]=Va(r)),n=o*(s/2)*(a/2),y.sizeToSquarishShape(n).map(i=>i*2)}return y.sizeToSquarishShape(n)}function Fg(r){return r%2==0}function xl(r,e){if(r=r.slice(-2),e=e.slice(-2),y.arraysEqual(r,e)||!r.length||!e.length||r[0]===0||r[1]===0||e[0]===0||e[1]===0)return!0;if(r.length!==e.length){let t=r.slice(-1)[0],n=e.slice(-1)[0];if(t===n||Fg(t)&&Fg(n)&&(r[0]===1||e[0]===1))return!0}return r[1]===e[1]&&Fg(r[0])&&Fg(e[0])}var Og,Pg;function wv(r){if(Og==null){let e=Vn(r);Og=e.getParameter(e.MAX_TEXTURE_SIZE)}return Og}function B5(){Og=null}function V5(){Pg=null}function _v(r){if(Pg==null){let e=Vn(r);Pg=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Pg)}function vv(r){if(r===0)return 0;let e,t=Vn(r);return In(t,"EXT_disjoint_timer_query_webgl2")&&r===2?e=2:In(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function In(r,e){return r.getExtension(e)!=null}function Mg(r){try{if(Vn(r)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Cv(r){if(r===0)return!1;let e=Vn(r);if(r===1){if(!In(e,"OES_texture_float"))return!1}else if(!In(e,"EXT_color_buffer_float"))return!1;return kv(e)}function Iv(r){if(r===0)return!1;let e=Vn(r);if(r===1){if(!In(e,"OES_texture_float")||!In(e,"WEBGL_color_buffer_float"))return!1}else{if(In(e,"EXT_color_buffer_float"))return kv(e);let n="EXT_color_buffer_half_float";if(In(e,n)){let o=e.getExtension(n);return W5(e,o)}return!1}return kv(e)}function kv(r){let e=wf(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),a}function W5(r,e){let t=wf(r,e),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatHalfFloat,o,s,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function Sv(r){return r!==2?!1:Vn(r).fenceSync!=null}function Rs(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{t!=null&&y.assert(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}var Ve=G();Ve.registerFlag("HAS_WEBGL",()=>Ve.getNumber("WEBGL_VERSION")>0);Ve.registerFlag("WEBGL_VERSION",()=>Mg(2)?2:Mg(1)?1:0);Ve.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ve.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ve.get("WEBGL_VERSION")===2);Ve.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ve.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ve.registerFlag("WEBGL_PACK",()=>Ve.getBool("HAS_WEBGL"));Ve.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_PACK_CLIP",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);Ve.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_PACK_REDUCE",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_CONV_IM2COL",()=>Ve.getBool("WEBGL_PACK"));Ve.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>wv(Ve.getNumber("WEBGL_VERSION")));Ve.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>_v(Ve.getNumber("WEBGL_VERSION")));Ve.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Ve.getNumber("WEBGL_VERSION");return r===0?0:vv(r)});Ve.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ve.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Vc.isMobile());Ve.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>Cv(Ve.getNumber("WEBGL_VERSION")));Ve.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ve.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ve.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ve.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Iv(Ve.getNumber("WEBGL_VERSION")));Ve.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Sv(Ve.getNumber("WEBGL_VERSION")));Ve.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ve.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ve.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});function Lt(){let r,e,t,n,o,s,a,i,l,u;return G().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",e="in",t="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",e="attribute",t="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function Fs(r,e,t="index"){let n=y.computeStrides(e);return n.map((o,s)=>{let a=`int ${r[s]} = ${t} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${t} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function hp(r){let e=y.computeStrides(r).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}var Lg=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var Nv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=hl.DENSE;let t=gl(e),n=Lt();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Fs(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}};var Tv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=hl.DENSE;let t=gl(e),n=Lt();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Fs(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}};var Ev=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Rr.DOWNLOAD;let t=Lt();this.outputShape=e,this.userCode=`
      ${Lg}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}};var Av=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Rr.DOWNLOAD;let t=Lt();this.outputShape=e,this.userCode=`
      ${Lg}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}};var Dv=class{constructor(e,t,n=!1){this.variableNames=["A"];let o=Lt(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`
      ${hp(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${a};
        int c = imod(flatIndex, ${a});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);
        vec4 values = ${o.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${o.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};var $v=class{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let o=Lt(),[s,a]=t;this.outputShape=e;let i="",l="result";n&&(l="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let c=0;c<=1;c++){let p=u*2+c;i+=`
          localCoords = coords;
          if(localCoords[2] + ${c} < ${e[2]}) {
            localCoords[2] += ${c};
            if(localCoords[1] + ${u} < ${e[1]}) {
              localCoords[1] += ${u};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${a};
              c = imod(flatIndex, ${a});
              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);
              values = ${o.texture2D}(A, uv);

              if(offset == 0) {
                result[${p}] = values[0];
              } else if(offset == 1) {
                result[${p}] = values[1];
              } else if(offset == 2) {
                result[${p}] = values[2];
              } else {
                result[${p}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${hp(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${i}

        ${o.output} = ${l};
      }
    `}};var yD={};Ze(yD,{bindVertexProgramAttributeStreams:()=>Vv,createBufferFromOutputTexture:()=>Gv,createFloat16MatrixTexture:()=>Mv,createFloat16PackedMatrixTexture:()=>Bv,createFloat32MatrixTexture:()=>Pv,createIndexBuffer:()=>Ov,createPackedMatrixTexture:()=>zv,createUnsignedBytesMatrixTexture:()=>Lv,createVertexBuffer:()=>Fv,createVertexShader:()=>Rv,downloadByteEncodedFloatMatrixFromOutputTexture:()=>qv,downloadFloat32MatrixFromBuffer:()=>Uv,downloadMatrixFromPackedOutputTexture:()=>Kv,downloadPackedMatrixFromBuffer:()=>Hv,getInternalFormatForFloat16MatrixTexture:()=>Bg,getInternalFormatForFloat16PackedMatrixTexture:()=>jg,getInternalFormatForFloat32MatrixTexture:()=>zg,getInternalFormatForPackedMatrixTexture:()=>Wg,getInternalFormatForUnsignedBytesMatrixTexture:()=>Vg,uploadDenseMatrixToTexture:()=>Wv,uploadPixelDataToTexture:()=>jv});function Rv(r){let e=Lt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return av(r,t)}function Fv(r){let e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return pv(r,e)}function Ov(r){let e=new Uint16Array([0,1,2,2,1,3]);return mv(r,e)}function Cf(r,e,t,n,o,s){dv(e,t);let a=fv(r),i=r.TEXTURE_2D;return Ne(r,()=>r.bindTexture(i,a)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),Ne(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),Ne(r,()=>r.texImage2D(i,0,n,e,t,0,o,s,null)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null)),a}function zg(r){return r.internalFormatFloat}function Pv(r,e,t,n){let[o,s]=Zu(e,t);return Cf(r,o,s,zg(n),n.textureFormatFloat,r.FLOAT)}function Bg(r){return r.internalFormatHalfFloat}function Mv(r,e,t,n){let[o,s]=Zu(e,t);return Cf(r,o,s,Bg(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function Vg(r){return r.downloadTextureFormat}function Lv(r,e,t,n){let[o,s]=Zu(e,t);return Cf(r,o,s,Vg(n),r.RGBA,r.UNSIGNED_BYTE)}function Wg(r){return r.internalFormatPackedFloat}function zv(r,e,t,n){let[o,s]=ji(e,t);return Cf(r,o,s,Wg(n),r.RGBA,r.FLOAT)}function jg(r){return r.internalFormatPackedHalfFloat}function Bv(r,e,t,n){let[o,s]=ji(e,t);return Cf(r,o,s,jg(n),r.RGBA,n.textureTypeHalfFloat)}function Vv(r,e,t){let n=0,o=3*4,s=3*4+2*4;return Ne(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),$g(r,e,"clipSpacePos",t,3,s,n)&&$g(r,e,"uv",t,2,s,o)}function Wv(r,e,t,n,o,s){Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e));let a,i,l;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=r.UNSIGNED_BYTE,l=r.RGBA):(a=new Float32Array(t*n*4),i=r.FLOAT,l=s.internalFormatPackedFloat),a.set(o),Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,t,n,0,r.RGBA,i,a)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function jv(r,e,t){Ne(r,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):Ne(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),Ne(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function Gv(r,e,t,n){let o=r.createBuffer();Ne(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*e*t;return Ne(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),Ne(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,0)),Ne(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function Uv(r,e,t){let n=r,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function qv(r,e,t,n){let[o,s]=Zu(e,t),a=4,i=new Uint8Array(pD(e*t,a));return Ne(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function Hv(r,e,t,n,o,s,a,i){let l=r,u=new Float32Array(mD(s,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function Kv(r,e,t){let n=new Float32Array(e*t*4);return Ne(r,()=>r.readPixels(0,0,t,e,r.RGBA,r.FLOAT,n)),n}var Gg=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=G().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,sv(t,e)):this.gl=Vn(t);let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(G().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=fp(this.gl,s),In(this.gl,a))this.textureHalfFloatExtension=fp(this.gl,a);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),In(this.gl,o))this.colorBufferHalfFloatExtension=fp(this.gl,o);else if(G().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",In(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(In(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Fv(this.gl),this.indexBuffer=Ov(this.gl),this.framebuffer=hv(this.gl),this.textureConfig=wf(this.gl,this.textureHalfFloatExtension)}get debug(){return G().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;Ne(e,()=>e.finish()),Ne(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ne(e,()=>e.deleteFramebuffer(this.framebuffer)),Ne(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ne(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ne(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Pv(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Mv(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Lv(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jv(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),Wv(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Bv(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),zv(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Rg(this.gl,this.framebuffer),this.outputTexture=null),Ne(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>qv(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,s,a){return Hv(this.gl,e,t,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Uv(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let o=Gv(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(G().getBool("WEBGL_FENCE_API_ENABLED")){let o=e,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=s}else G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>Kv(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl,n=lv(t,e),o=Rv(t),s=uv(t);return Ne(t,()=>t.attachShader(s,o)),Ne(t,()=>t.attachShader(s,n)),cv(t,s),this.debug&&_f(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=Vv(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Ne(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&_f(this.gl,this.program),Ne(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?gv(this.gl,e,t):xv(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ne(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),yv(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[o,s]=ji(t,n);this.setOutputMatrixTextureDriver(e,o,s)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&_f(this.gl,this.program),dp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),Ne(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ne(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=fp(this.gl,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=j5(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),vf(this.gl,e,this.framebuffer),this.debug&&dp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(vf(this.gl,this.outputTexture,this.framebuffer),this.debug&&dp(this.gl)):Rg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let o=this.gl;vf(o,e,this.framebuffer),this.debug&&dp(o),this.outputTexture=e,Ne(o,()=>o.viewport(0,0,t,n)),Ne(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),Ne(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function j5(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var{getBroadcastDims:bD}=N;function wD(r,e,t,n){let o=[];r.forEach(d=>{let h=y.sizeFromShape(d.shapeInfo.logicalShape);d.shapeInfo.isUniform?o.push(`uniform float ${d.name}${h>1?`[${h}]`:""};`):(o.push(`uniform sampler2D ${d.name};`),o.push(`uniform int offset${d.name};`))});let s=o.join(`
`),a=r.map(d=>G5(d,e,n)).join(`
`),i=e.texShape,l=Lt(),u=H5(l),c,p,m=Y5(l);return e.isPacked?(c=U5(e.logicalShape,i),p=X5(l)):(c=q5(e.logicalShape,i),p=K5(l)),n&&(m+=Z5),[m,u,p,s,c,a,t].join(`
`)}function gp(r){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return J5(r);case 1:return Q5(r);case 2:return e8(r);case 3:return t8(r);case 4:return r8(r);case 5:return n8(r);case 6:return o8(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function _D(r){switch(r.shapeInfo.logicalShape.length){case 0:return s8(r);case 1:return i8(r);case 2:return a8(r);case 3:return l8(r);default:return u8(r)}}function G5(r,e,t=!1){let n="";t?n+=_D(r):n+=gp(r);let o=r.shapeInfo.logicalShape,s=e.logicalShape;return o.length<=s.length&&(t?n+=c8(r,e):n+=p8(r,e)),n}function U5(r,e){switch(r.length){case 0:return vD();case 1:return m8(r,e);case 2:return h8(r,e);case 3:return f8(r,e);default:return d8(r,e)}}function q5(r,e){switch(r.length){case 0:return vD();case 1:return g8(r,e);case 2:return _8(r,e);case 3:return x8(r,e);case 4:return y8(r,e);case 5:return b8(r,e);case 6:return w8(r,e);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function H5(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function K5(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function X5(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function Y5(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${v8}
    ${k8}
    ${C8}
  `}var v8=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,k8=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,C8=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Z5=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function vD(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function m8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return t[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return 2 * (resTexRC.x * ${t[1]} + resTexRC.y);
    }
  `}function g8(r,e){return e[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function f8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(r[2]/2),o=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function x8(r,e){let t=Fs(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec3(r, c, d);
    }
  `}function d8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],n=Math.ceil(r[r.length-1]/2),o=n*Math.ceil(r[r.length-2]/2),s=o,a="",i="b, r, c";for(let l=2;l<r.length-1;l++)s*=r[r.length-l-1],a=`
      int b${l} = index / ${s};
      index -= b${l} * ${s};
    `+a,i=`b${l}, `+i;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${i});
    }
  `}function y8(r,e){let t=Fs(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}function b8(r,e){let t=Fs(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function w8(r,e){let t=Fs(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function h8(r,e){let t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(y.arraysEqual(r,e))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function _8(r,e){return y.arraysEqual(r,e)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:r[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Ju(r){return`offset${r}`}function s8(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Lt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function J5(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${t}() {return ${e};}`;let[n,o]=r.shapeInfo.texShape;if(n===1&&o===1)return`
      float ${t}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let[s,a]=r.shapeInfo.texShape,i=Ju(e);return`
    float ${t}() {
      vec2 uv = uvFromFlat(${s}, ${a}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function i8(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,o=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)],s=Lt();return`
    vec4 ${t}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function Q5(r){let e=r.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${t}(int index) {
        ${xp(r)}
      }
    `;let n=r.shapeInfo.texShape,o=n[0],s=n[1];if(s===1&&o===1)return`
      float ${t}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Ju(e);return s===1?`
      float ${t}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${e}, uv);
      }
    `:o===1?`
      float ${t}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
    float ${t}(int index) {
      vec2 uv = uvFromFlat(${o}, ${s}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function a8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=o[0],a=o[1],i=Lt();if(o!=null&&y.arraysEqual(e,o))return`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);

        return ${i.texture2D}(${t}, uv);
      }
    `;let l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${i.texture2D}(${t}, uv);
    }
  `}function e8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape;if(o!=null&&y.arraysEqual(e,o)){let p=o[0],m=o[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${t}, uv);
    }
  `}let{newShape:s,keptDims:a}=y.squeezeShape(e),i=s;if(i.length<e.length){let p=yp(r,i),m=["row","col"];return`
      ${gp(p)}
      float ${n}(int row, int col) {
        return ${n}(${bp(m,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${xp(r)}
      }
    `;let l=o[0],u=o[1],c=Ju(t);return u===1?`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${t}, uv);
    }
  `:l===1?`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${t}, uv);
    }
  `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${c};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${t}, uv);
  }
`}function l8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=r.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(e[0]===1){let p=e.slice(1),m=[1,2],f=yp(r,p),d=["b","row","col"];return`
        ${_D(f)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${bp(d,m)});
        }
      `}let a=s[0],i=s[1],l=Math.ceil(e[2]/2),u=l*Math.ceil(e[1]/2),c=Lt();return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${a}, ${i}, ${u}, ${l}, b, row, col);
      return ${c.texture2D}(${t}, uv);
    }
  `}function t8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[1]*e[2],s=e[2],{newShape:a,keptDims:i}=y.squeezeShape(e),l=a;if(l.length<e.length){let d=yp(r,l),h=["row","col","depth"];return`
        ${gp(d)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${bp(h,i)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${s}, 1)));
        ${xp(r)}
      }
    `;let u=r.shapeInfo.texShape,c=u[0],p=u[1],m=r.shapeInfo.flatOffset;if(p===o&&m==null)return`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${s}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${c}.0);
          return sampleTexture(${t}, uv);
        }
      `;if(p===s&&m==null)return`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);
      return sampleTexture(${t}, uv);
    }
  `;let f=Ju(t);return`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${s} + depth + ${f};
        vec2 uv = uvFromFlat(${c}, ${p}, index);
        return sampleTexture(${t}, uv);
      }
  `}function u8(r){let e=r.shapeInfo.logicalShape,t=e.length,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=a[0],l=a[1],u=Math.ceil(e[t-1]/2),c=u*Math.ceil(e[t-2]/2),p="int b, int row, int col",m=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let d=2;d<t-1;d++)p=`int b${d}, `+p,c*=e[t-d-1],m=`b${d} * ${c} + `+m;let f=Lt();return`
    vec4 ${o}(${p}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${i});
      return ${f.texture2D}(${n}, uv);
    }
  `}function r8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[3],s=e[2]*o,a=e[1]*s,{newShape:i,keptDims:l}=y.squeezeShape(e);if(i.length<e.length){let d=yp(r,i),h=["row","col","depth","depth2"];return`
      ${gp(d)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${bp(h,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${s}, ${o}, 1)));
        ${xp(r)}
      }
    `;let u=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,p=c[0],m=c[1];if(m===a&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===o&&u==null)return`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;let f=Ju(t);return`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${s} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${p}, ${m}, index + ${f});
      return sampleTexture(${t}, uv);
    }
  `}function n8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,i=e[1]*a,{newShape:l,keptDims:u}=y.squeezeShape(e);if(l.length<e.length){let h=yp(r,l),g=["row","col","depth","depth2","depth3"];return`
      ${gp(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${bp(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${xp(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===i&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===o&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;let d=Ju(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function o8(r){let e=r.shapeInfo.logicalShape,t=r.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(e);if(o.length<e.length){let g=yp(r,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${gp(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${bp(x,s)});
      }
    `}let a=e[5],i=e[4]*a,l=e[3]*i,u=e[2]*l,c=e[1]*u;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${xp(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===c&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===a&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;let h=Ju(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function xp(r){let e=r.name,t=y.sizeFromShape(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function c8(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=bD(r.shapeInfo.logicalShape,e.logicalShape),l=ze(a),u=a-s,c,p=["x","y","z","w","u","v"];s===0?c="":a<2&&i.length>=1?c="coords = 0;":c=i.map(b=>`coords.${p[b+u]} = 0;`).join(`
`);let m="";a<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((b,w)=>`coords.${p[w+u]}`).join(", ");let f="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,x=y.sizeFromShape(e.logicalShape)===1;if(s===1&&!h&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!x)a===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(i.length){let b=s-2,w=s-1;i.indexOf(b)>-1&&i.indexOf(w)>-1?f="return vec4(outputValue.x);":i.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function p8(r,e){let t=r.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",s=e.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!r.shapeInfo.isUniform&&i===l&&r.shapeInfo.flatOffset==null&&y.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;let u=ze(l),c=bD(r.shapeInfo.logicalShape,e.logicalShape),p=l-i,m,f=["x","y","z","w","u","v"];i===0?m="":l<2&&c.length>=1?m="coords = 0;":m=c.map(h=>`coords.${f[h+p]} = 0;`).join(`
`);let d="";return l<2&&i>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function ze(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function yp(r,e){let t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function bp(r,e){return e.map(t=>r[t]).join(", ")}function kD(r,e,t,n){let o=e.userCode,s=t.map((f,d)=>{let h={logicalShape:f.shape,texShape:f.isUniform?null:f.texData.texShape,isUniform:f.isUniform,isPacked:f.isUniform?!1:f.texData.isPacked,flatOffset:null};return f.texData!=null&&f.texData.slice!=null&&f.texData.slice.flatOffset>0&&(h.flatOffset=f.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),a=s.map(f=>f.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},l=wD(s,i,o,e.packedInputs),u=r.createProgram(l),c=null,p=r.getUniformLocation(u,"NAN",!1);G().getNumber("WEBGL_VERSION")===1&&(c=r.getUniformLocation(u,"INFINITY",!1));let m={};for(let f=0;f<e.variableNames.length;f++){let d=e.variableNames[f],h=!1;m[d]=r.getUniformLocation(u,d,h),m[`offset${d}`]=r.getUniformLocation(u,`offset${d}`,h)}return{program:e,source:l,webGLProgram:u,uniformLocations:m,inShapeInfos:a,outShapeInfo:i,infLoc:c,nanLoc:p}}function CD(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,n)=>{let o=t.logicalShape,s=e[n],a=s.shape;if(!y.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&s.isUniform)return;let i=t.texShape,l=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function ID(r,e,t,n,o){CD(e.inShapeInfos,t),CD([e.outShapeInfo],[n]);let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s,a[0],a[1]):r.setOutputMatrixTexture(s,a[0],a[1]),r.setProgram(e.webGLProgram),G().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&r.gl.uniform1f(e.infLoc,Infinity),e.nanLoc!==null&&r.gl.uniform1f(e.nanLoc,NaN),t.forEach((i,l)=>{let u=e.program.variableNames[l],c=e.uniformLocations[u],p=e.uniformLocations[`offset${u}`];if(c!=null){if(i.isUniform){if(y.sizeFromShape(i.shape)<2)r.gl.uniform1f(c,i.uniformValues[0]);else{let m=i.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),r.gl.uniform1fv(c,m)}return}i.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,i.texData.slice.flatOffset),r.setInputMatrixTexture(i.texData.texture,c,l)}}),o!=null&&o(r,e.webGLProgram),r.executeProgram()}function SD(r,e,t){let n="";e.concat(t).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0,l=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${l}_${i}`});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o,s}var{addImpl:ND,bincountImpl:Ug,bincountReduceImpl:TD,ceilImpl:ED,concatImpl:AD,expImpl:DD,expm1Impl:$D,floorImpl:RD,gatherV2Impl:FD,greaterImpl:OD,lessImpl:PD,linSpaceImpl:MD,logImpl:LD,maxImpl:zD,maximumImpl:BD,minimumImpl:VD,multiplyImpl:WD,negImpl:jD,prodImpl:GD,rangeImpl:UD,rsqrtImpl:qD,simpleAbsImpl:qg,sliceImpl:HD,stridedSliceImpl:KD,subImpl:XD,tileImpl:YD,topKImpl:ZD,transposeImpl:wp,uniqueImpl:JD}=Ig;function Xv(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function qt(r,e){return e===1?[r]:Xv(r,e)}function QD(r,e){if(r===1)return"rc";let t="";for(let n=0;n<r;n++)t+=e[n],n<r-1&&(t+=",");return t}var Yv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;let t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let n=qt("rc",t),o=ze(t),s=I8(t,e,n),a=S8(t,e[e.length-1],e[e.length-2],n),i=N8(e,n);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${i}));
          }
        }
      `}}};function T8(r,e){let t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<r;a++)s=`${e[e.length-1-a]},`+s;t.push(s)}return t}function I8(r,e,t){if(r===1)return`rc > ${e[0]}`;let n="";for(let o=r-2;o<r;o++)n+=`${t[o]} >= ${e[o]}`,o<r-1&&(n+="||");return n}function S8(r,e,t,n){if(r===1)return"";let o=n.slice(-2);return`
    int r = ${o[0]};
    int c = ${o[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function N8(r,e){let t=r.length,n=T8(t,e);return t===1?`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${n[0]}),
          cEdge ? 0. : getA(${n[1]}),
          rEdge ? 0. : getA(${n[2]}),
          rEdge || cEdge ? 0. : getA(${n[3]})`}var If=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2==1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${E8(t)}
      ${hp(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${n}

        setOutput(result);
      }
    `}};function E8(r){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${Fs(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var Zv=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let o=t$(t,n),s=r$(e,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=e$(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let l=this.freeTextures[s].shift();return this.usedTextures[s].push(l),l}let i;return o===vr.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===vr.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===vr.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===vr.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===vr.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;let s=t$(n,o),a=r$(t,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=e$(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=G().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function A8(r,e){let t=r;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===r.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function e$(r,e,t,n,o){let s=D8(e,n),a;if(o){let[l,u]=ji(r[0],r[1]);a=l*u}else{let[l,u]=Zu(r[0],r[1]);a=l*u}let i=A8(t,s);return a*i}function D8(r,e){switch(r){case vr.PACKED_2X2_FLOAT32:return Wg(e);case vr.PACKED_2X2_FLOAT16:return jg(e);case vr.UNPACKED_FLOAT32:return zg(e);case vr.UNPACKED_FLOAT16:return Bg(e);case vr.PACKED_4X1_UNSIGNED_BYTE:return Vg(e);default:throw new Error(`Unknown physical texture type ${r}`)}}function $8(r){return G().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?vr.PACKED_2X2_FLOAT32:vr.UNPACKED_FLOAT32:r?vr.PACKED_2X2_FLOAT16:vr.UNPACKED_FLOAT16}function t$(r,e){if(r===Rr.UPLOAD)return vr.PACKED_2X2_FLOAT32;if(r===Rr.RENDER||r==null)return $8(e);if(r===Rr.DOWNLOAD||r===Rr.PIXELS)return vr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function r$(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}var sn=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},gr="if (isnan(x)) return x;",n$="return x;",Jv="return abs(x);";var o$="return (x >= 0.0) ? x : (exp(x) - 1.0);",s$=gr+`
  return (x < 0.0) ? 0.0 : x;
`,i$=gr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Sf="return x;";var a$="return x;",l$=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,u$=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,c$=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Os=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Qv=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;let t=e.length,n=qt("rc",t),o=ze(t),s=QD(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var R8=Dr.whereImpl,F8=1e-7,O8=1e-4,Hg={};function P8(r){return r in Hg||(Hg[r]={}),Hg[r]}var M8=128,L8=600;function z8(){return G().global.screen==null?1024:G().global.screen.height*G().global.screen.width*window.devicePixelRatio*L8/1024/1024}var Kg=class extends Us{constructor(e){super();if(this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!G().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){let t=Vn(G().getNumber("WEBGL_VERSION"));this.binaryCache=P8(G().getNumber("WEBGL_VERSION")),this.gpgpu=new Gg(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new Zv(this.gpgpu),this.numMBBeforeWarning=z8(),this.texData=new el(this,Ss())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((G().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||G().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:Rr.UPLOAD,refCount:1,complexParentRefCount:0}),o}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}decComplexRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,n,o){if(G().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:Rr.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){let t=e.dataId;if(this.texData.has(t)){let n=this.texData.get(t);n.refCount--,n.refCount<1&&this.disposeData(t)}}readSync(e){let t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:s,slice:a,shape:i,isPacked:l}=t;if(a!=null){let m;l?m=new Os(i,Sf):m=new sn(i,Sf);let f=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:o}],o),d=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),d}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;let u=this.activeTimers!=null,c;u&&(c=y.now());let p;if(o==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);p=N.mergeRealAndImagArrays(m,f)}else p=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=y.now()-c),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){let d=this.pendingRead.get(e);return new Promise(h=>d.push(h))}let t=this.texData.get(e),{values:n,shape:o,slice:s,dtype:a,complexTensorInfos:i,isPacked:l}=t;if(s!=null){let d;l?d=new Os(o,Sf):d=new sn(o,Sf);let h=this.runWebGLProgram(d,[{dataId:e,shape:o,dtype:a}],a),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(e);if(!G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&G().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(a!=="complex64"&&G().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);let d=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(d.texture,...gl(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(a==="complex64"){let d=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),h=d[0],g=d[1];p=N.mergeRealAndImagArrays(h,g)}else if(u==null)p=this.getValuesFromTexture(e);else{let d=y.sizeFromShape(o);p=this.gpgpu.downloadFloat32MatrixFromBuffer(u,d)}c!=null&&this.disposeIntermediateTensorInfo(c);let m=this.convertAndCacheOnCPU(e,p),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(d=>d(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),m}bufferSync(e){let t=this.readSync(e.dataId),n=t;if(e.dtype==="string")try{n=t.map(o=>y.decodeString(o))}catch(o){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ie(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!iv(n))throw G().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:o}=this.texData.get(e),s=y.sizeFromShape(t);if(G().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(e),f=this.texData.get(m.dataId),d=this.gpgpu.downloadMatrixFromPackedTexture(f.texture,...gl(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),d}let a=G().getBool("WEBGL_PACK")&&o===!0,i=a?kf(t):t,l=a?new Av(i):new Ev(i),u=this.runWebGLProgram(l,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),p}async time(e){let t=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();let s=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(s);i.kernelMs=y.sum(l),i.getExtraProfileInfo=()=>l.map((u,c)=>({name:a[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if(G().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e)){this.pendingDisposal.add(e),this.pendingDeletes++;return}if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0){this.texData.get(e).refCount--;return}this.releaseGPUData(e);let{complexTensorInfos:t}=this.texData.get(e);t!=null&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){let{texture:t,dtype:n,texShape:o,usage:s,isPacked:a,slice:i}=this.texData.get(e),l=i&&i.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,s,a)));let c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return G().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Ss().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=M8){let n=this.getCPUBackend();return!G().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&n==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),n!=null&&e.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return R8(e.shape,t)}packedUnaryOp(e,t,n){let o=new Os(e.shape,t);return this.compileAndRun(o,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let n=qg(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,n)}if(G().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Jv,e.dtype);let t=new sn(e.shape,Jv);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(a=>y.encodeString(a));o=this.write(s,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:o}=this.makeTensorInfo(e,t,n);return Ss().makeTensorFromDataId(o,e,t,this)}unpackTensor(e){let t=new Qv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Yv(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Ba(e.shape),...Va(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Ba(t),...Va(t)],a=new If(s,n),i=!0,l=this.runWebGLProgram(a,[o],e.dtype,null,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e){let t=this.texData.get(e),{isPacked:n,shape:o,dtype:s}=t,a=kf(o),i;n?i=new Tv(a):i=new Nv(a);let l=!0,u=this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,l);return{dtype:s,shape:o,dataId:u.dataId}}runWebGLProgram(e,t,n,o,s=!1){let a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===hl.DENSE){let h=gl(e.outputShape);i.texShape=h.map(g=>g*2)}if(e.outTexUsage!=null&&(i.usage=e.outTexUsage),y.sizeFromShape(a.shape)===0)return i.values=y.getTypedArrayFromDType(a.dtype,0),a;let l=[],u=t.map(h=>{if(h.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(h.dataId);if(g.texture==null){if(!e.packedInputs&&y.sizeFromShape(h.shape)<=G().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:h.shape,texData:null,isUniform:!0,uniformValues:g.values};e.packedInputs&&(g.isPacked=!0,g.shape=h.shape)}else if(!!g.isPacked!=!!e.packedInputs)h=g.isPacked?this.unpackTensor(h):this.packTensor(h),l.push(h),g=this.texData.get(h.dataId);else if(g.isPacked&&!xl(g.shape,h.shape)){let x=h,b=h.shape;h.shape=g.shape,h=this.packedReshape(h,b),l.push(h),g=this.texData.get(h.dataId),x.shape=b}return this.uploadToGPU(h.dataId),{shape:h.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);let c={shape:a.shape,texData:i,isUniform:!1},p=SD(e,u,c),m=this.getAndSaveBinary(p,()=>kD(this.gpgpu,e,u,c)),f=this.activeTimers!=null,d;if(f&&(d=this.startTimer()),ID(this.gpgpu,m,u,c,o),l.forEach(h=>this.disposeIntermediateTensorInfo(h)),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)})),!G().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&s===!1){let h=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),h}return a}compileAndRun(e,t,n,o,s=!1){n=n||t[0].dtype;let a=this.runWebGLProgram(e,t,n,o,s);return Ss().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(G().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=V(()=>{if(!G().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=G().getBool("DEBUG");G().set("DEBUG",!1);let t=this.abs(ue(1e-8)).dataSync()[0];if(G().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?F8:O8}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:o,values:s,texture:a,usage:i,isPacked:l}=t;if(a!=null)return;let u=this.activeTimers!=null,c;u&&(c=y.now());let p=t.texShape;if(p==null&&(p=bv(n,l),t.texShape=p),s!=null){let m=kf(n),f,d=p[1],h=p[0],g=s instanceof Uint8Array;l?([d,h]=ji(p[0],p[1]),f=new $v(m,[h,d],g)):f=new Dv(m,[h,d],g);let x=this.makeTensorInfo([h,d],o);g?this.texData.get(x.dataId).usage=Rr.PIXELS:this.texData.get(x.dataId).usage=Rr.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),d,h,s);let b=!0,w=this.runWebGLProgram(f,[x],o,null,b),_=this.texData.get(w.dataId);t.texture=_.texture,t.texShape=_.texShape,t.isPacked=_.isPacked,t.usage=_.usage,this.disposeIntermediateTensorInfo(x),this.texData.delete(w.dataId),t.values=null,u&&(this.uploadWaitMs+=y.now()-c)}else{let m=this.acquireTexture(p,i,o,l);t.texture=m}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:o}=n;return this.releaseGPUData(e),t!=null&&(n.values=B8(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*y.bytesPerElement(t)}};function B8(r,e){if(e==="float32"||e==="complex64")return r;if(e==="int32"||e==="bool"){let t=e==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<t.length;++n)t[n]=Math.round(r[n]);return t}else throw new Error(`Unknown dtype ${e}`)}var ek="2.8.5";function tk(){G().set("WEBGL_FORCE_F16_TEXTURES",!0)}Vc.isBrowser()&&wu("webgl",()=>new Kg,2);var V8={forceHalfFloat:tk};var Xg=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Xo=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var yl=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;var Ps=class{constructor(e,t,n,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let s=this.outputShape.length,a="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${ze(s)} coords = getOutputCoords();
        `,s===1)a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=qt("coords",s);a+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Ht(r){let{inputs:e,backend:t}=r,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var p$={kernelName:ms,backendName:"webgl",kernelFunc:Ht};function an(r){let{inputs:e,backend:t}=r,{real:n,imag:o}=e,s=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(s.dataId),i=Ht({inputs:{x:n},backend:t}),l=t.texData.get(i.dataId);l.complexParentRefCount++;let u=Ht({inputs:{x:o},backend:t}),c=t.texData.get(u.dataId);return c.complexParentRefCount++,a.complexTensorInfos={real:i,imag:u},s}var m$={kernelName:Kl,backendName:"webgl",kernelFunc:an};var rk="return (a < 0.) ? b * a : a;",nk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function W8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{alpha:s}=n,a=t.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),i=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ps(nk,o.shape,a.shape):new Xo(rk,o.shape,a.shape),l=t.runWebGLProgram(i,[o,a],o.dtype);return t.disposeIntermediateTensorInfo(a),l}var f$={kernelName:uo,backendName:"webgl",kernelFunc:W8};var ok="return (a < 0.) ? b * a : a;",sk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function j8(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ps(sk,n.shape,o.shape):new Xo(ok,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)}var d$={kernelName:vo,backendName:"webgl",kernelFunc:j8};var Yg="if (isnan(x)) return x;",h$=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,g$=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ce({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,l=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let p=i.texData.get(a.dataId),m=t(p.values,l);return i.makeTensorInfo(a.shape,l,m)}let u=G().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null,c;return u?c=new Os(a.shape,e):c=new sn(a.shape,r),i.runWebGLProgram(c,[a],l)}}function at({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:l,b:u}=a,c=i;if(n&&l.dtype==="complex64"){let d=c.texData.get(l.dataId),h=c.texData.get(u.dataId),[g,x]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(w=>{let[_,k]=w,E={dataId:_.dataId,dtype:_.dtype,shape:l.shape},T={dataId:k.dataId,dtype:k.dtype,shape:u.shape},F=new Xo(r,l.shape,u.shape);return c.runWebGLProgram(F,[E,T],dr(_.dtype,k.dtype))}),b=an({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),b}let p=s||dr(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&o!=null){let d=c.texData.get(l.dataId),h=c.texData.get(u.dataId),[g,x]=o(l.shape,u.shape,d.values,h.values,p),b=c.makeTensorInfo(x,p),w=c.texData.get(b.dataId);return w.values=g,b}let m=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null,f;return m?f=new Ps(e,l.shape,u.shape,t):f=new Xo(r,l.shape,u.shape),c.runWebGLProgram(f,[l,u],p)}}function bl(r,e=!1){if(r==="linear")return e?a$:n$;if(r==="relu")return e?u$:s$;if(r==="elu")return e?l$:o$;if(r==="relu6")return e?c$:i$;if(r==="prelu")return e?sk:ok;if(r==="leakyrelu")return e?nk:rk;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Nf=class{constructor(e,t,n,o=!1,s=!1,a=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;let c=o?e[1]:e[2],p=Math.ceil(c/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",x="";i&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,x="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",_="rc.x";e[0]<t[0]?w=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(_=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}

      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${p}; i++) {
          int batchA = ${w};
          int batchB = ${_};
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}};var ik={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Zg=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var x$="return a * b;";function ak(r){let{inputs:e,backend:t}=r,{a:n,b:o}=e,s=N.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=t.texData.get(n.dataId),l=t.texData.get(o.dataId),u=new Zg(ik.REAL,n.shape,o.shape),c=new Zg(ik.IMAG,n.shape,o.shape),p=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=an({inputs:{real:m,imag:f},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}if(t.shouldExecuteOnCPU([n,o])){let i=t.texData.get(n.dataId),l=t.texData.get(o.dataId),[u,c]=WD(n.shape,o.shape,i.values,l.values,s),p=t.makeTensorInfo(c,s),m=t.texData.get(p.dataId);return m.values=u,p}let a;return G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Ps(x$,n.shape,o.shape):a=new Xo(x$,n.shape,o.shape),t.runWebGLProgram(a,[n,o],s)}var y$={kernelName:yo,backendName:"webgl",kernelFunc:ak};function b$(r,e,t){let n=[Ba(r.shape),...Va(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[Ba(e),...Va(e)],a=new If(s,n),i=!0,l=t.runWebGLProgram(a,[o],r.dtype,null,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}function me(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{shape:s}=n,a=t,i=y.sizeFromShape(o.shape),l=y.inferFromImplicitShape(s,i),u=y.sizeFromShape(l);y.assert(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let c=a.texData.get(o.dataId);return c.isPacked&&!xl(o.shape,l)&&!(c.texture!==null&&xl(c.shape,l))?b$(o,l,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}var w$={kernelName:gs,backendName:"webgl",kernelFunc:me};var Jg=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i=Math.floor(n/4)*4,l=n%4,u="sumValue += dot(values, ones);";if(t!=null){let p=1/t;u=`sumValue += dot(values * ${y.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var lk=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=e;this.outputShape=[o,a];let i="0.0",l="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",l="min"):t==="max"&&(i="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let c=Math.floor(n/4)*4,p=n%4,m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
      }
    `,f="vec4";t==="all"?(i="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(i="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function G8(r){let e=[];for(;e.length===0||e[e.length-1].outSize!==1;){let t=e.length?e[e.length-1].outSize:r[1],n=N.computeOptimalWindowSize(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function Sn(r,e,t,n){let o=G8(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:l,outSize:u}=o[a],c,p;t==="mean"?c=a===0?new Jg({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u},i):new Jg({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u}):c=new lk({windowSize:l,inSize:i,batchSize:r.shape[0],outSize:u},t),p=s,s=n.runWebGLProgram(c,[s],e),p.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(p)}return s}var uk=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let o=ze(this.rank),s=U8(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function U8(r){let e=r.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<r.length;o++)n[r[o]]=t[o];return n.join()}var ck=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let c=0;c<n.length;c++)n[c]=e[t[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=ze(this.rank),s=Xv("rc",this.rank),a=new Array(this.rank);for(let c=0;c<t.length;c++)a[t[c]]=s[c];let i=`vec2(${a.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function wl(r,e,t){let n=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ck(r.shape,e):new uk(r.shape,e);return t.runWebGLProgram(n,[r],r.dtype)}function _$(r,e,t,n){let o=e,s=r.shape.length,a=y.parseAxisParam(o,r.shape),i=a,l=N.getAxesPermutation(i,s),u=l!=null,c=r;u&&(c=wl(r,l,n),i=N.getInnerMostAxes(i.length,s)),N.assertAxesAreInnerMostDims("sum",i,s);let[p,m]=N.computeOutAndReduceShapes(c.shape,i),f=p;t&&(f=N.expandShapeToKeepDim(p,a));let d=y.sizeFromShape(m),g=y.sizeFromShape(r.shape)/d,x=me({inputs:{x:c},attrs:{shape:[g,d]},backend:n}),b=xu(r.dtype),w=Sn(x,b,"sum",n),_=me({inputs:{x:w},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),u&&n.disposeIntermediateTensorInfo(c),_}function Tf(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n;return _$(o,s,a,t)}var v$={kernelName:$o,backendName:"webgl",kernelFunc:Tf};function Vt(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{perm:s}=n,a=t,i=o.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=o.shape[s[c]];let u;if(a.shouldExecuteOnCPU([o])){let p=a.texData.get(o.dataId).values,m=wp(p,o.shape,o.dtype,s,l);u=a.makeTensorInfo(l,o.dtype);let f=a.texData.get(u.dataId);f.values=m}else u=wl(o,s,a);return u}var k$={kernelName:Mo,backendName:"webgl",kernelFunc:Vt};var pk=1e3;function Qu({a:r,b:e,transposeA:t,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){let u=r.shape.length,c=e.shape.length,p=t?r.shape[u-2]:r.shape[u-1],m=n?e.shape[c-1]:e.shape[c-2],f=t?r.shape[u-1]:r.shape[u-2],d=n?e.shape[c-2]:e.shape[c-1],h=r.shape.slice(0,-2),g=e.shape.slice(0,-2),x=y.sizeFromShape(h),b=y.sizeFromShape(g),w=x===b||x===1||b===1;y.assert(u>=2&&c>=2&&w,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${g}).`);let k=(x>b?r.shape.slice(0,-2):e.shape.slice(0,-2)).concat([f,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);let E=t?[x,p,f]:[x,f,p],T=n?[b,d,m]:[b,m,d],F=me({inputs:{x:r},backend:o,attrs:{shape:E}}),O=me({inputs:{x:e},backend:o,attrs:{shape:T}}),M=[F,O],j=Math.max(x,b),W=t?F.shape[1]:F.shape[2],U=s!=null,Y=a!=null,K=l==="leakyrelu",Z=l!=null?bl(l,!0):null,re=U||Y||K||Z!=null,X;if((f===1||d===1)&&W>pk&&re===!1){let ae=F,ie=O;t&&(ae=Vt({inputs:{x:F},backend:o,attrs:{perm:[0,2,1]}}),M.push(ae)),n&&(ie=Vt({inputs:{x:O},backend:o,attrs:{perm:[0,2,1]}}),M.push(ie));let pe=d!==1,le=d===1,ge=ae;pe&&(ge=me({inputs:{x:ae},backend:o,attrs:{shape:[j,W,1]}}),M.push(ge));let ye=d===1?2:1,be=ie;le&&(be=me({inputs:{x:ie},backend:o,attrs:{shape:[j,1,W]}}),M.push(be));let ke=ak({inputs:{a:ge,b:be},backend:o});X=Tf({inputs:{x:ke},backend:o,attrs:{axis:ye,keepDims:!0}}),M.push(ke)}else{let ae=dr(r.dtype,e.dtype),ie=new Nf(E,T,[j,f,d],t,n,U,Z,Y,K),pe=[F,O];if(s!=null&&pe.push(s),Y&&pe.push(a),K){let le=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));pe.push(le),M.push(le)}X=o.runWebGLProgram(ie,pe,ae)}let oe=me({inputs:{x:X},backend:o,attrs:{shape:k}});M.push(X);for(let ae of M)o.disposeIntermediateTensorInfo(ae);return oe}function q8(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n;return Qu({a:o,b:s,transposeA:l,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}var C$={kernelName:vs,backendName:"webgl",kernelFunc:q8};var I$="return abs(x);";function H8(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=t.texData.get(n.dataId),a=qg(s.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Os(n.shape,I$):o=new sn(n.shape,I$),t.runWebGLProgram(o,[n],n.dtype)}var S$={kernelName:ls,backendName:"webgl",kernelFunc:H8};var K8=gr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,X8=Ce({opSnippet:K8}),N$={kernelName:Ks,backendName:"webgl",kernelFunc:X8};var Y8=gr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Z8=Ce({opSnippet:Y8}),T$={kernelName:Xs,backendName:"webgl",kernelFunc:Z8};var E$="return a + b;",J8=at({opSnippet:E$,packedOpSnippet:E$,supportsComplex:!0,cpuKernelImpl:ND}),A$={kernelName:wn,backendName:"webgl",kernelFunc:J8};var mk=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var fk=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function Qg(r){let{inputs:e,backend:t}=r,n=e;if(n.length===1)return Ht({inputs:{x:n[0]},backend:t});if(n.length>G().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(n.length/2),u=Qg({inputs:n.slice(0,l),backend:t}),c=Qg({inputs:n.slice(l),backend:t});return Qg({inputs:[u,c],backend:t})}let o=n.map(l=>l.dtype).reduce((l,u)=>dr(l,u)),s=n.map(l=>l.shape),i=G().getBool("WEBGL_PACK")?new fk(n[0].shape,s):new mk(n[0].shape,s);return t.runWebGLProgram(i,n,o)}var D$={kernelName:Kn,backendName:"webgl",kernelFunc:Qg};function Q8(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=o;c!=null&&(p=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,i)),N.assertAxesAreInnerMostDims("all",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(f),h=me({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=Sn(h,h.dtype,"all",t),x;if(a){let b=N.expandShapeToKeepDim(m,l);x=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=me({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var $$={kernelName:jl,backendName:"webgl",kernelFunc:Q8};function eX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=o;c!=null&&(p=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,i)),N.assertAxesAreInnerMostDims("any",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(f),h=me({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=Sn(h,h.dtype,"any",t),x;if(a){let b=N.expandShapeToKeepDim(m,l);x=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=me({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var R$={kernelName:Gl,backendName:"webgl",kernelFunc:eX};var dk=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=t==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var hk=class{constructor(e,t,n,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,y.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,l=i.length,u=ze(l),c=qt("coords",l),p,m;if(a===1){m=l+1;let F=ze(m);p=`
        ${F} sourceLocR = ${F}(${c.join()}, 0);
        ++${c[l-1]};
        ${F} sourceLocG = ${F}(${c.join()}, 0);
        ++${c[l-2]};
        ${F} sourceLocA = ${F}(${c.join()}, 0);
        --${c[l-1]};
        ${F} sourceLocB = ${F}(${c.join()}, 0);
        --${c[l-2]};`}else m=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map(F=>"int "+F),g=qt("sourceLocR",m-1).concat("inIdx.r"),x=qt("sourceLocG",m-1).concat("inIdx.g"),b=qt("sourceLocB",m-1).concat("inIdx.b"),w=qt("sourceLocA",m-1).concat("inIdx.a"),_=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,E=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,T=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${_}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function F$(r,e,t,n=null){let o=e.shape[0],s=e.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=N.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},l=new dk(i,t,n==null),u=[e];n!=null&&u.push(n);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=F$(r,e,t,c);return r.disposeIntermediateTensorInfo(c),p}function O$(r,e,t,n=null){let o=n!=null?n.shape:e.shape,s=o[o.length-1],a=N.computeOptimalWindowSize(s),i=new hk(o,a,t,n==null),l=n==null?[e]:[e,n],u=r.runWebGLProgram(i,l,"int32");if(u.shape.length===e.shape.length){let c=O$(r,e,t,u);return r.disposeIntermediateTensorInfo(u),c}return u}function ex(r,e,t,n){let o=[t];if(N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!G().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){let s=[],[a,i]=N.computeOutAndReduceShapes(e.shape,o),l=y.sizeFromShape(i),u=me({inputs:{x:e},backend:r,attrs:{shape:[-1,l]}});s.push(u);let c=F$(r,u,n);s.push(c);let p=me({inputs:{x:c},backend:r,attrs:{shape:a}});return s.forEach(m=>r.disposeIntermediateTensorInfo(m)),p}return O$(r,e,n)}function tX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=N.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=Vt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[a[0]],l.shape.length);let c=ex(t,l,a[0],"max");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var P$={kernelName:Xn,backendName:"webgl",kernelFunc:tX};function rX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=N.getAxesPermutation(a,o.shape.length),l=o,u=[];i!=null&&(l=Vt({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(l),a=N.getInnerMostAxes(a.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[a[0]],l.shape.length);let c=ex(t,l,a[0],"min");return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}var M$={kernelName:na,backendName:"webgl",kernelFunc:rX};var nX=gr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,oX=Ce({opSnippet:nX}),L$={kernelName:Ys,backendName:"webgl",kernelFunc:oX};var sX=gr+"return log(x + sqrt(x * x + 1.0));",iX=Ce({opSnippet:sX}),z$={kernelName:Zs,backendName:"webgl",kernelFunc:iX};var aX=gr+`
  return atan(x);
`,lX=Ce({opSnippet:aX}),B$={kernelName:Js,backendName:"webgl",kernelFunc:lX};var uX=h$+`
  return atan(a, b);
`,cX=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+g$+`
  return result;
`,pX=at({opSnippet:uX,packedOpSnippet:cX}),V$={kernelName:ei,backendName:"webgl",kernelFunc:pX};var mX=gr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,fX=Ce({opSnippet:mX}),W$={kernelName:Qs,backendName:"webgl",kernelFunc:fX};var Gi=class{constructor(e,t,n,o=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;let h=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(h||(b="-1.0 / 1e-20"),n){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${l});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",_=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / count");let k=Math.floor(a/4)*4,E=a%4,T=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${k};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${_});
      }
    `}},ec=class{constructor(e,t,n,o=!1,s=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,l=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,p=e.dilationHeight,m=e.dilationWidth,f=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let w=t==="avg",_="0.0";if(w||(_="-1.0 / 1e-20"),n){let M=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${M} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",E=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(E="avgValue / count");let T=Math.floor(a/4)*4,F=a%4,O=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${_};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${_});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${O}
            }

            int xC = xCCorner + ${T};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${O}
            }
          }
          setOutput(${E});
        }
      }
    `}};function dX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Rs(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;y.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))return Ht({inputs:{x:o},backend:t});let p=new Gi(c,"avg",!1);return t.runWebGLProgram(p,[o],"float32")}var j$={kernelName:Yn,backendName:"webgl",kernelFunc:dX};function hX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=n,c=[1,1,1],p=N.computePool3DInfo(o.shape,s,a,c,i,l,u),m=new ec(p,"avg",!1);return t.runWebGLProgram(m,[o],"float32")}var G$={kernelName:oa,backendName:"webgl",kernelFunc:hX};var gk=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=l-1-e.padInfo.top,p=u-1-e.padInfo.left,m=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},xk=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,f=e.effectiveFilterWidth,d=p-1-e.padInfo.front,h=m-1-e.padInfo.top,g=f-1-e.padInfo.left,x=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function gX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=n,p=[1,1,1],m=N.computePool3DInfo(a.shape,i,l,p,u,c),f=new xk(m);return t.runWebGLProgram(f,[o],a.dtype)}var U$={kernelName:ql,backendName:"webgl",kernelFunc:gX};function xX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s;Rs([o,s],"avgPoolGrad");let{filterSize:i,strides:l,pad:u}=n,c=N.computePool2DInfo(a.shape,i,l,1,u),p=new gk(c);return t.runWebGLProgram(p,[o],a.dtype)}var q$={kernelName:Ul,backendName:"webgl",kernelFunc:xX};function yX(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;return Qu({a:o,b:s,transposeA:a,transposeB:i,backend:t})}var H$={kernelName:Zn,backendName:"webgl",kernelFunc:yX};var yk=class{constructor(e,t,n,o,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="0.0";o!=null&&(N.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var bk=class{constructor(e,t,n,o,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";o!=null&&(N.assertAndGetBroadcastShape(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(N.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var bX=({inputs:r,backend:e,attrs:t})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);let u=[n,o,s],c=null;a!=null&&(c=a.shape,u.push(a));let p=null;i!=null&&(p=i.shape,u.push(i));let m=G().getBool("WEBGL_PACK_NORMALIZATION")?new bk(n.shape,o.shape,s.shape,c,p,l):new yk(n.shape,o.shape,s.shape,c,p,l);return e.runWebGLProgram(m,u,u[0].dtype)},K$={kernelName:ao,backendName:"webgl",kernelFunc:bX};var wk=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ze(this.rank),n=`uniform int start[${this.rank}];`,o=wX(this.rank),s,a=e.map((i,l)=>`sourceLoc.${_k[l]} = start[${l}] + coords.${_k[l]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      ${n}
      void main() {
        ${s}
        setOutput(getSource(${o}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}},_k=["x","y","z","w","u","v"];function wX(r){if(r===1)return"sourceLoc";if(r<=6)return _k.slice(0,r).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var vk=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;let t=ze(this.rank),n=qt("coords",this.rank),o=qt("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,p)=>`start[${p}]`).join()});`:e.map((c,p)=>`${o[p]} = ${n[p]} + start[${p}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${l}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}};function _X(r,e,t,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(t,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.complexParentRefCount=0,a.refCount=1,a.shape=t,a.dtype=r.dtype;let i=ir.computeFlatOffset(e,y.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let l=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,l+1),s}function Wa(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,size:a}=n,[i,l]=ir.parseSliceParams(o,s,a);if(ir.assertParamsValid(o,i,l),y.sizeFromShape(l)===0)return t.makeTensorInfo(l,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){let p=t.texData.get(o.dataId),m=HD(p.values,i,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,m)}let{isPacked:u}=t.texData.get(o.dataId),c=ir.isSliceContinous(o.shape,i,l);if(u||!c){let p=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vk(l):new wk(l),m=p.getCustomSetupFunc(i);return t.runWebGLProgram(p,[o],o.dtype,m)}return t.uploadToGPU(o.dataId),_X(o,i,l,t)}var X$={kernelName:ys,backendName:"webgl",kernelFunc:Wa};var vX=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,w)=>b*w),l=N.getReshaped(o.shape,s,i),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(o.shape,s,i),p=N.getSliceBeginCoords(a,s.length),m=N.getSliceSize(c,a,s.length),f=[],d=me({inputs:{x:o},backend:t,attrs:{shape:l}}),h=Vt({inputs:{x:d},backend:t,attrs:{perm:u}}),g=me({inputs:{x:h},backend:t,attrs:{shape:c}}),x=Wa({inputs:{x:g},backend:t,attrs:{begin:p,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),x},Y$={kernelName:sa,backendName:"webgl",kernelFunc:vX};function kX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=t.readSync(o.dataId),l=t.readSync(s.dataId),u=Ug(i,l,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,u)}var Z$={kernelName:Hl,backendName:"webgl",kernelFunc:kX};var CX="return float(a != b);",kk=at({opSnippet:CX,dtype:"bool"}),J$={kernelName:wi,backendName:"webgl",kernelFunc:kk};function ja(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return Ht({inputs:{x:o.complexTensorInfos.real},backend:t})}var Q$={kernelName:mu,backendName:"webgl",kernelFunc:ja};var IX="return float(int(x));";function eR(r,e){let t=new sn(r.shape,IX),n=e.runWebGLProgram(t,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Ck(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Ht({inputs:{x:o},backend:t});let a=mt(o.shape),i=Ck({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=an({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),l}if(o.dtype==="complex64"){let a=ja({inputs:{input:o},backend:t}),i=Ck({inputs:{x:a},backend:t,attrs:{dtype:s}});return t.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=Ht({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(s==="int32")return eR(o,t);if(s==="bool"){let a=t.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),l=kk({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var tR={kernelName:Rn,backendName:"webgl",kernelFunc:Ck};var rR="return ceil(x);",SX=Ce({opSnippet:rR,packedOpSnippet:rR,cpuKernelImpl:ED}),nR={kernelName:ti,backendName:"webgl",kernelFunc:SX};var Ik=class{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(n,o)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(o,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(o,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};var Sk=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(n,o)=>{this.minLoc==null&&(this.minLoc=n.getUniformLocationNoThrow(o,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(o,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}};function NX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i;G().getBool("WEBGL_PACK_CLIP")?i=new Sk(o.shape):i=new Ik(o.shape);let l=i.getCustomSetupFunc(s,a);return t.runWebGLProgram(i,[o],o.dtype,l)}var oR={kernelName:Fn,backendName:"webgl",kernelFunc:NX};var Nk=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function sR(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}function TX(r){let{inputs:e,backend:t}=r,{x:n}=e,o=t.texData.get(n.dataId),s=new Nk(n.shape),a=[sR(n,o.complexTensorInfos.real),sR(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(s,a,a[0].dtype)}var iR={kernelName:ia,backendName:"webgl",kernelFunc:TX};var Tk=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=t.length,s=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var Ek=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,o=n.length,s=ze(o),a=qt("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((h,g)=>`T${g}`);let l=new Array(e.length-1);l[0]=e[0][t];for(let h=1;h<l.length;h++)l[h]=l[h-1]+e[h][t];let u=i[t],c=i.slice(-2),p=i.join(),m=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let h=1;h<l.length;h++){let g=l[h-1];m+=`
        if (${u} < ${l[h]}  && ${u} >= ${l[h-1]}) {
          return getChannel(
            getT${h}(${tx(i,u,g)}),
            vec2(${tx(c,u,g)}));
        }`}let f=l.length,d=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${tx(i,u,d)}),
          vec2(${tx(c,u,d)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function tx(r,e,t){let n=r.indexOf(e);return r.map((s,a)=>a===n?`${s} - ${t}`:s).join()}function tc(r){let{inputs:e,backend:t}=r,{input:n}=e,o=t.texData.get(n.dataId);return Ht({inputs:{x:o.complexTensorInfos.imag},backend:t})}var aR={kernelName:su,backendName:"webgl",kernelFunc:tc};function rc(r,e,t){let n=r[0].dtype;if(n==="complex64"){let u=r.map(d=>ja({inputs:{input:d},backend:t})),c=r.map(d=>tc({inputs:{input:d},backend:t})),p=rc(u,e,t),m=rc(c,e,t),f=an({inputs:{real:p,imag:m},backend:t});return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),c.forEach(d=>t.disposeIntermediateTensorInfo(d)),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),f}if(n==="string"){let{tensors2D:u,outShape:c}=lR(r,e,t),p=u.map(g=>({vals:t.readSync(g.dataId),shape:g.shape})),m=u[0].shape[0]===1,f=AD(p,c,n,m),d=N.computeOutShape(r.map(g=>g.shape),e),h=t.makeTensorInfo(d,n,f);return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}if(r.length>G().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(r.length/2),c=rc(r.slice(0,u),e,t),p=rc(r.slice(u),e,t),m=rc([c,p],e,t);return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),m}if(G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){let u=new Ek(r.map(c=>c.shape),e);return t.runWebGLProgram(u,r,n)}let{tensors2D:o,outShape:s}=lR(r,e,t),a=new Tk(o.map(u=>u.shape)),i=t.runWebGLProgram(a,o,n);o.forEach(u=>t.disposeIntermediateTensorInfo(u));let l=me({inputs:{x:i},attrs:{shape:s},backend:t});return t.disposeIntermediateTensorInfo(i),l}function lR(r,e,t){let n=N.computeOutShape(r.map(s=>s.shape),e);return{tensors2D:r.map(s=>me({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(e))]},backend:t})),outShape:n}}function Ak(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,e[0].shape)[0],a=N.computeOutShape(e.map(u=>u.shape),s);if(y.sizeFromShape(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);let i=e.filter(u=>y.sizeFromShape(u.shape)>0);if(i.length===1)return Ht({inputs:{x:i[0]},backend:t});let l=i.map(u=>u.shape);return N.assertParamsConsistent(l,s),rc(i,s,t)}var uR={kernelName:us,backendName:"webgl",kernelFunc:Ak};var Ef=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,p=e.dilationWidth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1,_="",k="";n&&(o?_=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?_=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:_=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let E=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${_}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${k}
        setOutput(result);
      }
    `}},Dk=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,p=e.filterDepth,m=e.filterHeight,f=e.filterWidth,d=Math.floor(e.inChannels/4)*4,h=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var $k=class{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let{filterWidth:o,inChannels:s,strideWidth:a,strideHeight:i,padInfo:l,outWidth:u,dilationWidth:c,dilationHeight:p,dataFormat:m}=n,{left:f,top:d}=l,h=s*o,g=Lt(),x=m==="channelsLast",b=x?0:1,w=x?1:2,_="";for(let k=0;k<=1;k++)for(let E=0;E<=1;E++)_+=`
          blockIndex = rc.y + ${E};
          pos = rc.x + ${k};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${u})) * ${i} - ${d};
            d0 = offsetY + ${p} * (pos / ${h});

            if(d0 < ${t[b]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${f}.);
              d1 = offsetX + ${c} * (int(mod(float(pos), ${h}.) / ${s}.));

              if(d1 < ${t[w]} && d1 >= 0) {

                ch = int(mod(float(pos), ${s}.));

                if (${x}) {
                  innerDims = vec2(d1, ch);
                  result[${k*2+E}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${k*2+E}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${_}

        ${g.output} = result;
      }
    `}};function rx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let l=r.shape,u=n.texData.get(r.dataId),c=t.inChannels,p=l[0]*l[1]*l[2],m=t.outChannels,f=t.dataFormat==="channelsLast",d=!1,h=!1,g,x=[],b=(p===1||m===1)&&c>pk,w=l[2]%2!=0&&!!u.isPacked;if(b||!G().getBool("WEBGL_LAZILY_UNPACK")||!G().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!w){let _=f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],k=me({inputs:{x:r},backend:n,attrs:{shape:[1,_,t.inChannels]}}),E=me({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),T=Qu({a:k,b:E,transposeA:d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=me({inputs:{x:T},backend:n,attrs:{shape:t.outShape}}),x.push(k),x.push(E),x.push(T)}else{let _=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),k={dataId:r.dataId,shape:[1,_,t.inChannels],dtype:r.dtype},E=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,y.assert(xl(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);let T=me({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(T);let F=Qu({a:k,b:T,backend:n,transposeA:d,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),O=n.texData.get(F.dataId);y.assert(O.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=E,O.shape=t.outShape,g=Ht({inputs:{x:F},backend:n}),g.shape=t.outShape,x.push(F)}for(let _ of x)n.disposeIntermediateTensorInfo(_);return g}function nx({x:r,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=t,d=f==="channelsLast",h=l*u*c,g=m*p,x=[h,g],b=!0,w=!1,_=[],k=me({inputs:{x:r},backend:n,attrs:{shape:r.shape.slice(1)}}),E=me({inputs:{x:e},backend:n,attrs:{shape:[1,h,y.sizeFromShape(e.shape)/h]}});_.push(k),_.push(E);let T=new $k(x,k.shape,t),F=n.runWebGLProgram(T,[k],"float32"),O=me({inputs:{x:F},backend:n,attrs:{shape:[1,x[0],x[1]]}});_.push(F),_.push(O);let M=o!=null,j=s!=null,W=i==="leakyrelu",U=i?bl(i,!0):null,Y=new Nf(O.shape,E.shape,[1,g,t.outChannels],b,w,M,U,j,W),K=[O,E];if(o&&K.push(o),j&&K.push(s),W){let oe=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));K.push(oe),_.push(oe)}let Z=n.runWebGLProgram(Y,K,"float32"),re=d?[1,m,p,t.outChannels]:[1,t.outChannels,m,p],X=me({inputs:{x:Z},backend:n,attrs:{shape:re}});_.push(Z);for(let oe of _)n.disposeIntermediateTensorInfo(oe);return X}function EX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=n,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,s.shape,a,u,i,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=rx({x:o,filter:s,convInfo:m,backend:t});else if(G().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)f=nx({x:o,filter:s,convInfo:m,backend:t});else{let h=new Ef(m);f=t.runWebGLProgram(h,[o,s],"float32")}let d=me({inputs:{x:f},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(f),d}var cR={kernelName:Jn,backendName:"webgl",kernelFunc:EX};var Rk=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Fk=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,l=n-1-e.padInfo.left,u=a?1:2,c=a?2:3,p=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},Ok=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${s};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Pk=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function AX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=n,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,c,a,1,i,u,!1,p),f=new Rk(m);return t.runWebGLProgram(f,[o,s],"float32")}var pR={kernelName:Xl,backendName:"webgl",kernelFunc:AX};function DX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=n,p=N.convertConv2DDataFormat(u),m=N.computeConv2DInfo(a,s.shape,i,1,l,c,!1,p),f=new Fk(m);return t.runWebGLProgram(f,[o,s],"float32")}var mR={kernelName:Qn,backendName:"webgl",kernelFunc:DX};function $X(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n,u=N.computeConv3DInfo(o.shape,s.shape,a,l,i),c=new Dk(u);return t.runWebGLProgram(c,[o,s],"float32")}var fR={kernelName:aa,backendName:"webgl",kernelFunc:$X};function RX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,pad:i,filterShape:l}=n,u=N.computeConv3DInfo(o.shape,l,a,1,i),c=new Ok(u);return t.runWebGLProgram(c,[o,s],"float32")}var dR={kernelName:Yl,backendName:"webgl",kernelFunc:RX};function FX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{pad:a,strides:i,inputShape:l}=n,u=N.computeConv3DInfo(l,s.shape,i,1,a),c=new Pk(u);return t.runWebGLProgram(c,[o,s],"float32")}var hR={kernelName:Zl,backendName:"webgl",kernelFunc:FX};var OX=Yg+`
  return cos(x);
`,PX=Ce({opSnippet:OX}),gR={kernelName:eo,backendName:"webgl",kernelFunc:PX};var MX=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,LX=Ce({opSnippet:MX}),xR={kernelName:ri,backendName:"webgl",kernelFunc:LX};var Mk=class{constructor(e,t,n,o,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,i,l,u]=e,[c]=t,[p,m]=n;this.outputShape=[c,p,m,u];let f=o==="bilinear"?1:0,[d,h]=[`${i-1}.0`,`${l-1}.0`],[g,x,b]=p>1?[`${(i-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[w,_,k]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${_};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var zX=r=>{let{inputs:e,backend:t,attrs:n}=r,{image:o,boxes:s,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:u}=n,c=new Mk(o.shape,s.shape,i,l,u);return t.runWebGLProgram(c,[o,s,a],"float32")},yR={kernelName:ni,backendName:"webgl",kernelFunc:zX};var ox=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;let o=e.length,s=t?"0.0":`getX(${bR(o,"coords")})`,a=e[e.length-1],i="",l="";t?(i=n?`end != ${a-1}`:"end != 0",l=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",l=n?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${ze(o)} coords = getOutputCoords();
        int end = ${wR(o,"coords")};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${i}) {
          int idx = ${l};
          ${wR(o,"coords")} = idx;
          val += getX(${bR(o,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.index==null&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}};function bR(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.x, ${e}.y`;if(r===3)return`${e}.x, ${e}.y, ${e}.z`;if(r===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function wR(r,e){if(r===1)return`${e}`;if(r===2)return`${e}.y`;if(r===3)return`${e}.z`;if(r===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function BX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,l=o.shape.length,u=N.getAxesPermutation([s],l),c=o;u!=null&&(c=Vt({inputs:{x:o},backend:t,attrs:{perm:u}}));let p=N.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=${s}`);let m=o.shape[p],f=Ht({inputs:{x:c},backend:t});for(let d=0;d<=Math.ceil(Math.log2(m))-1;d++){let h=new ox(c.shape,!1,i),g=h.getCustomSetupFunc(d),x=f;f=t.runWebGLProgram(h,[f],f.dtype,g),t.disposeIntermediateTensorInfo(x)}if(a){let d=new ox(c.shape,a,i),h=f;f=t.runWebGLProgram(d,[f],f.dtype),t.disposeIntermediateTensorInfo(h)}if(u!=null){let d=N.getUndoAxesPermutation(u),h=Vt({inputs:{x:f},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(c),h}return f}var _R={kernelName:to,backendName:"webgl",kernelFunc:BX};function VX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let l=t.readSync(o.dataId),u=t.readSync(s.dataId),c=Ug(l,u,s.dtype,s.shape,a);return t.makeTensorInfo([a],s.dtype,c)}else if(o.shape.length===2){let l=t.bufferSync(o),u=t.bufferSync(s),c=TD(l,u,a,i);return t.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var vR={kernelName:Jl,backendName:"webgl",kernelFunc:VX};var Lk=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function WX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n;y.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],c=a==="NHWC"?o.shape[3]:o.shape[1],p=l*s,m=u*s,f=c/(s*s),d=a==="NHWC"?[i,p,m,f]:[i,f,p,m],h=new Lk(d,s,a);return t.runWebGLProgram(h,[o],o.dtype)}var kR={kernelName:oi,backendName:"webgl",kernelFunc:WX};var Af=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.inHeight,i=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,p=e.strideWidth,m=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,g=e.outChannels/e.inChannels,x="",b="";n&&(o?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${c}, ${p});
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${g};
        int q = d2 - d1 * ${g};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${m};

          if (xR < 0 || xR >= ${a}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${f};

            if (xC < 0 || xC >= ${i}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}};var Df=class{constructor(e,t=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;let a=e.inHeight,i=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,p=e.strideWidth,m=e.dilationHeight,f=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,g=h,x="int xR; int xC; int xCOffset;";for(let k=0;k<d;k++)for(let E=0;E<h;E++)x+=`
          vec4 xTexelR${k}C${E*2} = vec4(0.);
          vec4 wR${k}C${E} = vec4(0.);
          vec4 xR${k}C${E} = vec4(0.);`;for(let k=0;k<d;k++)for(let E=0;E<g;E++){let T=E*2;if(x+=`
          xR = xRCorner + ${k*m};
          xC = xCCorner + ${T*f};
        `,p===1){if(T<h&&(u%2==1?x+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    xTexelR${k}C${T}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${k}C${T} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${i}) {
                    previous.zw = vec2(0.);
                  }

                  xR${k}C${T} = vec4(previous.zw, xTexelR${k}C${T}.xy);
                } else {
                  xR${k}C${T} = vec4(0, 0, xTexelR${k}C${T}.xy);
                }
              `:x+=`
                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {
                  xTexelR${k}C${T} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${k}C${T} = vec4(0.);
                }

                xR${k}C${T} = xTexelR${k}C${T};
              `,T+1<h)){let F=u%2==0?y.nearestLargerEven(f):f;f%2==0&&u%2==1||f%2!=0&&u%2!=1?(x+=`
                  xCOffset = xC + ${u%2} + ${F};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${k}C${T+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,f>1&&(x+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${a} &&
                      xCOffset >= 0 && xCOffset < ${i}) {
                      xTexelR${k}C${T} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${k}C${T} = vec4(0.);
                    }
                  `),x+=`
                  xR${k}C${T+1} = vec4(
                    xTexelR${k}C${T}.zw, xTexelR${k}C${T+2}.xy);
                `):x+=`
                  xCOffset = xC + ${F};

                  if(xR >= 0 && xR < ${a} &&
                    xCOffset >= 0 && xCOffset < ${i}) {
                    xTexelR${k}C${T+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${k}C${T+1} = xTexelR${k}C${T+2};
                `}}else T<h&&(x+=`
              if(xR >= 0 && xR < ${a}) {
            `,u%2==1?(x+=`
                xCOffset = xC + 1 - ${p};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${T} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${k}C${T} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${i}) {
                  xTexelR${k}C${T+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${k}C${T+2} = vec4(0.);
                }

                xR${k}C${T} = vec4(
                  xTexelR${k}C${T}.zw, xTexelR${k}C${T+2}.zw);
              `,T+1<h&&(x+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${p};
                  if(xCOffset >= 0 && xCOffset < ${i}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${k}C${T+1} = vec4(xTexelR${k}C${T+2}.xy, final.xy);
                `)):(x+=`
                if(xC >= 0 && xC < ${i}) {
                  xTexelR${k}C${T} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${k}C${T} = vec4(0.);
                }

                xCOffset = xC + ${p};
                if(xCOffset >= 0 && xCOffset < ${i}) {
                  xTexelR${k}C${T+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${k}C${T+2} = vec4(0.);
                }

                xR${k}C${T} = vec4(
                  xTexelR${k}C${T}.xy, xTexelR${k}C${T+2}.xy);
              `,T+1<h&&(x+=`
                  xR${k}C${T+1} = vec4(
                    xTexelR${k}C${T}.zw, xTexelR${k}C${T+2}.zw);
                `)),x+="}");T<h&&(x+=`
            vec4 wTexelR${k}C${T} = getW(${k}, ${T}, d1, q);
            wR${k}C${T} = vec4(wTexelR${k}C${T}.xz, wTexelR${k}C${T}.xz);
          `,T+1<h&&(x+=`
              vec4 wTexelR${k}C${T+1} = getW(${k}, ${T+1}, d1, q);
              wR${k}C${T+1} =
                vec4(wTexelR${k}C${T+1}.xz, wTexelR${k}C${T+1}.xz);`))}for(let k=0;k<d;k++)for(let E=0;E<h;E++)x+=`dotProd += xR${k}C${E} * wR${k}C${E};`;let b="",w="";n&&(o?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:b=`vec4 activation(vec4 x) {
          ${n}
        }`,w="result = activation(result);");let _=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${c}, ${p});
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${x}

        vec4 result = dotProd;
        ${_}
        ${w}
        setOutput(result);
      }
    `}};function jX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=n,c=l;c==null&&(c=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let p=N.computeConv2DInfo(o.shape,s.shape,a,c,i,u,!0),m;return G().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?m=new Df(p):m=new Af(p),t.runWebGLProgram(m,[o,s],"float32")}var CR={kernelName:ro,backendName:"webgl",kernelFunc:jX};var zk=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Bk=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function GX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,dy:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=n,p=N.computeConv2DInfo(o.shape,c,a,i,l,u,!0),m=new zk(p);return t.runWebGLProgram(m,[o,s],"float32")}var IR={kernelName:Ql,backendName:"webgl",kernelFunc:GX};function UX(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=n,p=N.computeConv2DInfo(c,s.shape,a,i,l,u,!0),m=new Bk(p);return t.runWebGLProgram(m,[o,s],"float32")}var SR={kernelName:eu,backendName:"webgl",kernelFunc:UX};var Vk=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function qX(r){let{inputs:e,backend:t}=r,{x:n}=e,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=me({inputs:{x:n},backend:t,attrs:{shape:[s]}}),i=new Vk(s),l=t.runWebGLProgram(i,[a],a.dtype),u=me({inputs:{x:l},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}var NR={kernelName:tu,backendName:"webgl",kernelFunc:qX};var Wk=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:u,dilationWidth:c}=e,{top:p,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function HX(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s}=e,{strides:a,pad:i,dilations:l}=n,u=N.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",l),c,p=new Wk(u);c=t.runWebGLProgram(p,[o,s],"float32");let m=me({inputs:{x:c},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(c),m}var TR={kernelName:la,backendName:"webgl",kernelFunc:HX};var KX="return (x >= 0.0) ? x : (exp(x) - 1.0);",XX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,YX=Ce({opSnippet:KX,packedOpSnippet:XX}),ER={kernelName:si,backendName:"webgl",kernelFunc:YX};var ZX="return (b >= 1.0) ? a : a * (b + 1.0);",JX=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,QX=r=>{let{inputs:e,backend:t}=r,{dy:n,y:o}=e,s=G().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ps(JX,n.shape,o.shape):new Xo(ZX,n.shape,o.shape);return t.runWebGLProgram(s,[n,o],n.dtype)},AR={kernelName:ru,backendName:"webgl",kernelFunc:QX};var e7=`
  return vec4(equal(a, b));
`,t7="return float(a == b);",r7=at({opSnippet:t7,packedOpSnippet:e7,dtype:"bool"}),DR={kernelName:ai,backendName:"webgl",kernelFunc:r7};var n7=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,o7=Ce({opSnippet:n7}),$R={kernelName:ii,backendName:"webgl",kernelFunc:o7};var RR="return exp(x);",jk=Ce({opSnippet:RR,packedOpSnippet:RR,cpuKernelImpl:DD}),FR={kernelName:oo,backendName:"webgl",kernelFunc:jk};function sx(r){let{inputs:e,attrs:t,backend:n}=r,{dim:o}=t,{input:s}=e,a=s.shape.length,i=s.shape.slice(),l=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),me({inputs:{x:s},backend:n,attrs:{shape:i}})}var OR={kernelName:cs,backendName:"webgl",kernelFunc:sx};var PR="return exp(x) - 1.0;",s7=Ce({opSnippet:PR,packedOpSnippet:PR,cpuKernelImpl:$D}),MR={kernelName:li,backendName:"webgl",kernelFunc:s7};var ix=class{constructor(e,t,n){this.variableNames=["real","imag"];let o=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function ax(r,e,t){let n=t.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=me({inputs:{x:r},backend:t,attrs:{shape:[a,s]}}),l=i.shape,u=new ix("real",l,e),c=new ix("imag",l,e),p=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],m=t.runWebGLProgram(u,p,"float32"),f=t.runWebGLProgram(c,p,"float32"),d=an({inputs:{real:m,imag:f},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f);let h=me({inputs:{x:d},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(d),h}function i7(r){let{inputs:e,backend:t}=r,{input:n}=e;return ax(n,!1,t)}var LR={kernelName:nu,backendName:"webgl",kernelFunc:i7};var Gk=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}};function $f(r){let{backend:e,attrs:t}=r,{shape:n,value:o}=t,{dtype:s}=t;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),e.makeTensorInfo(n,s,a)}else{let a=new Gk(n,o),i=a.getCustomSetupFunc(o);return e.runWebGLProgram(a,[],s,i)}}var zR={kernelName:ua,backendName:"webgl",kernelFunc:$f};var Uk=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var BR={kernelName:ui,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{let{image:t}=r,n=e,o=new Uk(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};var VR="return floor(x);",a7=Ce({opSnippet:VR,packedOpSnippet:VR,cpuKernelImpl:RD}),WR={kernelName:so,backendName:"webgl",kernelFunc:a7};var l7=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,u7=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,c7=at({opSnippet:l7,packedOpSnippet:u7,dtype:"int32"}),jR={kernelName:io,backendName:"webgl",kernelFunc:c7};var qk=class{constructor(e){this.variableNames=["A"];let t=Lt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var Hk=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Lt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}};var GR={kernelName:Pc,backendName:"webgl",kernelFunc:p7},_p;function p7(r){let{inputs:e,backend:t,attrs:n}=r,{pixels:o}=e,{numChannels:s}=n,a=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,l=typeof ImageBitmap!="undefined"&&o instanceof ImageBitmap,[u,c]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[c,u],m=[c,u,s];(i||a||l)&&(_p==null&&(_p=document.createElement("canvas").getContext("2d")),_p.canvas.width=u,_p.canvas.height=c,_p.drawImage(o,0,0,u,c),o=_p.canvas);let f=t.makeTensorInfo(p,"int32");t.texData.get(f.dataId).usage=Rr.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(f.dataId),o);let d=G().getBool("WEBGL_PACK")?new Hk(m):new qk(m),h=t.runWebGLProgram(d,[f],"int32");return t.disposeData(f.dataId),h}function m7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=N.convertConv2DDataFormat(c),g=N.computeConv2DInfo(o.shape,s.shape,l,p,u,m,!1,h),x,b=[];if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=rx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else if(G().getBool("WEBGL_CONV_IM2COL")&&o.shape[0]===1)x=nx({x:o,filter:s,convInfo:g,backend:t,bias:a,activation:f,preluActivationWeights:i,leakyreluAlpha:d});else{let _=a!=null,k=i!=null,E=f==="leakyrelu",T=f?bl(f,!1):null,F=new Ef(g,_,T,k,E),O=[o,s];if(a&&O.push(a),i&&O.push(i),E){let M=t.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));O.push(M),b.push(M)}x=t.runWebGLProgram(F,O,"float32")}let w=me({inputs:{x},backend:t,attrs:{shape:g.outShape}});return b.push(x),b.forEach(_=>t.disposeIntermediateTensorInfo(_)),w}var UR={kernelName:ks,backendName:"webgl",kernelFunc:m7};function f7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=n,d=[],h=c;h==null&&(h=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(l,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`);let g=N.computeConv2DInfo(o.shape,s.shape,l,h,u,p,!0),x=G().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=m?bl(m,x):null,w=[o,s],_=a!=null,k=i!=null,E=m==="leakyrelu";if(_&&w.push(a),k&&w.push(i),E){let O=t.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));w.push(O),d.push(O)}let T;x?T=new Df(g,_,b,k,E):T=new Af(g,_,b,k,E);let F=t.runWebGLProgram(T,w,"float32");return d.forEach(O=>t.disposeIntermediateTensorInfo(O)),F}var qR={kernelName:Cs,backendName:"webgl",kernelFunc:f7};var Kk=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let o=ze(t.length),s=ze(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${this.strides});
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${a};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}};function d7(r){let{inputs:e,backend:t}=r,{params:n,indices:o}=e,s=o.shape,a=s[s.length-1],[i,l,u,c]=N.prepareAndValidate(n,o),p=me({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),m=me({inputs:{x:n},backend:t,attrs:{shape:[y.sizeFromShape(n.shape)/u,u]}}),f=new Kk(a,c,[l,u]),d=t.runWebGLProgram(f,[m,p],m.dtype),h=me({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(d),h}var HR={kernelName:ci,backendName:"webgl",kernelFunc:d7};var Xk=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=ze(this.rank),o=h7(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}};function h7(r,e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[o]}`);return n.join()}function g7(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,l=y.parseAxisParam(a,o.shape)[0],u=N.segment_util.collectGatherOpShapeInfo(o,s,l,i),c=y.sizeFromShape(s.shape),p=[],m=me({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=me({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(m),p.push(f);let d=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let b=t.bufferSync(f),w=t.bufferSync(m),_=FD(w,b,d);return p.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(u.outputShape,_.dtype,_.values)}let h=new Xk(m.shape,d),g=t.runWebGLProgram(h,[m,f],m.dtype);p.push(g);let x=me({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),x}var KR={kernelName:ps,backendName:"webgl",kernelFunc:g7};var x7="return float(a > b);",y7=`
  return vec4(greaterThan(a, b));
`,b7=at({opSnippet:x7,packedOpSnippet:y7,cpuKernelImpl:OD,dtype:"bool"}),XR={kernelName:pi,backendName:"webgl",kernelFunc:b7};var w7="return float(a >= b);",_7=`
  return vec4(greaterThanEqual(a, b));
`,v7=at({opSnippet:w7,packedOpSnippet:_7,dtype:"bool"}),YR={kernelName:lo,backendName:"webgl",kernelFunc:v7};function k7(r){let{inputs:e,backend:t}=r,{input:n}=e;return ax(n,!0,t)}var ZR={kernelName:ou,backendName:"webgl",kernelFunc:k7};var C7="return float(!isnan(x) && !isinf(x));",I7=Ce({opSnippet:C7,dtype:"bool"}),JR={kernelName:mi,backendName:"webgl",kernelFunc:I7};var S7="return float(isinf(x));",N7=Ce({opSnippet:S7,dtype:"bool"}),QR={kernelName:fi,backendName:"webgl",kernelFunc:N7};var T7="return float(isnan(x));",E7=Ce({opSnippet:T7,dtype:"bool"}),eF={kernelName:di,backendName:"webgl",kernelFunc:E7};var A7="return float(a < b);",D7=`
  return vec4(lessThan(a, b));
`,$7=at({opSnippet:A7,packedOpSnippet:D7,cpuKernelImpl:PD,dtype:"bool"}),tF={kernelName:hi,backendName:"webgl",kernelFunc:$7};var R7="return float(a <= b);",F7=`
  return vec4(lessThanEqual(a, b));
`,O7=at({opSnippet:R7,packedOpSnippet:F7,dtype:"bool"}),rF={kernelName:gi,backendName:"webgl",kernelFunc:O7};function P7(r){let{backend:e,attrs:t}=r,{start:n,stop:o,num:s}=t,a=MD(n,o,s);return e.makeTensorInfo([a.length],"float32",a)}var nF={kernelName:iu,backendName:"webgl",kernelFunc:P7};var M7=`if (x < 0.0) return NAN;
  return log(x);`,L7=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,z7=Ce({opSnippet:M7,packedOpSnippet:L7,cpuKernelImpl:LD}),oF={kernelName:co,backendName:"webgl",kernelFunc:z7};var B7="return log(1.0 + x);",V7=Ce({opSnippet:B7}),sF={kernelName:xi,backendName:"webgl",kernelFunc:V7};var W7="return float(a >= 1.0 && b >= 1.0);",j7=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,G7=at({opSnippet:W7,packedOpSnippet:j7,dtype:"bool"}),iF={kernelName:yi,backendName:"webgl",kernelFunc:G7};var U7="return float(!(x >= 1.0));",q7=Ce({opSnippet:U7}),aF={kernelName:tl,backendName:"webgl",kernelFunc:q7};var H7="return float(a >= 1.0 || b >= 1.0);",K7=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,X7=at({opSnippet:H7,packedOpSnippet:K7,dtype:"bool"}),lF={kernelName:rl,backendName:"webgl",kernelFunc:X7};var Yk=class{constructor(e,t,n,o,s){this.variableNames=["x"],this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let l,u=`float(${n}) + float(${o}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var Zk=class{constructor(e,t,n,o,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let l,u=`float(${n}) + float(${o}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var Y7=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{depthRadius:s,bias:a,alpha:i,beta:l}=n,u=G().getBool("WEBGL_PACK_NORMALIZATION")?new Zk(o.shape,s,a,i,l):new Yk(o.shape,s,a,i,l);return t.runWebGLProgram(u,[o],o.dtype)},uF={kernelName:ca,backendName:"webgl",kernelFunc:Y7};var Jk=class{constructor(e,t,n,o,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Z7=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o,y:s,dy:a}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=n,p=new Jk(o.shape,i,l,u,c);return t.runWebGLProgram(p,[o,s,a],o.dtype)},cF={kernelName:au,backendName:"webgl",kernelFunc:Z7};function pF(r,e,t,n){let o=y.sizeFromShape(e),a=y.sizeFromShape(r.shape)/o,i=me({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),l=Sn(i,r.dtype,"max",n),u=me({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}function Qk(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=c!=null,m=t.shouldExecuteOnCPU([o]),f=o;if(p){if(m){let w=t.texData.get(f.dataId).values,_=new Array(i);for(let T=0;T<_.length;T++)_[T]=o.shape[c[T]];let k=wp(w,o.shape,o.dtype,c,_);f=t.makeTensorInfo(_,o.dtype);let E=t.texData.get(f.dataId);E.values=k}else f=wl(o,c,t);u=N.getInnerMostAxes(u.length,i)}N.assertAxesAreInnerMostDims("max",u,i);let[d,h]=N.computeOutAndReduceShapes(f.shape,u),g=d;a&&(g=N.expandShapeToKeepDim(d,l));let x;if(m){let w=t.texData.get(f.dataId).values,_=zD(w,y.sizeFromShape(h),g,o.dtype);x=t.makeTensorInfo(g,o.dtype);let k=t.texData.get(x.dataId);k.values=_}else x=pF(f,h,g,t);return p&&t.disposeIntermediateTensorInfo(f),x}var mF={kernelName:po,backendName:"webgl",kernelFunc:Qk};var J7=Xg+`
  return max(a, b);
`,Q7=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+yl+`
  return result;
`,eY=at({opSnippet:J7,packedOpSnippet:Q7,cpuKernelImpl:BD}),fF={kernelName:mo,backendName:"webgl",kernelFunc:eY};function tY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e;Rs(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:l}=n,u=1;y.assert(N.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,a,u,i,l);if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))return Ht({inputs:{x:o},backend:t});let p=new Gi(c,"max",!1);return t.runWebGLProgram(p,[o],o.dtype)}var dF={kernelName:fo,backendName:"webgl",kernelFunc:tY};function rY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{filterSize:s,strides:a,pad:i,dataFormat:l,dimRoundingMode:u}=n,c=[1,1,1],p=N.computePool3DInfo(o.shape,s,a,c,i,u,l),m=new ec(p,"max",!1);return t.runWebGLProgram(m,[o],o.dtype)}var hF={kernelName:pa,backendName:"webgl",kernelFunc:rY};var e0=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,l=a-1-e.padInfo.left,u=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},t0=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=l-1-e.padInfo.front,m=u-1-e.padInfo.top,f=c-1-e.padInfo.left,d=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function nY(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s}=e,a=s,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=n,p=[1,1,1],m=N.computePool3DInfo(a.shape,i,l,p,u,c),f=new ec(m,"max",!0),d=t.runWebGLProgram(f,[a],a.dtype),h=new t0(m),g=t.runWebGLProgram(h,[o,d],a.dtype);return t.disposeIntermediateTensorInfo(d),g}var gF={kernelName:uu,backendName:"webgl",kernelFunc:nY};function oY(r){let{inputs:e,backend:t,attrs:n}=r,{dy:o,input:s,output:a}=e,i=s;Rs([s,a],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=n,m=N.computePool2DInfo(i.shape,l,u,1,c,p),f=!0,d=new Gi(m,"max",f),h=t.runWebGLProgram(d,[i],i.dtype),g=new e0(m),x=t.runWebGLProgram(g,[o,h],i.dtype);return t.disposeIntermediateTensorInfo(h),x}var xF={kernelName:lu,backendName:"webgl",kernelFunc:oY};function yF(r,e,t,n){let o=new Gi(t,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new Gi(t,"max",!0,!0,e);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var bF={kernelName:cu,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=e,l=t;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];y.assert(N.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,o,s,u,a),[p,m]=yF(n,i,c,l);return[p,m]}};function wF(r,e,t,n){let o=y.sizeFromShape(e),a=y.sizeFromShape(r.shape)/o,i=me({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),l=Sn(i,"float32","mean",n),u=me({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var _F={kernelName:ho,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{x:n}=r,{keepDims:o,axis:s}=e,a=t,i=n.shape.length,l=y.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,i),p=c!=null,m=a.shouldExecuteOnCPU([n]),f=[],d=n;if(p){if(m){let _=a.texData.get(d.dataId).values,k=new Array(i);for(let F=0;F<k.length;F++)k[F]=n.shape[c[F]];let E=wp(_,n.shape,n.dtype,c,k);d=a.makeTensorInfo(k,n.dtype);let T=a.texData.get(d.dataId);T.values=E}else d=wl(n,c,a);f.push(d),u=N.getInnerMostAxes(u.length,i)}N.assertAxesAreInnerMostDims("sum",u,i);let[h,g]=N.computeOutAndReduceShapes(d.shape,u),x=h;o&&(x=N.expandShapeToKeepDim(h,l));let b=wF(d,g,x,a);for(let w of f)a.disposeIntermediateTensorInfo(w);return b}};function sY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,i),p=o;c!=null&&(p=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,o.shape.length)),N.assertAxesAreInnerMostDims("min",u,i);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=y.sizeFromShape(f),h=me({inputs:{x:p},backend:t,attrs:{shape:[-1,d]}}),g=Sn(h,h.dtype,"min",t),x;if(a){let b=N.expandShapeToKeepDim(m,l);x=me({inputs:{x:g},backend:t,attrs:{shape:b}})}else x=me({inputs:{x:g},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(p),x}var vF={kernelName:go,backendName:"webgl",kernelFunc:sY};var iY=Xg+`
  return min(a, b);
`,aY=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+yl+`
  return result;
`,lY=at({opSnippet:iY,packedOpSnippet:aY,cpuKernelImpl:VD}),kF={kernelName:xo,backendName:"webgl",kernelFunc:lY};var r0=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((c,p)=>c[0]+e[p]+c[1]);let o=e.length,s=ze(o),a=t.map(c=>c[0]).join(","),i=t.map((c,p)=>c[0]+e[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var n0=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);let o=e.length,s=ze(o),a=t.map(d=>d[0]).join(","),i=t.map((d,h)=>d[0]+e[h]).join(","),l=qt("rc",o),u=qt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${u.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[o-1]} += 1;
          if(${c}) {
            ${d}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var uY=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new n0(n.shape,o,s):new r0(n.shape,o,s);return e.runWebGLProgram(a,[n],n.dtype)},CF={kernelName:ma,backendName:"webgl",kernelFunc:uY};var cY=`if (b == 0.0) return NAN;
  return mod(a, b);`,pY=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+yl+`
  return result;
`,mY=at({opSnippet:cY,packedOpSnippet:pY}),IF={kernelName:bi,backendName:"webgl",kernelFunc:mY};var o0=class{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,n)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}};var fY=`
if (a == b) {
  return 1.0;
};
return a / b;`,dY=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,s0=at({opSnippet:fY,packedOpSnippet:dY,checkOutOfBounds:!0}),SF={kernelName:no,backendName:"webgl",kernelFunc:s0};var NF="return a - b;",i0=at({opSnippet:NF,packedOpSnippet:NF,supportsComplex:!0,cpuKernelImpl:XD}),TF={kernelName:Oo,backendName:"webgl",kernelFunc:i0};function a0(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=Qk({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=N.expandShapeToKeepDim(i.shape,a),u=me({inputs:{x:i},backend:t,attrs:{shape:l}}),c=i0({inputs:{a:o,b:u},backend:t}),p=jk({inputs:{x:c},backend:t}),m=Tf({inputs:{x:p},backend:t,attrs:{axis:a,keepDims:!1}}),f=me({inputs:{x:m},backend:t,attrs:{shape:l}}),d=s0({inputs:{a:p,b:f},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(f),d}var EF={kernelName:Ro,backendName:"webgl",kernelFunc:a0};function hY(r){let{inputs:e,backend:t,attrs:n}=r,{logits:o}=e,{numSamples:s,seed:a,normalized:i}=n,l=i?o:a0({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new o0(u,c,s),m=p.getCustomSetupFunc(a),f=t.runWebGLProgram(p,[l],"int32",m);return i||t.disposeIntermediateTensorInfo(l),f}var AF={kernelName:pu,backendName:"webgl",kernelFunc:hY};var DF="return -x;";function gY(r){let{inputs:e,backend:t}=r,{x:n}=e;if(t.shouldExecuteOnCPU([n])){let s=t.texData.get(n.dataId),[a,i]=jD(s.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return G().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Os(n.shape,DF):o=new sn(n.shape,DF),t.runWebGLProgram(o,[n],n.dtype)}var $F={kernelName:fs,backendName:"webgl",kernelFunc:gY};var xY=Dr.nonMaxSuppressionV3Impl;function yY(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=n,u=t.readSync(o.dataId),c=t.readSync(s.dataId),{selectedIndices:p}=xY(u,c,a,i,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}var RF={kernelName:_i,backendName:"webgl",kernelFunc:yY};var bY=Dr.nonMaxSuppressionV4Impl;function wY(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=n,c=t.readSync(o.dataId),p=t.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=bY(c,p,a,i,l,u);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}var FF={kernelName:vi,backendName:"webgl",kernelFunc:wY};var _Y=Dr.nonMaxSuppressionV5Impl;function vY(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:e,backend:t,attrs:n}=r,{boxes:o,scores:s}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=n,c=t.readSync(o.dataId),p=t.readSync(s.dataId),m=a,f=i,d=l,h=u,{selectedIndices:g,selectedScores:x}=_Y(c,p,m,f,d,h);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var OF={kernelName:ki,backendName:"webgl",kernelFunc:vY};var l0=class{constructor(e,t,n,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var kY=r=>{let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,l=y.sizeFromShape(o.shape),u=new l0(l,s,a,i),c=me({inputs:{x:o},backend:t,attrs:{shape:[l]}}),p=t.runWebGLProgram(u,[c],o.dtype);t.disposeIntermediateTensorInfo(c);let m=[...o.shape,s],f=me({inputs:{x:p},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(p),f},PF={kernelName:bo,backendName:"webgl",kernelFunc:kY};function Rf(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="complex64"){let o=ja({inputs:{input:n},backend:t}),s=Rf({inputs:{x:o},backend:t}),a=tc({inputs:{input:n},backend:t}),i=Rf({inputs:{x:a},backend:t}),l=an({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return $f({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}var MF={kernelName:_s,backendName:"webgl",kernelFunc:Rf};function LF(r){let{inputs:e,backend:t}=r,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=ja({inputs:{input:n},backend:t}),s=LF({inputs:{x:o},backend:t}),a=tc({inputs:{input:n},backend:t}),i=Rf({inputs:{x:a},backend:t}),l=an({inputs:{real:s,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return $f({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}var zF={kernelName:ds,backendName:"webgl",kernelFunc:LF};function CY(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return sx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],l=e.map(c=>{let p=sx({inputs:{input:c},backend:t,attrs:{dim:o}});return i.push(p),p}),u=Ak({inputs:l,backend:t,attrs:{axis:o}});return i.forEach(c=>t.disposeIntermediateTensorInfo(c)),u}var BF={kernelName:hs,backendName:"webgl",kernelFunc:CY};var u0=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((u,c)=>u[0]+e[c]+u[1]);let o=e.length,s=ze(o),a=t.map(u=>u[0]).join(","),i=t.map((u,c)=>u[0]+e[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${n}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${n}));
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var c0=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);let o=e.length,s=ze(o),a=t.map(h=>h[0]).join(","),i=t.map((h,g)=>h[0]+e[g]).join(","),l=qt("rc",o),u=qt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${u.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${c}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${c}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=o===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(${n});
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${u.join()}), ${p});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var p0=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{paddings:s,constantValue:a}=n,i=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new c0(o.shape,s,a):new u0(o.shape,s,a);return t.runWebGLProgram(i,[o],o.dtype)},VF={kernelName:wo,backendName:"webgl",kernelFunc:p0};var IY=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,SY=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+yl+`
  return result;
`,NY=at({opSnippet:IY,packedOpSnippet:SY}),WF={kernelName:_o,backendName:"webgl",kernelFunc:NY};function TY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,keepDims:a}=n,i=o.shape.length,l=[],u=y.parseAxisParam(s,o.shape),c=u,p=N.getAxesPermutation(c,i),m=o;p!=null&&(m=Vt({inputs:{x:o},backend:t,attrs:{perm:p}}),c=N.getInnerMostAxes(c.length,i),l.push(m)),N.assertAxesAreInnerMostDims("prod",c,i);let f;if(t.shouldExecuteOnCPU([m])){let d=t.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:x}=GD(m.shape,m.dtype,d,c);f=t.makeTensorInfo(g,x,h)}else{let[d,h]=N.computeOutAndReduceShapes(m.shape,c),g=y.sizeFromShape(h),x=me({inputs:{x:m},backend:t,attrs:{shape:[-1,g]}}),b=xu(o.dtype),w=Sn(x,b,"prod",t);f=me({inputs:{x:w},backend:t,attrs:{shape:d}}),l.push(x),l.push(w)}if(a){l.push(f);let d=N.expandShapeToKeepDim(f.shape,u);f=me({inputs:{x:f},backend:t,attrs:{shape:d}})}return l.forEach(d=>t.disposeIntermediateTensorInfo(d)),f}var jF={kernelName:Ci,backendName:"webgl",kernelFunc:TY};var m0=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=UD(n,o,s,a);return e.makeTensorInfo([i.length],a,i)},GF={kernelName:fa,backendName:"webgl",kernelFunc:m0};var EY="return 1.0 / x;",AY=Ce({opSnippet:EY}),UF={kernelName:Ii,backendName:"webgl",kernelFunc:AY};var DY=gr+`
  return (x < 0.0) ? 0.0 : x;
`,$Y=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RY=Ce({opSnippet:DY,packedOpSnippet:$Y}),qF={kernelName:ko,backendName:"webgl",kernelFunc:RY};var FY=gr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,OY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,PY=Ce({opSnippet:FY,packedOpSnippet:OY}),HF={kernelName:Io,backendName:"webgl",kernelFunc:PY};var f0=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var d0=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function MY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,c=G().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new d0(o.shape,l,u,s,a):new f0(o.shape,l,u,s,a);return t.runWebGLProgram(c,[o],"float32")}var KF={kernelName:Co,backendName:"webgl",kernelFunc:MY};var h0=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,o,s]=t,[,a,i]=e,l=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function LY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new h0(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var XF={kernelName:du,backendName:"webgl",kernelFunc:LY};var g0=class{constructor(e,t,n,o,s){this.variableNames=["A"],this.outputShape=[];let[a,i,l,u]=e;this.outputShape=[a,t,n,u];let c=[o&&t>1?i-1:i,o&&n>1?l-1:l],p=[o&&t>1?t-1:t,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};function zY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,c=new g0(o.shape,l,u,s,a);return t.runWebGLProgram(c,[o],o.dtype)}var YF={kernelName:da,backendName:"webgl",kernelFunc:zY};var x0=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,o,s]=t,[,a,i]=e,l=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function BY(r){let{inputs:e,backend:t,attrs:n}=r,{images:o,dy:s}=e,{alignCorners:a}=n,i=new x0(s.shape,o.shape,a);return t.runWebGLProgram(i,[s],s.dtype)}var ZF={kernelName:fu,backendName:"webgl",kernelFunc:BY};var y0=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,s=e.map((i,l)=>o(l)).join(","),a=ze(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var b0=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let o=qt("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ze(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${s}){
            result.g = ${u(o.slice())};
          }
          if(${a}) {
            result.b = ${c(o.slice())};
            if(${s}) {
              result.a = ${p(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(d){return m(d)}function u(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function c(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function p(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let h=e.map((b,w)=>f(w,d)),g=h.join(","),x=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(d,h){return t.indexOf(d)!==-1&&e[d]!==1?`${e[d]} - ${h[d]} - 1`:`${h[d]}`}}};function VY(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return Ht({inputs:{x:o},backend:t});let l=G().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new b0(o.shape,i):new y0(o.shape,i);return t.runWebGLProgram(l,[o],o.dtype)}var JF={kernelName:So,backendName:"webgl",kernelFunc:VY};var w0=class{constructor(e,t,n,o){this.variableNames=["Image"],this.outputShape=[];let s=e[1],a=e[2],i=Math.sin(t).toFixed(3),l=Math.cos(t).toFixed(3);this.outputShape=e;let[u,c]=N.getImageCenter(o,s,a),p=u.toFixed(3),m=c.toFixed(3),f="";typeof n=="number"?f=`float outputValue = ${n.toFixed(2)};`:f=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${p}) * ${l} - (float(y) - ${m}) * ${i};
          float coordYFloat = (float(x) - ${p}) * ${i} + (float(y) - ${m}) * ${l};
          int coordX = int(round(coordXFloat + ${p}));
          int coordY = int(round(coordYFloat + ${m}));
          ${f}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var QF={kernelName:Fi,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=e,i=t,l=new w0(n.shape,o,s,a);return i.runWebGLProgram(l,[n],n.dtype)}};var WY=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,jY=Ce({opSnippet:WY}),eO={kernelName:No,backendName:"webgl",kernelFunc:jY};var GY="return inversesqrt(x);",UY=Ce({opSnippet:GY,cpuKernelImpl:qD}),tO={kernelName:To,backendName:"webgl",kernelFunc:UY};var Ff=class{constructor(e,t,n,o,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let l=ze(s.length),u=ze(a.length),c="";n===1?c="i":n===2&&(c="i, j");let p=`getIndices(${c})`,m="";o===1?m="i":o===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,d=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${d};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function qY(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,o,a),m=[p/u,u];if(p===0)return t.makeTensorInfo(a,o.dtype);let f=me({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),d=me({inputs:{x:s},backend:t,attrs:{shape:[l,u]}}),h=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new Ff(l,i,f.shape.length,d.shape.length,c,m),x=t.runWebGLProgram(g,[d,f,h],d.dtype),b=me({inputs:{x},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(h),b}var rO={kernelName:Si,backendName:"webgl",kernelFunc:qY};var _0=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<t.length;c++)u.push(`${i[c]}`),c<e&&l.push(`${i[c]}`);o=l.join(),s=u.join()}let a=ze(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function HY(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=new _0(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,s],dr(o.dtype,s.dtype))}var nO={kernelName:xs,backendName:"webgl",kernelFunc:HY};var KY=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,XY=Ce({opSnippet:KY}),oO={kernelName:Ni,backendName:"webgl",kernelFunc:XY};var YY="return 1.0 / (1.0 + exp(-1.0 * x));",ZY=Ce({opSnippet:YY}),sO={kernelName:Ao,backendName:"webgl",kernelFunc:ZY};var JY=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,QY=Ce({opSnippet:JY}),iO={kernelName:Ei,backendName:"webgl",kernelFunc:QY};var e9=Yg+`
  return sin(x);
`,t9=Ce({opSnippet:e9}),aO={kernelName:Eo,backendName:"webgl",kernelFunc:t9};var r9=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,n9=Ce({opSnippet:r9}),lO={kernelName:Ti,backendName:"webgl",kernelFunc:n9};var o9=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,s9=Ce({opSnippet:o9}),uO={kernelName:Ai,backendName:"webgl",kernelFunc:s9};var i9=r=>{let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((x,b)=>x*b),l=[[0,0]];l.push(...a);for(let x=1+s.length;x<o.shape.length;++x)l.push([0,0]);let u=[],c=p0({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),p=N.getReshaped(c.shape,s,i,!1),m=N.getPermuted(p.length,s.length,!1),f=N.getReshapedPermuted(c.shape,s,i,!1),d=me({inputs:{x:c},backend:t,attrs:{shape:p}}),h=Vt({inputs:{x:d},backend:t,attrs:{perm:m}}),g=me({inputs:{x:h},backend:t,attrs:{shape:f}});return u.push(c),u.push(d),u.push(h),u.forEach(x=>t.disposeIntermediateTensorInfo(x)),g},cO={kernelName:ha,backendName:"webgl",kernelFunc:i9};function a9(r){let{inputs:e,backend:t,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:l,numUpdates:u,strides:c,outputSize:p}=N.calculateShapes(s,o,i),m=!1,f=new Ff(u,l,o.shape.length,s.shape.length,c,[p,1],m),d=t.runWebGLProgram(f,[s,o,a],s.dtype),h=me({inputs:{x:d},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(d),h}var pO={kernelName:hu,backendName:"webgl",kernelFunc:a9};function l9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],l=N.prepareSplitSize(o,s,i),u=o.shape.length,c=new Array(u).fill(0),p=o.shape.slice();return l.map(m=>{let f=[...p];f[i]=m;let d=Wa({inputs:{x:o},backend:t,attrs:{begin:c,size:f}});return c[i]+=m,d})}var mO={kernelName:bs,backendName:"webgl",kernelFunc:l9};var u9="return sqrt(x);",c9=Ce({opSnippet:u9}),fO={kernelName:Do,backendName:"webgl",kernelFunc:c9};var p9="return x * x;",m9=Ce({opSnippet:p9}),dO={kernelName:ga,backendName:"webgl",kernelFunc:m9};var hO="return (a - b) * (a - b);",f9=at({opSnippet:hO,packedOpSnippet:hO}),gO={kernelName:Fo,backendName:"webgl",kernelFunc:f9};function d9({inputs:r,attrs:e,backend:t}){let{x:n}=r,o=gr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,s=new sn(n.shape,o);return t.runWebGLProgram(s,[n],n.dtype)}var xO={kernelName:On,backendName:"webgl",kernelFunc:d9};var v0=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let o=n.length,s=ze(n.length),a=ze(n.length),i="";if(o===1)i="coords * strides + begin";else{let l=0;i=n.map((u,c)=>(l++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${e});
      ${s} strides = ${s}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function h9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,{nonStrided:f,$begin:d,$strides:h,size:g,newShape:x,outShape:b}=ir.sliceInfo(o.shape,s,a,i,l,u,c,p,m),w=me({inputs:{x:o},backend:t,attrs:{shape:x}}),_;if(f){let E=Wa({inputs:{x:w},backend:t,attrs:{begin:d,size:g}});_=me({inputs:{x:E},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(E)}else if(b.some(E=>E===0))_=t.makeTensorInfo(b,o.dtype,[]);else if(t.shouldExecuteOnCPU([w])){let F=t.texData.get(w.dataId).values,O=Ie(w.shape,w.dtype,F),M=KD(b,O,h,d);_=t.makeTensorInfo(b,w.dtype,M.values)}else{let T=new v0(d,h,b);_=t.runWebGLProgram(T,[w],w.dtype)}let k=me({inputs:{x:_},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(_),k}var yO={kernelName:Di,backendName:"webgl",kernelFunc:h9};var g9="return tan(x);",x9=Ce({opSnippet:g9}),bO={kernelName:$i,backendName:"webgl",kernelFunc:x9};var y9=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,b9=Ce({opSnippet:y9}),wO={kernelName:Po,backendName:"webgl",kernelFunc:b9};var k0=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let o=ze(this.rank),s=w9(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function w9(r){let e=r.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${r[0]})`;let t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${t[o]}, ${r[o]})`);return n.join()}function C0(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{reps:s}=n;if(o.dtype==="string"){let u=t.readSync(o.dataId).map(m=>y.decodeString(m)),c=Ie(o.shape,o.dtype,u),p=YD(c,s);return t.makeTensorInfo(p.shape,p.dtype,p.values)}let a=new k0(o.shape,s);return t.runWebGLProgram(a,[o],o.dtype)}var _O={kernelName:_n,backendName:"webgl",kernelFunc:C0};function _9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{k:s,sorted:a}=n,i=t.readSync(o.dataId),[l,u]=ZD(i,o.shape,o.dtype,s,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}var vO={kernelName:Ri,backendName:"webgl",kernelFunc:_9};function v9(r){let{inputs:e,attrs:t,backend:n}=r,{axis:o}=t,{x:s}=e;Rs(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:l,indices:u}=JD(a,o,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var kO={kernelName:gu,backendName:"webgl",kernelFunc:v9};function k9(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,l=o.shape[s],u=new Array(i-1),c=0;for(let h=0;h<i;h++)h!==s&&(u[c++]=a.shape[h]);let p=[],m=new Array(i).fill(0),f=a.shape.slice();f[s]=1;let d=new Array(l);for(let h=0;h<d.length;h++){m[s]=h;let g=Wa({inputs:{x:a},backend:t,attrs:{begin:m,size:f}}),x=me({inputs:{x:g},backend:t,attrs:{shape:u}});d[h]=x,p.push(g)}return p.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}var CO={kernelName:ws,backendName:"webgl",kernelFunc:k9};var I0=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,o=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let l="0.0",u="sumValue",c=Math.floor(n/4)*4,p=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function C9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o,segmentIds:s}=e,{numSegments:a}=n,i=o.shape.length,l=[],u=0,c=N.getAxesPermutation([u],i),p=o;c!=null&&(p=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}),l.push(p),u=N.getInnerMostAxes(1,i)[0]);let m=N.segment_util.computeOutShape(p.shape,u,a),f=y.sizeFromShape([p.shape[u]]),d=me({inputs:{x:p},backend:t,attrs:{shape:[-1,f]}});l.push(d);let h=xu(o.dtype),g=(_,k,E,T,F)=>{let O=_.shape[0],M=_.shape[1],j=N.segment_util.segOpComputeOptimalWindowSize(M,F),W={windowSize:j,inSize:M,batchSize:O,numSegments:F},U=new I0(W,k),Y=t.compileAndRun(U,[_,E],T);if(l.push(Y),Y.shape[1]===F)return Y;let K=m0({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),Z=C0({inputs:{x:K},backend:t,attrs:{reps:[M/j]}});return l.push(K),l.push(Z),g(Y,k,Z,T,F)},x=g(d,"unsortedSegmentSum",s,h,a),b=me({inputs:{x},backend:t,attrs:{shape:m}}),w=b;if(c!=null){l.push(b);let _=N.getUndoAxesPermutation(c);w=Vt({inputs:{x:w},backend:t,attrs:{perm:_}})}return l.forEach(_=>t.disposeIntermediateTensorInfo(_)),w}var IO={kernelName:xa,backendName:"webgl",kernelFunc:C9};var I9=[uF,cF,C$,S$,N$,T$,A$,D$,$$,R$,P$,M$,L$,z$,V$,B$,W$,G$,j$,U$,q$,H$,K$,Y$,Z$,tR,nR,oR,iR,m$,uR,pR,mR,cR,dR,hR,fR,gR,xR,yR,_R,vR,kR,IR,SR,CR,NR,TR,ER,AR,DR,$R,FR,OR,MR,LR,zR,BR,WR,jR,GR,UR,qR,HR,KR,XR,YR,p$,ZR,aR,JR,QR,eF,f$,tF,rF,nF,sF,oF,iF,aF,lF,mF,hF,dF,gF,xF,bF,fF,_F,vF,kF,CF,IF,AF,y$,$F,RF,FF,OF,J$,PF,zF,BF,VF,WF,d$,jF,GF,Q$,SF,UF,HF,qF,w$,KF,XF,YF,ZF,JF,QF,eO,tO,rO,nO,oO,sO,iO,aO,lO,X$,EF,uO,cO,pO,mO,fO,dO,gO,xO,yO,TF,v$,bO,wO,_O,vO,k$,kO,CO,IO,MF];for(let r of I9)nl(r);var Wt;(function(r){r[r.float32=0]="float32",r[r.int32=1]="int32",r[r.bool=2]="bool",r[r.string=3]="string",r[r.complex64=4]="complex64"})(Wt||(Wt={}));var _l;(function(r){r[r.linear=0]="linear",r[r.relu=1]="relu",r[r.relu6=2]="relu6",r[r.prelu=3]="prelu",r[r.leakyrelu=4]="leakyrelu"})(_l||(_l={}));var SO;function S9(r){SO=r.wasm.cwrap(vs,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function N9(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n,m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(s.dataId).id,d=0;if(a!=null){let F=t.dataIdMap.get(a.dataId);if(F.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${F.shape.length}.`);d=F.id}let h=i==null?0:t.dataIdMap.get(i.dataId).id,g=_l[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let x=l?o.shape[2]:o.shape[1],b=u?s.shape[1]:s.shape[2],w=o.shape[0],_=t.makeOutput([w,x,b],o.dtype),k=t.dataIdMap.get(_.dataId).id,E=new Uint8Array(new Int32Array(o.shape).buffer),T=new Uint8Array(new Int32Array(s.shape).buffer);return SO(m,E,o.shape.length,f,T,s.shape.length,l,u,g,d,h,p||0,k),_}var NO={kernelName:vs,backendName:"wasm",setupFunc:S9,kernelFunc:N9};function Rt(r){let e;function t(o){e=o.wasm.cwrap(r,null,["number","number"])}function n(o){let{backend:s,inputs:{x:a}}=o,i=s.dataIdMap.get(a.dataId).id,l=s.makeOutput(a.shape,a.dtype),u=s.dataIdMap.get(l.dataId).id;return y.sizeFromShape(l.shape)===0||e(i,u),l}return{kernelName:r,backendName:"wasm",setupFunc:t,kernelFunc:n}}var TO=Rt(ls);function wt(r,e,t){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:l}=a,{a:u,b:c}=l,p=i.dataIdMap.get(u.dataId).id,m=i.dataIdMap.get(c.dataId).id,f=t!=null?t:u.dtype,d=N.assertAndGetBroadcastShape(u.shape,c.shape),h=i.makeOutput(d,f);if(y.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(u.shape).buffer),x=new Uint8Array(new Int32Array(c.shape).buffer),b=i.dataIdMap.get(h.dataId).id,w=()=>n(p,g,u.shape.length,m,x,c.shape.length,Wt[u.dtype],b);if(e&&u.dtype==="float32")return w(),h;let _=N.getBroadcastDims(u.shape,d),k=N.getBroadcastDims(c.shape,d),E=_.every((F,O)=>F===O),T=k.every((F,O)=>F===O);if(E&&T)return w(),h;throw new Error(`Broadcasting along outer dims is not yet supported for ${u.dtype} ${r}.`)}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var T9=!0,EO=wt(wn,T9);var AO;function E9(r){AO=r.wasm.cwrap(Kn,null,["array","number","number","number"])}function A9(r){let{inputs:e,backend:t}=r,n=t.makeOutput(e[0].shape,e[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=e.map(i=>t.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(n.dataId).id;return AO(s,o.length,Wt[n.dtype],a),n}var DO={kernelName:Kn,backendName:"wasm",setupFunc:E9,kernelFunc:A9};function nc(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(n).set(o),n}var $O={kernelName:ms,backendName:"wasm",kernelFunc:nc};var RO;function D9(r){RO=r.wasm.cwrap(Mo,null,["number","array","number","number","number","array","number"])}function vp(r){let{inputs:e,backend:t,attrs:n}=r,[o,s]=R9(e.x.shape,n.perm),a=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(a=!1);let i=$9(e.x.shape,n.perm),l={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){let d=nc({inputs:e,backend:t});return d.shape=i,d}let u=t.makeOutput(i,l.dtype),c=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(l.shape).buffer);return RO(c,f,l.shape.length,Wt[l.dtype],p,m,s.length),u}function $9(r,e){let t=new Array(r.length);for(let n=0;n<t.length;n++)t[n]=r[e[n]];return t}function R9(r,e){let t=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&t.push(r[o]),r[e[o]]!==1&&n.push(e[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[t,n]}var FO={kernelName:Mo,backendName:"wasm",kernelFunc:vp,setupFunc:D9};function Yo(r,e,t){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(e,n),a=s,i=N.getAxesPermutation(a,o),l=null,u=!1;if(i!=null){let c=new Array(o);for(let f=0;f<c.length;f++)c[f]=n[i[f]];a=N.getInnerMostAxes(a.length,o),l=vp({inputs:{x:r},attrs:{perm:i},backend:t});let p=t.dataIdMap.get(r.dataId).id;t.dataIdMap.get(l.dataId).id!==p&&(u=!0)}return{transposed:l,originalAxes:s,axes:a,inputWasTransposed:u}}var OO;function F9(r){OO=r.wasm.cwrap(Xn,null,["number","number","number","number","number"])}function O9(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=a,l=s,{transposed:u,axes:c,inputWasTransposed:p}=Yo(s,o,e);if(p){let x=e.dataIdMap.get(u.dataId).id;x!==a&&(l=u,i=x)}let m=l.shape.slice(0,-1),f=e.makeOutput(m,"int32"),d=e.dataIdMap.get(f.dataId).id,h=y.sizeFromShape(f.shape),g=l.shape[c[0]];return OO(i,Wt[l.dtype],h,g,d),p&&e.disposeData(u.dataId),f}var PO={kernelName:Xn,backendName:"wasm",kernelFunc:O9,setupFunc:F9};var MO;function P9(r){MO=r.wasm.cwrap(Yn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function M9(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=t,c=N.computePool2DInfo(o.shape,a,i,1,l,u),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,x=c.strideHeight,b=c.strideWidth,w=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let _=n.makeOutput(c.outShape,"float32"),k=n.dataIdMap.get(_.dataId).id;return MO(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,x,b,w,k),_}var LO={kernelName:Yn,backendName:"wasm",setupFunc:P9,kernelFunc:M9};function zr(r){let{inputs:e,attrs:t}=r,{x:n}=e,{shape:o}=t,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),{dataId:n.dataId,shape:a,dtype:n.dtype}}var zO={kernelName:gs,backendName:"wasm",kernelFunc:zr};var BO;function L9(r){BO=r.wasm.cwrap(Zn,null,["number","array","number","number","array","number","number","number","number"])}function z9(r){let{inputs:e,backend:t,attrs:n}=r,{a:o,b:s}=e,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=o.shape.length,u=s.shape.length,c=a?o.shape[l-2]:o.shape[l-1],p=i?s.shape[u-1]:s.shape[u-2],m=a?o.shape[l-1]:o.shape[l-2],f=i?s.shape[u-2]:s.shape[u-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(d),x=y.sizeFromShape(h),b=g===x||g===1||x===1;y.assert(l>=2&&u>=2&&b,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`);let _=(g>x?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([m,f]);y.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let k=a?[g,c,m]:[g,m,c],E=i?[x,f,p]:[x,p,f],T=zr({inputs:{x:o},backend:t,attrs:{shape:k}}),F=zr({inputs:{x:s},backend:t,attrs:{shape:E}}),O=t.dataIdMap.get(T.dataId).id,M=t.dataIdMap.get(F.dataId).id,j=a?T.shape[2]:T.shape[1],W=i?F.shape[1]:F.shape[2],U=Math.max(g,x),Y=t.makeOutput([U,j,W],T.dtype),K=t.dataIdMap.get(Y.dataId).id,Z=new Uint8Array(new Int32Array(T.shape).buffer),re=new Uint8Array(new Int32Array(F.shape).buffer);return BO(O,Z,T.shape.length,M,re,F.shape.length,a,i,K),Y.shape=_,Y}var VO={kernelName:Zn,backendName:"wasm",setupFunc:L9,kernelFunc:z9};function oc(r){let{inputs:{x:e},attrs:{dtype:t},backend:n}=r,o=n.makeOutput(e.shape,t),s=n.typedArrayFromHeap(e);return n.typedArrayFromHeap(o).set(s),o}var WO={kernelName:Rn,backendName:"wasm",kernelFunc:oc};var jO;function B9(r){jO=r.wasm.cwrap(Fn,null,["number","number","number","number"])}function V9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{clipValueMin:s,clipValueMax:a}=n,i=t.dataIdMap.get(o.dataId).id,l=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(l.dataId).id;return jO(i,s,a,u),l}var GO={kernelName:Fn,backendName:"wasm",setupFunc:B9,kernelFunc:V9};function S0(r){let{inputs:e,backend:t}=r,n=y.parseAxisParam(r.attrs.axis,e[0].shape)[0],o=N.computeOutShape(e.map(f=>f.shape),n),s=e.filter(f=>y.sizeFromShape(f.shape)>0);if(s.length===1)return nc({inputs:{x:s[0]},backend:t});let a=t.makeOutput(o,e[0].dtype);if(y.sizeFromShape(o)===0)return a;let i=s.map(f=>f.shape);if(N.assertParamsConsistent(i,n),s[0].dtype==="string"){let f=s.map(w=>{let _=y.sizeFromShape(w.shape.slice(n));return zr({inputs:{x:w},backend:t,attrs:{shape:[-1,_]}})}),d=f.map(w=>({vals:t.readSync(w.dataId),shape:w.shape}));o=N.computeOutShape(f.map(w=>w.shape),1);let h=f[0].shape[0]===1,g=cf(d,o,e[0].dtype,h),x=N.computeOutShape(s.map(w=>w.shape),n);a.shape=x;let b=t.dataIdMap.get(a.dataId);return b.stringBytes=N.fromStringArrayToUint8(g),a}let l=y.sizeFromShape(s[0].shape.slice(0,n)),u=0,c=s.map(f=>{let d=y.sizeFromShape(f.shape.slice(n));return u+=d,d}),p=s.map(f=>t.typedArrayFromHeap(f)),m=t.typedArrayFromHeap(a);for(let f=0;f<l;f++){let d=f*u;for(let h=0;h<p.length;h++){let g=c[h],x=f*g,b=p[h].subarray(x,x+g);m.set(b,d),d+=g}}return a}var UO={kernelName:us,backendName:"wasm",kernelFunc:S0};var qO;function W9(r){qO=r.wasm.cwrap(Jn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function j9(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p,dataFormat:m}=t,f=N.convertConv2DDataFormat(m),d=N.computeConv2DInfo(o.shape,s.shape,l,u,c,p,!1,f),h=d.filterHeight,g=d.filterWidth,x=d.padInfo.top,b=d.padInfo.right,w=d.padInfo.bottom,_=d.padInfo.left,k=d.dilationHeight,E=d.dilationWidth,T=d.strideHeight,F=d.strideWidth,O=d.inChannels,M=d.outChannels,j=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let W=n.makeOutput(d.outShape,"float32"),U=n.dataIdMap.get(W.dataId).id;return qO(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,x,b,w,_,j,k,E,T,F,O,M,U),W}var HO={kernelName:Jn,backendName:"wasm",setupFunc:W9,kernelFunc:j9};var KO;function G9(r){KO=r.wasm.cwrap(Qn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function U9(r){let{backend:e,inputs:t,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,inputShape:c}=n,p=1,m=N.convertConv2DDataFormat(l),f=N.computeConv2DInfo(c,s.shape,a,p,i,u,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:x,inHeight:b,inWidth:w,outChannels:_,outHeight:k,outWidth:E,strideHeight:T,strideWidth:F}=f,O=h-1-f.padInfo.top,M=g-1-f.padInfo.left,j=f.dataFormat==="channelsLast",W=y.computeStrides(f.inShape),U=y.computeStrides(o.shape),[Y,K,Z]=y.computeStrides(s.shape),re=W[0],X=j?W[1]:W[2],oe=j?W[2]:1,ae=j?1:W[1],ie=U[0],pe=j?U[1]:U[2],le=j?U[2]:1,ge=j?1:U[1],ye=e.makeOutput(f.inShape,"float32"),be=e.dataIdMap.get(ye.dataId).id,ke=e.dataIdMap.get(o.dataId).id,Ae=e.dataIdMap.get(s.dataId).id;return KO(ke,Ae,d,h,g,b,w,x,k,E,_,T,F,O,M,Y,K,Z,re,X,oe,ae,ie,pe,le,ge,be),ye}var XO={kernelName:Qn,backendName:"wasm",setupFunc:G9,kernelFunc:U9};var YO=Rt(eo);var N0;(function(r){r[r.bilinear=0]="bilinear",r[r.nearest=1]="nearest"})(N0||(N0={}));var ZO;function q9(r){ZO=r.wasm.cwrap(ni,null,["number","number","number","number","array","number","number","number","number","number"])}function H9(r){let{backend:e,inputs:t,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:l,boxInd:u}=t,c=l.shape[0],[p,m]=a,f=[c,p,m,i.shape[3]],d=e.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=oc({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),d=e.dataIdMap.get(h.dataId));let g=d.id,x=e.dataIdMap.get(l.dataId).id,b=e.dataIdMap.get(u.dataId).id,w=e.makeOutput(f,"float32"),_=e.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return ZO(g,x,b,c,k,p,m,N0[o],s,_),h!=null&&e.disposeData(h.dataId),w}var JO={kernelName:ni,backendName:"wasm",setupFunc:q9,kernelFunc:H9};var QO;function K9(r){QO=r.wasm.cwrap(to,null,["number","number","number","number","number","number"])}function X9(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{axis:s,exclusive:a,reverse:i}=n,l=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let u=N.getAxesPermutation([s],l),c=o;u!==null&&(c=vp({inputs:{x:o},attrs:{perm:u},backend:t}));let p=N.getInnerMostAxes(1,l)[0];N.assertAxesAreInnerMostDims("cumsum",[p],l);let m=t.makeOutput(c.shape,c.dtype),f=c.shape[p],d=t.dataIdMap.get(c.dataId).id,h=t.dataIdMap.get(m.dataId).id;QO(d,a?1:0,i?1:0,f,h,Wt[o.dtype]);let g=m;if(u!==null){let x=N.getUndoAxesPermutation(u);g=vp({inputs:{x:m},attrs:{perm:x},backend:t}),t.disposeData(c.dataId),t.disposeData(m.dataId)}return g}var eP={kernelName:to,backendName:"wasm",setupFunc:K9,kernelFunc:X9};var tP;function Y9(r){tP=r.wasm.cwrap(oi,null,["number","number","number","array","number","array","array","number","number"])}function Z9(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n;y.assert(s>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`);let i=o.shape[0],l=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],c=a==="NHWC"?o.shape[3]:o.shape[1],p=l*s,m=u*s,f=c/(s*s),d=a==="NHWC"?[i,p,m,f]:[i,f,p,m],h=e.makeOutput(d,"float32"),x=e.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),w=new Uint8Array(new Int32Array(d).buffer),_=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),k=e.dataIdMap.get(h.dataId).id;return tP(x,s,a==="NHWC"?1:0,b,o.shape.length-1,w,_,d.length,k),h}var rP={kernelName:oi,backendName:"wasm",setupFunc:Y9,kernelFunc:Z9};var nP;function J9(r){nP=r.wasm.cwrap(ro,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Q9(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s}=e,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:p}=t,m=u==null?[1,1]:u,f=N.computeConv2DInfo(o.shape,s.shape,l,m,c,p,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,x=f.padInfo.right,b=f.padInfo.bottom,w=f.padInfo.left,_=f.dilationHeight,k=f.dilationWidth,E=f.strideHeight,T=f.strideWidth,F=f.inChannels,O=f.outChannels,M=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let j=n.makeOutput(f.outShape,"float32"),W=n.dataIdMap.get(j.dataId).id;return nP(a,o.shape[0],o.shape[1],o.shape[2],i,d,h,g,x,b,w,M,_,k,E,T,F,O,W),j}var oP={kernelName:ro,backendName:"wasm",setupFunc:J9,kernelFunc:Q9};var eZ=!1,sP=wt(ai,eZ,"bool");var iP=Rt(oo);function lx(r){let{inputs:e,attrs:t,backend:n}=r,{input:o}=e,{dim:s}=t,a=o.shape.length,i=o.shape.slice(),l=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),i.splice(l,0,1),zr({inputs:{x:o},backend:n,attrs:{shape:i}})}var aP={kernelName:cs,backendName:"wasm",kernelFunc:lx};function tZ(r){let{attrs:{shape:e,value:t,dtype:n},backend:o}=r,s=o.makeOutput(e,n);return o.typedArrayFromHeap(s).fill(t),s}var lP={kernelName:ua,backendName:"wasm",kernelFunc:tZ};var uP;function rZ(r){uP=r.wasm.cwrap(ui,null,["number","number","number","number","number","number"])}function nZ(r){let{inputs:e,backend:t}=r,{image:n}=e,o=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,l,u,c]=n.shape;return uP(s,i,l,u,c,a),o}var cP={kernelName:ui,backendName:"wasm",kernelFunc:nZ,setupFunc:rZ};var pP=Rt(so);var oZ=!1,mP=wt(io,oZ);var fP;function sZ(r){fP=r.wasm.cwrap(ao,null,["number","number","number","number","number","number","number"])}function iZ(r){let{backend:e,inputs:t,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:l,scale:u}=t,c=e.dataIdMap.get(s.dataId).id,p=e.dataIdMap.get(a.dataId).id,m=e.dataIdMap.get(i.dataId).id,f=l!=null?e.dataIdMap.get(l.dataId).id:0,d=u!=null?e.dataIdMap.get(u.dataId).id:0,h=e.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=e.dataIdMap.get(h.dataId).id;return fP(c,p,m,f,d,o,g),h}var dP={kernelName:ao,backendName:"wasm",setupFunc:sZ,kernelFunc:iZ};var hP;function aZ(r){hP=r.wasm.cwrap(ks,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lZ(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=N.computeConv2DInfo(o.shape,s.shape,l,c,u,m),g=_l[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(s.dataId).id,w=h.outChannels,_=0;if(a!=null){let le=n.dataIdMap.get(a.dataId);if(le.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${le.shape.length}.`);if(le.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${le.shape}) does not match the number of output channels (${w})`);_=le.id}let k=h.filterHeight,E=h.filterWidth,T=h.padInfo.top,F=h.padInfo.right,O=h.padInfo.bottom,M=h.padInfo.left,j=h.dilationHeight,W=h.dilationWidth,U=h.strideHeight,Y=h.strideWidth,K=h.inChannels,Z=h.padInfo.type==="SAME"?1:0,re=h.batchSize,X=h.inHeight,oe=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ae=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(ae.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return hP(x,re,X,oe,b,k,E,_,T,F,O,M,Z,j,W,U,Y,K,w,g,pe,d||0,ie),ae}var gP={kernelName:ks,backendName:"wasm",setupFunc:aZ,kernelFunc:lZ};var xP;function uZ(r){xP=r.wasm.cwrap(Cs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function cZ(r){let{inputs:e,attrs:t,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=t,h=N.computeConv2DInfo(o.shape,s.shape,l,c,u,m,!0),g=_l[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(s.dataId).id,w=h.outChannels,_=0;if(a!=null){let le=n.dataIdMap.get(a.dataId);if(le.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${le.shape.length}.`);if(le.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${le.shape}) does not match the number of output channels (${w})`);_=le.id}let k=h.filterHeight,E=h.filterWidth,T=h.padInfo.top,F=h.padInfo.right,O=h.padInfo.bottom,M=h.padInfo.left,j=h.dilationHeight,W=h.dilationWidth,U=h.strideHeight,Y=h.strideWidth,K=h.inChannels,Z=h.padInfo.type==="SAME"?1:0,re=h.batchSize,X=h.inHeight,oe=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ae=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(ae.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return xP(x,re,X,oe,b,k,E,_,T,F,O,M,Z,j,W,U,Y,K,w,g,pe,d||0,ie),ae}var yP={kernelName:Cs,backendName:"wasm",setupFunc:uZ,kernelFunc:cZ};var bP;function pZ(r){bP=r.wasm.cwrap(ci,null,["number","number","number","number","number","number","array","number"])}function mZ(r){let{backend:e,inputs:t}=r,{params:n,indices:o}=t,[s,a,i,l]=eg.prepareAndValidate(n,o),u=e.makeOutput(s,n.dtype);if(a===0)return u;let c=o.shape,p=c[c.length-1],f=e.dataIdMap.get(n.dataId).id,h=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),x=e.dataIdMap.get(u.dataId).id;return bP(f,Wt[n.dtype],h,a,p,i,g,x),u}var wP={kernelName:ci,backendName:"wasm",setupFunc:pZ,kernelFunc:mZ};var _P;function fZ(r){_P=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function dZ(r){let{backend:e,inputs:t,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,l=y.parseAxisParam(a,o.shape)[0],u=N.segment_util.collectGatherOpShapeInfo(o,s,l,i),c=zr({inputs:{x:o},attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]},backend:e}),p=y.sizeFromShape(s.shape),m=zr({inputs:{x:s},attrs:{shape:[u.batchSize,p/u.batchSize]},backend:e}),f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize],d=e.makeOutput(f,o.dtype);if(y.sizeFromShape(o.shape)===0)return d;let h=c.shape.length-1,x=e.dataIdMap.get(c.dataId).id,w=e.dataIdMap.get(m.dataId).id,_=e.dataIdMap.get(d.dataId).id,k=new Uint8Array(new Int32Array(y.computeStrides(c.shape)).buffer),E=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer);return _P(x,Wt[o.dtype],k,h,w,u.batchSize,E,_),d.shape=u.outputShape,d}var vP={kernelName:ps,backendName:"wasm",setupFunc:fZ,kernelFunc:dZ};var hZ=!1,kP=wt(pi,hZ,"bool");var gZ=!1,CP=wt(lo,gZ,"bool");var IP;function xZ(r){IP=r.wasm.cwrap(uo,null,["number","number","number"])}function yZ(r){let{inputs:{x:e},attrs:{alpha:t},backend:n}=r,o=n.dataIdMap.get(e.dataId).id,s=n.makeOutput(e.shape,e.dtype);if(y.sizeFromShape(e.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;IP(o,t,a)}return s}var SP={kernelName:uo,backendName:"wasm",setupFunc:xZ,kernelFunc:yZ};var bZ=!1,NP=wt(hi,bZ,"bool");var wZ=!1,TP=wt(gi,wZ,"bool");var EP=Rt(co);var _Z=!1,AP=wt(yi,_Z,"bool");var DP;function vZ(r){DP=r.wasm.cwrap(po,null,["number, number, number"])}function kZ(r){let{backend:e,inputs:t,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=t,l=e.dataIdMap.get(a.dataId).id,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Yo(a,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;u=c,l=w}let d=u.shape.length;N.assertAxesAreInnerMostDims("max",p,d);let[h,g]=N.computeOutAndReduceShapes(u.shape,p),x=y.sizeFromShape(g),b=e.makeOutput(h,a.dtype);if(y.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;DP(l,x,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var $P={kernelName:po,backendName:"wasm",setupFunc:vZ,kernelFunc:kZ};var CZ=!1,RP=wt(mo,CZ);var FP;function IZ(r){FP=r.wasm.cwrap(fo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function SZ(r){let{inputs:e,attrs:t,backend:n}=r,o=e.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=t,c=N.computePool2DInfo(o.shape,a,i,1,l,u),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,x=c.dilationHeight,b=c.dilationWidth,w=c.strideHeight,_=c.strideWidth,k=c.inChannels,E=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let T=n.makeOutput(c.outShape,"float32"),F=n.dataIdMap.get(T.dataId).id;return FP(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,x,b,w,_,k,E,F),T}var OP={kernelName:fo,backendName:"wasm",setupFunc:IZ,kernelFunc:SZ};var PP;function NZ(r){PP=r.wasm.cwrap(ho,null,["number, number, number"])}function TZ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Yo(a,o,e),d=p;if(f){let _=e.dataIdMap.get(c.dataId).id;_!==i&&(u=c,l=_,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("mean",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),x=y.sizeFromShape(g),b=u;u.dtype!=="float32"&&(b=oc({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),l=e.dataIdMap.get(b.dataId).id);let w=e.makeOutput(h,"float32");if(y.sizeFromShape(u.shape)!==0){let _=e.dataIdMap.get(w.dataId).id;PP(l,x,_)}if(f&&e.disposeData(c.dataId),s){let _=N.expandShapeToKeepDim(w.shape,m);w.shape=_}return u.dtype!=="float32"&&e.disposeData(b.dataId),w}var MP={kernelName:ho,backendName:"wasm",setupFunc:NZ,kernelFunc:TZ};var LP;function EZ(r){LP=r.wasm.cwrap(go,null,["number, number, number"])}function AZ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Yo(a,o,e);if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w)}let d=u.shape.length;N.assertAxesAreInnerMostDims("min",p,d);let[h,g]=N.computeOutAndReduceShapes(u.shape,p),x=y.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;LP(l,x,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var zP={kernelName:go,backendName:"wasm",setupFunc:EZ,kernelFunc:AZ};var DZ=!1,BP=wt(xo,DZ);var $Z=!0,VP=wt(yo,$Z);var WP=Rt(fs);function kp(r,e){let t=new Int32Array(r.wasm.HEAPU8.buffer,e,4),n=t[0],o=t[1],s=t[2],a=t[3];return r.wasm._free(e),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var jP;function RZ(r){jP=r.wasm.cwrap(_i,"number",["number","number","number","number","number"])}function FZ(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:l}=t,u=e.dataIdMap.get(i.dataId).id,c=e.dataIdMap.get(l.dataId).id,p=jP(u,c,s,o,a),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=kp(e,p);return e.wasm._free(d),e.wasm._free(h),e.makeOutput([f],"int32",m)}var GP={kernelName:_i,backendName:"wasm",setupFunc:RZ,kernelFunc:FZ};var UP;function OZ(r){UP=r.wasm.cwrap(vi,"number",["number","number","number","number","number","bool"])}function PZ(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:l,scores:u}=t,c=e.dataIdMap.get(l.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=UP(c,p,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=kp(e,m);e.wasm._free(h);let x=e.makeOutput([d],"int32",f),b=e.makeOutput([],"int32",g);return[x,b]}var qP={kernelName:vi,backendName:"wasm",setupFunc:OZ,kernelFunc:PZ};var HP;function MZ(r){HP=r.wasm.cwrap(ki,"number",["number","number","number","number","number","number"])}function LZ(r){let{backend:e,inputs:t,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:l,scores:u}=t,c=e.dataIdMap.get(l.dataId).id,p=e.dataIdMap.get(u.dataId).id,m=HP(c,p,s,o,a,i),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=kp(e,m);e.wasm._free(g);let x=e.makeOutput([d],"int32",f),b=e.makeOutput([d],"float32",h);return[x,b]}var KP={kernelName:ki,backendName:"wasm",setupFunc:MZ,kernelFunc:LZ};var zZ=!1,XP=wt(wi,zZ,"bool");var YP;function BZ(r){YP=r.wasm.cwrap(bo,null,["number","number","number","number","number"])}function VZ(r){let{inputs:e,backend:t,attrs:n}=r,{indices:o}=e,{depth:s,onValue:a,offValue:i}=n,l=t.makeOutput([...o.shape,s],"int32"),u=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(o.dataId).id;return YP(p,s,a,i,u),l}var ZP={kernelName:bo,backendName:"wasm",setupFunc:BZ,kernelFunc:VZ};function WZ(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(1),n}var JP={kernelName:ds,backendName:"wasm",kernelFunc:WZ};function jZ(r){let{inputs:e,backend:t,attrs:n}=r,{axis:o}=n;if(e.length===1)return lx({inputs:{input:e[0]},backend:t,attrs:{dim:o}});let s=e[0].shape,a=e[0].dtype;e.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=e.map(l=>lx({inputs:{input:l},backend:t,attrs:{dim:o}}));return S0({inputs:i,backend:t,attrs:{axis:o}})}var QP={kernelName:hs,backendName:"wasm",kernelFunc:jZ};var eM;function GZ(r){eM=r.wasm.cwrap(wo,null,["number","array","number","number","array","array","number","number"])}function UZ(r){let{inputs:{x:e},backend:t,attrs:{paddings:n,constantValue:o}}=r,s=n.map((d,h)=>d[0]+e.shape[h]+d[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(s,e.dtype),l=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),c=n.map(d=>d[0]),p=n.map(d=>d[1]),m=new Uint8Array(new Int32Array(c).buffer),f=new Uint8Array(new Int32Array(p).buffer);return eM(a,u,e.shape.length,Wt[e.dtype],m,f,o,l),i}var tM={kernelName:wo,backendName:"wasm",kernelFunc:UZ,setupFunc:GZ};var qZ=!1,rM=wt(_o,qZ);var nM;function HZ(r){nM=r.wasm.cwrap(vo,null,["number","number","number"])}function KZ(r){let{inputs:e,backend:t}=r,{x:n,alpha:o}=e,s=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,i=t.makeOutput(n.shape,"float32"),l=t.dataIdMap.get(i.dataId).id;return nM(s,a,l),i}var oM={kernelName:vo,backendName:"wasm",setupFunc:HZ,kernelFunc:KZ};var sM;function XZ(r){sM=r.wasm.cwrap(Ci,null,["number","number","number","number"])}function YZ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Yo(a,o,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("prod",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),x=y.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;sM(l,x,Wt[b.dtype],w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var iM={kernelName:Ci,backendName:"wasm",setupFunc:XZ,kernelFunc:YZ};var ZZ=r=>{let{backend:e,attrs:t}=r,{start:n,stop:o,step:s,dtype:a}=t,i=ff(n,o,s,a),l=e.makeOutput([i.length],a);return e.typedArrayFromHeap(l).set(i),l},aM={kernelName:fa,backendName:"wasm",kernelFunc:ZZ};var JZ=!0,lM=wt(no,JZ);var uM=Rt(ko);var cM=Rt(Io);var pM;function QZ(r){pM=r.wasm.cwrap(Co,null,["number","number","number","number","number","number","number","number","number","number"])}function eJ(r){let{backend:e,inputs:t,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[l,u]=i,[c,p,m,f]=o.shape,d=[c,l,u,f],h=e.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=oc({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),h=e.dataIdMap.get(g.dataId));let x=h.id,b=e.makeOutput(d,"float32");if(y.sizeFromShape(o.shape)===0)return b;let w=e.dataIdMap.get(b.dataId).id;return pM(x,c,p,m,f,l,u,s?1:0,a?1:0,w),g!=null&&e.disposeData(g.dataId),b}var mM={kernelName:Co,backendName:"wasm",setupFunc:QZ,kernelFunc:eJ};var fM;function tJ(r){fM=r.wasm.cwrap(So,null,["number","array","number","array","number","number"])}function rJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,{dims:s}=n,a=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return nc({inputs:{x:o},backend:t});let i=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(o.shape).buffer);return fM(l,c,a.length,p,o.shape.length,u),zr({inputs:{x:i},attrs:{shape:o.shape},backend:t})}var dM={kernelName:So,backendName:"wasm",kernelFunc:rJ,setupFunc:tJ};var hM;function nJ(r){hM=r.wasm.cwrap(Fi,null,["number","number","number","number","number","number","number","number","array","number","number"])}function oJ(r){let{inputs:e,backend:t,attrs:n}=r,{image:o}=e,{radians:s,fillValue:a,center:i}=n,l=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(l.dataId).id,[p,m,f,d]=o.shape,[h,g]=N.getImageCenter(i,m,f),x=a===0,b=255,w=typeof a=="number"?[a,a,a,x?0:b]:[...a,b],_=new Uint8Array(new Int32Array(w).buffer);return hM(u,p,m,f,d,s,h,g,_,w.length,c),l}var gM={kernelName:Fi,backendName:"wasm",kernelFunc:oJ,setupFunc:nJ};var xM=Rt(No);var yM=Rt(To);var bM;function sJ(r){bM=r.wasm.cwrap(Si,null,["number","number","number","number","number","number","array","number","number"])}function iJ(r){let{backend:e,inputs:t,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,i=e.makeOutput(a,s.dtype);if(y.sizeFromShape(a)===0)return i;let{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=tg.calculateShapes(s,o,a),d=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(s.dataId).id,x=new Uint8Array(new Int32Array(p).buffer),b=e.dataIdMap.get(i.dataId).id;return bM(d,g,Wt[s.dtype],l,u,c,x,m,b),i}var wM={kernelName:Si,backendName:"wasm",setupFunc:sJ,kernelFunc:iJ};var _M;function aJ(r){_M=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function lJ(r){let{inputs:e,backend:t}=r,{condition:n,t:o,e:s}=e,a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=t.makeOutput(o.shape,o.dtype),c=t.dataIdMap.get(u.dataId).id,p=n.shape.length,m=o.shape.length,f=p===0||p>1||m===1?1:y.sizeFromShape(o.shape.slice(1));return _M(a,i,l,f,c),u}var vM={kernelName:xs,backendName:"wasm",kernelFunc:lJ,setupFunc:aJ};var kM;function uJ(r){kM=r.wasm.cwrap(Ao,null,["number","number"])}function cJ(r){let{backend:e,inputs:{x:t}}=r,n=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),s=e.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||kM(n,s),o}var CM={kernelName:"Sigmoid",backendName:"wasm",setupFunc:uJ,kernelFunc:cJ};var IM=Rt(Eo);function sc(r){let{inputs:{x:e},attrs:{begin:t,size:n},backend:o}=r,[s,a]=ir.parseSliceParams(e,t,n),i=ir.isSliceContinous(e.shape,s,a),l=o.readSync(e.dataId),u=o.makeOutput(a,e.dtype),c=y.computeStrides(e.shape),p=o.dataIdMap.get(u.dataId);if(i){let d=ir.computeFlatOffset(s,c);return e.dtype==="string"?p.stringBytes=l.slice(d,d+y.sizeFromShape(a)):o.typedArrayFromHeap(u).set(l.subarray(d,d+y.sizeFromShape(a))),u}if(e.dtype==="string"){let d=df(l,s,a,e.shape,e.dtype);return p.stringBytes=d,u}let m=o.typedArrayFromHeap(u),f=e.shape.length;if(f===2)pJ(l,c[0],m,s,a);else if(f===3)mJ(l,c[0],c[1],m,s,a);else if(f===4)fJ(l,c[0],c[1],c[2],m,s,a);else{let d=df(l,s,a,e.shape,e.dtype);m.set(d)}return u}function pJ(r,e,t,n,o){let s=0,a=n[0],i=n[1],l=a+o[0];for(let u=a;u<l;u++){let c=u*e+i;t.set(r.subarray(c,c+o[1]),s),s+=o[1]}}function mJ(r,e,t,n,o,s){let a=0,i=o[0],l=o[1],u=o[2],c=i+s[0],p=l+s[1];for(let m=i;m<c;m++)for(let f=l;f<p;f++){let d=m*e+f*t+u;n.set(r.subarray(d,d+s[2]),a),a+=s[2]}}function fJ(r,e,t,n,o,s,a){let i=0,l=s[0],u=s[1],c=s[2],p=l+a[0],m=u+a[1],f=c+a[2],d=s[3];for(let h=l;h<p;h++)for(let g=u;g<m;g++)for(let x=c;x<f;x++){let b=h*e+g*t+x*n+d;o.set(r.subarray(b,b+a[3]),i),i+=a[3]}}var SM={kernelName:ys,backendName:"wasm",kernelFunc:sc};var NM;function dJ(r){NM=r.wasm.cwrap(Ro,null,["number","number","number","number"])}function hJ(r){let{backend:e,inputs:{logits:t},attrs:{dim:n}}=r,o=e.dataIdMap.get(t.dataId).id,s=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(s.dataId).id,i=t.shape[n],l=y.sizeFromShape(t.shape)/i;return y.sizeFromShape(s.shape)===0||NM(o,a,i,l),s}var TM={kernelName:Ro,backendName:"wasm",setupFunc:dJ,kernelFunc:hJ};function gJ(r){let{inputs:e,attrs:t,backend:n}=r,{x:o}=e,{numOrSizeSplits:s,axis:a}=t,i=y.parseAxisParam(a,o.shape)[0],l=N.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),c=o.shape.slice();return l.map(p=>{let m=[...c];m[i]=p;let f=sc({inputs:{x:o},attrs:{begin:u,size:m},backend:n});return u[i]+=p,f})}var EM={kernelName:bs,backendName:"wasm",kernelFunc:gJ};var AM=Rt(Do);var DM=Rt(ga);var xJ=!0,$M=wt(Fo,xJ);var RM;function yJ(r){RM=r.wasm.cwrap(On,null,["number","number","number"])}function bJ(r){let{backend:e,inputs:t,attrs:n}=r,{alpha:o}=n,{x:s}=t,a=e.dataIdMap.get(s.dataId).id,i=e.makeOutput(s.shape,s.dtype),l=e.dataIdMap.get(i.dataId).id;return RM(a,o,l),i}var FM={kernelName:On,backendName:"wasm",setupFunc:yJ,kernelFunc:bJ};var OM;function wJ(r){OM=r.wasm.cwrap(Di,null,["number","array","number","array","array","array","array","array","number","number"])}function _J(r){let{backend:e,inputs:t,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i}=n;i==null&&(i=new Array(s.length));let{beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,f=N.slice_util.maskToAxes(c);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(c!==0&&p!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(c!==0&&m!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let d=o.shape.length-s.length,h=N.slice_util.maskToAxes(p),g=o.shape.slice();h.forEach(M=>{s[M]=0,a[M]=1,g.splice(M,0,1)});let x=zr({inputs:{x:o},attrs:{shape:g},backend:e}),{begin:b,end:w,strides:_}=N.slice_util.getNormalizedAxes(x.shape,f,d,s,a,i,l,u,c);s=b,a=w,i=_;let k=N.slice_util.maskToAxes(m);k.forEach(M=>{a[M]=s[M]+1,i[M]=1});let E=N.slice_util.computeOutShape(s,a,i),T=E.filter((M,j)=>k.indexOf(j)===-1);if(i.every(M=>M===1)){let M=sc({inputs:{x:o},attrs:{begin:s,size:E},backend:e});return zr({inputs:{x:M},attrs:{shape:T},backend:e})}let O=e.makeOutput(T,"float32");if(!T.some(M=>M===0)){let M=e.dataIdMap.get(x.dataId).id,j=new Uint8Array(new Int32Array(y.computeStrides(x.shape)).buffer),W=new Uint8Array(new Int32Array(s).buffer),U=new Uint8Array(new Int32Array(a).buffer),Y=new Uint8Array(new Int32Array(i).buffer),K=new Uint8Array(new Int32Array(T).buffer),Z=new Uint8Array(new Int32Array(y.computeStrides(T)).buffer),re=e.dataIdMap.get(O.dataId).id;OM(M,j,x.shape.length,W,U,Y,K,Z,T.length,re)}return zr({inputs:{x:O},attrs:{shape:T},backend:e})}var PM={kernelName:Di,backendName:"wasm",setupFunc:wJ,kernelFunc:_J};var vJ=!0,MM=wt(Oo,vJ);var LM;function kJ(r){LM=r.wasm.cwrap($o,null,["number, number, number"])}function CJ(r){let{backend:e,inputs:t,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=t,i=e.dataIdMap.get(a.dataId).id,l=i,u=a,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Yo(a,o,e),d=p;if(f){let w=e.dataIdMap.get(c.dataId).id;w!==i&&(u=c,l=w,d=N.getInnerMostAxes(d.length,u.shape.length))}N.assertAxesAreInnerMostDims("sum",d,u.shape.length);let[h,g]=N.computeOutAndReduceShapes(u.shape,d),x=y.sizeFromShape(g),b=e.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let w=e.dataIdMap.get(b.dataId).id;LM(l,x,w)}if(f&&e.disposeData(c.dataId),s){let w=N.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var zM={kernelName:$o,backendName:"wasm",setupFunc:kJ,kernelFunc:CJ};var BM=Rt(Po);var VM;function IJ(r){VM=r.wasm.cwrap(_n,null,["number","array","number","array","number","number"])}function SJ(r){let{inputs:e,backend:t,attrs:n}=r,{x:o}=e,s=t.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let m=0;m<i.length;m++)i[m]=o.shape[m]*a[m];let l=new Uint8Array(new Int32Array(o.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),c=t.makeOutput(i,o.dtype),p=t.dataIdMap.get(c.dataId).id;return VM(s,l,o.shape.length,u,i.length,Wt[c.dtype],p),c}var WM={kernelName:_n,backendName:"wasm",setupFunc:IJ,kernelFunc:SJ};var jM;function NJ(r){jM=r.wasm.cwrap(Ri,null,["number","array","number","number","number","bool","number","number"])}var TJ=({inputs:r,backend:e,attrs:t})=>{let{x:n}=r,{k:o,sorted:s}=t,a=e.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),l=n.shape.slice();l[l.length-1]=o;let u=e.makeOutput(l,n.dtype),c=e.dataIdMap.get(u.dataId).id,p=e.makeOutput(l,"int32"),m=e.dataIdMap.get(p.dataId).id;return jM(a,i,n.shape.length,Wt[n.dtype],o,s,c,m),[u,p]},GM={kernelName:Ri,backendName:"wasm",setupFunc:NJ,kernelFunc:TJ};function EJ(r){let{inputs:e,backend:t,attrs:n}=r,{value:o}=e,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,l=new Array(i-1),u=0;for(let f=0;f<i;f++)f!==s&&(l[u++]=o.shape[f]);let c=new Array(a),p=new Array(i).fill(0),m=o.shape.slice();m[s]=1;for(let f=0;f<c.length;f++)p[s]=f,c[f]=sc({inputs:{x:o},attrs:{begin:p,size:m},backend:t});return c.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:l}))}var UM={kernelName:ws,backendName:"wasm",kernelFunc:EJ};function AJ(r){let{inputs:{x:e},backend:t}=r,n=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(n).fill(0),n}var qM={kernelName:_s,backendName:"wasm",kernelFunc:AJ};var DJ=[TO,EO,DO,PO,LO,VO,WO,GO,UO,HO,XO,YO,JO,eP,rP,oP,sP,iP,aP,lP,cP,pP,mP,NO,dP,gP,yP,wP,vP,kP,CP,$O,SP,NP,TP,EP,AP,$P,RP,OP,MP,zP,BP,VP,WP,GP,qP,KP,XP,ZP,JP,QP,tM,rM,oM,iM,aM,lM,uM,cM,zO,mM,dM,gM,yM,xM,wM,vM,CM,IM,SM,TM,EM,AM,DM,$M,FM,PM,MM,zM,BM,WM,GM,FO,UM,qM];for(let r of DJ)nl(r);var T0=G();T0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));T0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(T0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(r){return!1}});var R0=Ec(XM());var YM='var threadInfoStruct=0;var selfThreadId=0;var parentThreadId=0;var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:selfThreadId})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["DYNAMIC_BASE"]=e.data.DYNAMIC_BASE;Module["DYNAMICTOP_PTR"]=e.data.DYNAMICTOP_PTR;Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}Module=WasmBackendModuleThreadedSimd(Module);postMessage({"cmd":"loaded"})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;threadInfoStruct=e.data.threadInfoStruct;Module["__register_pthread_ptr"](threadInfoStruct,0,0);selfThreadId=e.data.selfThreadId;parentThreadId=e.data.parentThreadId;var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["dynCall_ii"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){Atomics.store(Module["HEAPU32"],threadInfoStruct+4>>2,ex instanceof Module["ExitStatus"]?ex.status:-2);Atomics.store(Module["HEAPU32"],threadInfoStruct+0>>2,1);Module["_emscripten_futex_wake"](threadInfoStruct+0,2147483647);if(!(ex instanceof Module["ExitStatus"]))throw ex}}}else if(e.data.cmd==="cancel"){if(threadInfoStruct){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(threadInfoStruct){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}';var JM=Ec(ZM());var px=class extends Us{constructor(e){super();this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new el(this,Ss())}write(e,t,n){let o={};return this.move(o,e,t,n),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}move(e,t,n,o){let s=this.dataIdNextNumber++;if(o==="string"){let u=t;this.dataIdMap.set(e,{id:s,stringBytes:u,shape:n,dtype:o,memoryOffset:null});return}let a=y.sizeFromShape(n),i=a*y.bytesPerElement(o),l=this.wasm._malloc(i);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:o}),this.wasm.tfjs.registerTensor(s,a,l),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,i),l)}async read(e){return this.readSync(e)}readSync(e){let{memoryOffset:t,dtype:n,shape:o,stringBytes:s}=this.dataIdMap.get(e);if(n==="string")return s;let a=this.wasm.HEAPU8.slice(t,t+y.sizeFromShape(o)*y.bytesPerElement(n));return $J(a.buffer,n)}disposeData(e){let t=this.dataIdMap.get(e);this.wasm._free(t.memoryOffset),this.wasm.tfjs.disposeData(t.id),this.dataIdMap.delete(e)}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let o;if(n==null)o=this.write(null,e,t);else{o={};let s=this.dataIdNextNumber++;this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:e,dtype:t});let a=y.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,a,n)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),a=y.sizeFromShape(e);switch(t){case"float32":return new Float32Array(o,s,a);case"int32":return new Int32Array(o,s,a);case"bool":return new Uint8Array(o,s,a);default:throw new Error(`Unknown dtype ${t}`)}}};function RJ(r){return(e,t)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,e).then(s=>{t(s.instance)})})}),{})}function QM(r,e,t){if(mx!=null)return mx;let n="tfjs-backend-wasm.wasm";return r&&e?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Of!=null&&Of[n]!=null?Of[n]:t+n}async function eL(){let[r,e]=await Promise.all([G().getAsync("WASM_HAS_SIMD_SUPPORT"),G().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,n)=>{let o={};o.locateFile=(l,u)=>{if(l.endsWith(".worker.js")){let c=YM,p=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(p)}return l.endsWith(".wasm")?QM(r,e,Pf!=null?Pf:u):u+l},F0&&(o.instantiateWasm=RJ(QM(r,e,Pf!=null?Pf:"")));let s;e&&r&&mx==null?(s=R0.default(o),s.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+R0.default.toString()],{type:"text/javascript"})):s=JM.default(o);let a=null;s.tfjs={init:s.cwrap("init",null,[]),registerTensor:s.cwrap("register_tensor",null,["number","number","number"]),disposeData:s.cwrap("dispose_data",a,["number"]),dispose:s.cwrap("dispose",a,[])};let i=!1;s.onRuntimeInitialized=()=>{i=!0,Mf=!1,t({wasm:s})},s.onAbort=()=>{if(i||Mf)return;Mf=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})}})}function $J(r,e){switch(e){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${e}`)}}var FJ=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],mx=null,Pf=null,Of={},Mf=!1,F0=!1;function OJ(r,e=!1){if(Pt("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Mf)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");mx=r,F0=e}function PJ(r,e=!1){if(Mf)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")Pf=r;else{Of=r;let t=FJ.filter(n=>Of[n]==null);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}F0=e}var O0="2.8.5";var MJ=2;wu("wasm",async()=>{let{wasm:r}=await eL();return new px(r)},MJ);var V0={};Ze(V0,{maxNorm:()=>zJ,minMaxNorm:()=>WJ,nonNeg:()=>VJ,unitNorm:()=>BJ});var P0;function er(){return P0==null&&(P0=hw().epsilon()),P0}function Zr(){return"channelsLast"}var Nn=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Nn.prototype)}},Br=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Br.prototype)}},B=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,B.prototype)}},Te=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Te.prototype)}},Lf=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,Lf.prototype)}},M0=class extends Error{constructor(e){super(e);Object.setPrototypeOf(this,M0.prototype)}};function Zo(r,e){if(Array.isArray(r)){let t=[];for(let n=0;n<e;n++)t=t.concat(r);return t}else{let t=new Array(e);return t.fill(r),t}}function Wn(r,e){if(!r)throw new Lf(e)}function L0(r,e){let t=0;for(let n of r)n===e&&t++;return t}function xr(r){return r.length===1?r[0]:r}function _t(r){return Array.isArray(r)?r:[r]}function Jo(r){let t=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ga(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}var Qo={};function Ip(r){if(r==null)return null;let e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function z0(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(e=>z0(e));else{let e=Object.keys(r);for(let t of e){let n=r[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[t]=n.value:z0(n))}}}function Ui(r,e={},t={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in t)a=t[s];else if(s in Qo)a=Qo[s];else if(a=e[s],a==null)throw new B(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new B(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,l;if(a in t?[i,l]=t[a]:a in Qo?[i,l]=Qo.className:a in e&&([i,l]=e[a]),i==null)throw new B(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let f of Object.keys(Qo))u[f]=Qo[f];for(let f of Object.keys(t))u[f]=t[f];let c=s.config;c.customObjects=u;let p=Object.assign({},Qo);for(let f of Object.keys(t))Qo[f]=t[f];z0(s.config);let m=l(i,s.config,t,o);return Qo=Object.assign({},p),m}else{let u=Object.assign({},Qo);for(let p of Object.keys(t))Qo[p]=t[p];let c=new i(s.config);return Qo=Object.assign({},u),c}}}function LJ(r,e){return r<e?-1:r>e?1:0}function zf(r,e){return-1*LJ(r,e)}function es(r){if(r==null)return r;let e=[];for(let t of r)e.indexOf(t)===-1&&e.push(t);return e}function tL(r){if(r==null)throw new B(`Invalid value in obj: ${JSON.stringify(r)}`);for(let e in r)if(r.hasOwnProperty(e))return!1;return!0}function qi(r,e,t){if(t!=null&&r.indexOf(t)<0)throw new B(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function fx(r,e,t=0,n=Infinity){return Wn(t>=0),Wn(n>=t),Array.isArray(r)&&r.length>=t&&r.length<=n&&r.every(o=>typeof o===e)}function Kt(r,e){Array.isArray(r)?(y.assert(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,n)=>Kt(t,`element ${n+1} of ${e}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${rL(r)}.`)}function rL(r){return r===null?"null":Array.isArray(r)?"["+r.map(e=>rL(e)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function nL(r,e){let t=y.now(),n;return(...s)=>{let a=y.now();return a-t<e||(t=a,n=r(...s)),n}}function dx(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}function B0(r,e){return V(()=>bt(we(P(r,r),e,!0)))}var Sp=class extends ee.Serializable{getConfig(){return{}}},Bf=class extends Sp{constructor(e){super();this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=B0(e,this.axis),n=ar(t,0,this.maxValue);return P(e,fe(n,Q(er(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Bf.className="MaxNorm";ee.registerClass(Bf);var Vf=class extends Sp{constructor(e){super();this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>fe(e,Q(er(),B0(e,this.axis))))}getConfig(){return{axis:this.axis}}};Vf.className="UnitNorm";ee.registerClass(Vf);var Wf=class extends Sp{apply(e){return Er(e)}};Wf.className="NonNeg";ee.registerClass(Wf);var jf=class extends Sp{constructor(e){super();this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{let t=B0(e,this.axis),n=Q(P(this.rate,ar(t,this.minValue,this.maxValue)),P(1-this.rate,t));return P(e,fe(n,Q(er(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};jf.className="MinMaxNorm";ee.registerClass(jf);var oL={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zt(r){return Ip(r)}function sL(r,e={}){return Ui(r,ee.SerializationMap.getMap().classNameMap,e,"constraint")}function Bt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in oL?oL[r]:r,config:{}};return sL(t)}else return r instanceof Sp?r:sL(r)}function zJ(r){return new Bf(r)}function BJ(r){return new Vf(r)}function VJ(){return new Wf}function WJ(r){return new jf(r)}var q0={};Ze(q0,{constant:()=>YJ,glorotNormal:()=>nQ,glorotUniform:()=>rQ,heNormal:()=>oQ,heUniform:()=>sQ,identity:()=>eQ,leCunNormal:()=>iQ,leCunUniform:()=>aQ,ones:()=>XJ,orthogonal:()=>lQ,randomNormal:()=>JJ,randomUniform:()=>ZJ,truncatedNormal:()=>QJ,varianceScaling:()=>tQ,zeros:()=>KJ});var iL=["channelsFirst","channelsLast"],aL=["nearest","bilinear"],lL=["valid","same","causal"],uL=["max","avg"],cL=["sum","mul","concat","ave"];var Np=new Map;function Ft(r){qi(iL,"DataFormat",r)}function pL(r){qi(aL,"InterpolationFormat",r)}function Jr(r){qi(lL,"PaddingMode",r)}function W0(r){qi(uL,"PoolMode",r)}var Gf=[],mL="/";function Ms(r,e){Gf.push(r);try{let t=e();return Gf.pop(),t}catch(t){throw Gf.pop(),t}}function jJ(){return Gf.length===0?"":Gf.join(mL)+mL}function hx(r){if(!fL(r))throw new Error("Not a valid tensor name: '"+r+"'");return jJ()+r}function gx(r){if(!fL(r))throw new Error("Not a valid tensor name: '"+r+"'");Np.has(r)||Np.set(r,0);let e=Np.get(r);if(Np.set(r,Np.get(r)+1),e>0){let t=`${r}_${e}`;return Np.set(t,1),t}else return r}var GJ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function fL(r){return!!r.match(GJ)}function dL(r){return r===parseInt(r.toString(),10)}function ts(r,e,t){e==null&&(e=0),t==null&&(t=r.length);let n=1;for(let o=e;o<t;++o)n*=r[o];return n}function hL(r){return r=Array.isArray(r)?new Float32Array(r):r,Gt(r)}function ic(r){return zi(hL(r)).dataSync()[0]}function Ls(r){return ur(hL(r)).dataSync()[0]}function Vr(r,e){if(e<r)throw new B(`end (${e}) < begin (${r}) is forbidden.`);let t=[];for(let n=r;n<e;++n)t.push(n);return t}function Ua(r,e){return r.asType(e)}function qa(r,e=-1){let t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),r.reshape(t)}function gL(r,e){return V(()=>{if(r.shape.length!==2)throw new B(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let t=qa(r,1);return xx(t,[1,e,1])})}function xL(r){let e=[ts(r.shape)];return r.reshape(e)}function yL(r){if(r.rank<=1)throw new B(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let e=[r.shape[0],ts(r.shape,1)];return r.reshape(e)}function Ha(r,e,t){return V(()=>{switch(r.rank){case 1:return Jm(r,e,t);case 2:return fg(r,[e,0],[t,r.shape[1]]);case 3:return Qm(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return Qc(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Oe(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Oe(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new B(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function j0(r,e,t){return V(()=>{switch(r.rank){case 1:return Jm(r,e,t);case 2:return fg(r,[0,e],[r.shape[0],t]);case 3:return Qm(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return Qc(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Uf(r,e,t,n){return V(()=>{switch(r.rank){case 1:return Jm(r,e,t);case 2:switch(n){case 1:return Ha(r,e,t);case 2:return j0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return Ha(r,e,t);case 2:return Qm(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return j0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return Ha(r,e,t);case 2:return Qc(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return Qc(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return j0(r,e,t);default:throw new B(`The axis is not within the rank of the tensor ${n}`)}default:throw new B(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Tp(r,e=-1){let t;return e<0&&(t=r[0].rank,t!==0?e=t:e=0),e===r[0].rank&&(e=-1),et(r,e)}function G0(r,e){switch(r.rank){case 1:return Cw([r,e]);case 2:return Iw([r,e],0);case 3:return Sw([r,e],0);case 4:return Nw([r,e],0);default:throw new B(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function xx(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new B(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return zn(r,e)}function Ep(r,e=0,t=1,n,o){return mg(r,e,t,n,o)}function rs(r,e,t,n){if(r.rank<2||e.rank<2)throw new Te(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3){let o=r.shape.slice(-1)[0],s=e.shape.slice(-2)[0];if(o!==s)throw new Te(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`)}if(r.rank===2&&e.rank===2){let o=!1,s=!1;return Wo.matMul({a:r,b:e,transposeA:o,transposeB:s,bias:n?U0(r.rank,n,Zr()):null,activation:t})}else{let o=r.shape.slice(),s=o.pop();r=r.reshape([-1,s]);let a=e.shape.slice(),i=a.pop(),l=a.pop(),u=[...a,i],c=Array.from({length:e.rank},(d,h)=>h===0?e.rank-2:h<=e.rank-2?h-1:h);e=e.transpose(c).reshape([l,-1]);let p=[...o,...u],m=!1,f=!1;return Wo.matMul({a:r,b:e,transposeA:m,transposeB:f,bias:n?U0(r.rank,n,Zr()):null,activation:t}).reshape(p)}}function yx(r,e,t){return V(()=>(Array.isArray(e)?e=Gt(e,"int32"):e=e.toInt(),Bo(r,e,t)))}function ac(r){return P(r,r)}function U0(r,e,t){let n=e.shape;if(e.rank!==1&&e.rank!==r)throw new B(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(r===5){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1,1,1]):e.reshape([1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,1,1,n[0]]):e.reshape([1].concat(n))}else if(r===4){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1,1]):e.reshape([1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,1,n[0]]):e.reshape([1].concat(n))}else if(r===3){if(t==="channelsFirst")return n.length===1?e.reshape([1,n[0],1]):e.reshape([1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?e.reshape([1,1,n[0]]):e.reshape([1].concat(n))}else if(r<3)return e;throw new B(`Unsupported input rank by biasAdd: ${e.rank}`)}function ln(r,e,t){return V(()=>(t==null&&(t=Zr()),Ft(t),r.add(U0(r.rank,e,t))))}function bL(r,e=1){if(e!==1)throw new Te(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Ns(r)}function wL(r){return V(()=>fe(r,Et(r).add(1)))}function bx(r,e,t,n){return V(()=>g_(r,e,t,n))}function _L(r){return V(()=>{let e=Q(.5,P(.2,r));return ar(e,0,1)})}function vl(r,e,t=!1){return t?r():e()}var vL=["fanIn","fanOut","fanAvg"],kL=["normal","uniform","truncatedNormal"];function UJ(r){qi(vL,"FanMode",r)}function qJ(r){qi(kL,"Distribution",r)}var un=class extends ee.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},qf=class extends un{apply(e,t){return mt(e,t)}};qf.className="Zeros";ee.registerClass(qf);var lc=class extends un{apply(e,t){return Tr(e,t)}};lc.className="Ones";ee.registerClass(lc);var Hf=class extends un{constructor(e){super();if(typeof e!="object")throw new B(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new B(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return V(()=>P(ue(this.value),Tr(e,t)))}getConfig(){return{value:this.value}}};Hf.className="Constant";ee.registerClass(Hf);var Kf=class extends un{constructor(e){super();this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return As(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Kf.className="RandomUniform";ee.registerClass(Kf);var Xf=class extends un{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Te(`randomNormal does not support dType ${t}.`);return Ep(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Xf.className="RandomNormal";ee.registerClass(Xf);var Yf=class extends un{constructor(e){super();this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Te(`truncatedNormal does not support dType ${t}.`);return Wu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Yf.className="TruncatedNormal";ee.registerClass(Yf);var Zf=class extends un{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,t){return V(()=>{if(e.length!==2||e[0]!==e[1])throw new B("Identity matrix initializer can only be used for 2D square matrices.");return P(this.gain,Xc(e[0]))})}getConfig(){return{gain:this.gain}}};Zf.className="Identity";ee.registerClass(Zf);function HJ(r,e="channelsLast"){let t,n;if(Ft(e),r.length===2)t=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(e==="channelsFirst"){let o=ts(r,2);t=r[1]*o,n=r[0]*o}else if(e==="channelsLast"){let o=ts(r,0,r.length-2);t=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=ts(r);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}var Wr=class extends un{constructor(e){super();if(e.scale<0)throw new B(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,UJ(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,qJ(this.distribution),this.seed=e.seed}apply(e,t){let n=HJ(e),o=n[0],s=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,s):a/=Math.max(1,(o+s)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Te(`${this.getClassName()} does not support dType ${t}.`);return Wu(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return As(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Wr.className="VarianceScaling";ee.registerClass(Wr);var Ap=class extends Wr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Ap.className="GlorotUniform";ee.registerClass(Ap);var Dp=class extends Wr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Dp.className="GlorotNormal";ee.registerClass(Dp);var $p=class extends Wr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};$p.className="HeNormal";ee.registerClass($p);var Rp=class extends Wr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Rp.className="HeUniform";ee.registerClass(Rp);var Fp=class extends Wr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Fp.className="LeCunNormal";ee.registerClass(Fp);var Op=class extends Wr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wr.className}};Op.className="LeCunNormal";ee.registerClass(Op);var Jf=class extends un{constructor(e){super();if(this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Te("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return V(()=>{if(e.length<2)throw new Te("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,o=Ep(n,0,1,"float32"),s=v_.gramSchmidt(o);return e[0]>e[1]&&(s=s.transpose()),P(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Jf.className="Orthogonal";ee.registerClass(Jf);var CL={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function IL(r,e={}){return Ui(r,ee.SerializationMap.getMap().classNameMap,e,"initializer")}function Nt(r){return Ip(r)}function gt(r){if(typeof r=="string"){let e=r in CL?CL[r]:r;if(e==="GlorotNormal")return new Dp;if(e==="GlorotUniform")return new Ap;if(e==="HeNormal")return new $p;if(e==="HeUniform")return new Rp;if(e==="LeCunNormal")return new Fp;if(e==="LeCunUniform")return new Op;{let t={};return t.className=e,t.config={},IL(t)}}else return r instanceof un?r:IL(r)}function KJ(){return new qf}function XJ(){return new lc}function YJ(r){return new Hf(r)}function ZJ(r){return new Kf(r)}function JJ(r){return new Xf(r)}function QJ(r){return new Yf(r)}function eQ(r){return new Zf(r)}function tQ(r){return new Wr(r)}function rQ(r){return new Ap(r)}function nQ(r){return new Dp(r)}function oQ(r){return new $p(r)}function sQ(r){return new Rp(r)}function iQ(r){return new Fp(r)}function aQ(r){return new Op(r)}function lQ(r){return new Jf(r)}var TC={};Ze(TC,{Layer:()=>Le,RNN:()=>fn,RNNCell:()=>Al,activation:()=>See,add:()=>Oee,alphaDropout:()=>yte,average:()=>Pee,averagePooling1d:()=>EC,averagePooling2d:()=>AC,averagePooling3d:()=>DC,avgPool1d:()=>Uee,avgPool2d:()=>Hee,avgPool3d:()=>Xee,avgPooling1d:()=>qee,avgPooling2d:()=>Kee,avgPooling3d:()=>Yee,batchNormalization:()=>Wee,bidirectional:()=>cte,concatenate:()=>Mee,conv1d:()=>yee,conv2d:()=>bee,conv2dTranspose:()=>wee,conv3d:()=>_ee,convLstm2d:()=>ite,convLstm2dCell:()=>ate,cropping2D:()=>kee,dense:()=>Nee,depthwiseConv2d:()=>Iee,dot:()=>Vee,dropout:()=>Tee,elu:()=>mee,embedding:()=>Fee,flatten:()=>Aee,gaussianDropout:()=>xte,gaussianNoise:()=>gte,globalAveragePooling1d:()=>Zee,globalAveragePooling2d:()=>Jee,globalMaxPool1d:()=>mte,globalMaxPool2d:()=>fte,globalMaxPooling1d:()=>iz,globalMaxPooling2d:()=>az,gru:()=>ete,gruCell:()=>tte,input:()=>Vx,inputLayer:()=>pee,layerNormalization:()=>jee,leakyReLU:()=>dee,lstm:()=>rte,lstmCell:()=>nte,masking:()=>bte,maxPool1d:()=>dte,maxPool2d:()=>hte,maxPooling1d:()=>lz,maxPooling2d:()=>uz,maxPooling3d:()=>Qee,maximum:()=>Lee,minimum:()=>zee,multiply:()=>Bee,permute:()=>Ree,prelu:()=>hee,reLU:()=>fee,repeatVector:()=>Dee,reshape:()=>$ee,rnn:()=>lte,separableConv2d:()=>vee,simpleRNN:()=>ote,simpleRNNCell:()=>ste,softmax:()=>gee,spatialDropout1d:()=>Eee,stackedRNNCells:()=>ute,thresholdedReLU:()=>xee,timeDistributed:()=>pte,upSampling2d:()=>Cee,zeroPadding2d:()=>Gee});var uQ=0;function wx(){return uQ++}var _x={};function kl(r=""){return r in _x||(_x[r]=0),_x[r]+=1,r+_x[r].toString()}function vx(r){return Array.isArray(r)&&Array.isArray(r[0])}function Pp(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Pe(r){let e;if(Array.isArray(r)){if(r.length!==1)throw new B(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function tt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new B(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Mp(r){let e=0;for(let t of r)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}var SL="Variable",Qf=class{constructor(e,t="float32",n=SL,o=!0,s=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=wx(),n=n==null?SL:n,this.originalName=hx(n),this.name=gx(this.originalName),this.trainable_=o,this.constraint=s,this.val=Zw(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),cQ(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function cQ(r,e){if(r.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(e.shape))}function ed(r){return r.map(e=>e.read())}function Lp(r){r.forEach(e=>{e[0].write(e[1])})}var At=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},jr=class{constructor(e,t,n,o,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=o,this.callArgs=s,this.outputTensorIndex=i,this.id=wx(),a!=null&&(this.originalName=hx(a),this.name=gx(this.originalName)),this.rank=t.length}},pQ=0,Cl=class{constructor(e,t){this.callArgs=t,this.id=pQ++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},mQ=0,Le=class extends ee.Serializable{constructor(e={}){super();this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mQ++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Jo(n)+"_"+kl(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let s=null;e.batchSize!=null&&(s=e.batchSize),n=[s].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Br(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new B(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return xr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return xr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Nn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Nn(`Layer ${this.name} is not connected, no input to return.`);return xr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Nn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Nn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return xr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=_t(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=_t(this.inputSpec);if(e.length!==t.length)throw new B(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let o=e[n],s=t[n];if(s==null)continue;let a=o.rank;if(s.ndim!=null&&a!==s.ndim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(s.maxNDim!=null&&a>s.maxNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(s.minNDim!=null&&a<s.minNDim)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new B(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let i=o.shape;for(let l in s.axes){let u=Number(l),c=s.axes[l],p=u>=0?i[u]:i[i.length+u];if(c!=null&&[c,null].indexOf(p)===-1)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(s.shape!=null)for(let i=0;i<s.shape.length;++i){let l=s.shape[i],u=o.shape[i];if(l!=null&&u!=null&&l!==u)throw new B(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=_t(e),o=!0;for(let a of n)if(!(a instanceof jr)){o=!1;break}let s=!0;for(let a of n)if(a instanceof jr){s=!1;break}if(o===s)throw new B("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ms(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of _t(e))a.push(i.shape);this.build(xr(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let a=this.call(e,t),i=_t(a),l=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=xr(l),this.activityRegularizer!=null)throw new Te("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=fQ(e),i=this.computeOutputShape(a),l,u=dQ(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?l=i.map((c,p)=>new jr(u,c,this,_t(e),t,this.name,p)):l=new jr(u,i,this,_t(e),t,this.name),this.addInboundNode(e,l,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Te("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Nn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Nn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Br(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Mp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ed(e?this.trainableWeights:this.weights)}setWeights(e){V(()=>{let t=this.weights;if(t.length!==e.length)throw new B(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],o=ed(t);for(let s=0;s<o.length;++s){let a=o[s],i=t[s],l=e[s];if(!y.arraysEqual(a.shape,l.shape))throw new B(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);n.push([i,l])}Lp(n)})}addWeight(e,t,n,o,s,a,i){if(this._addedWeightNames.indexOf(e)!==-1)throw new B(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=gt("zeros"));let l=o.apply(t,n),u=new Qf(l,n,e,a,i);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=_t(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,o,s,a,i=null){let l=_t(e);t=_t(t),n=_t(n),o=_t(o),s=Pp(s),a=Pp(a);let u=[],c=[],p=[];for(let m of l)u.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new Cl({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:p,inputTensors:l,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:a},i);for(let m=0;m<t.length;m++)t[m].sourceLayer=this,t[m].nodeIndex=this.inboundNodes.length-1,t[m].tensorIndex=m}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount==0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function fQ(r){r=_t(r);let e=[];for(let t of r)e.push(t.shape);return xr(e)}function dQ(r){return"float32"}function H0(r,e,t){if((e==null||t!=null&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),e.inboundNodes.length===0)return[r];{let n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],l=n.nodeIndices[s],u=H0(a,i,l);for(let c of u)o.indexOf(c)===-1&&o.push(c)}return o}}}var Hi=class extends Le{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:kl("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new B("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new B("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new B("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let o=new jr(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Cl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new B(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Hi.className="InputLayer";ee.registerClass(Hi);function kx(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new B("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;r.shape!=null&&e==null&&(e=[null].concat(r.shape));let t=r.dtype;return t==null&&(t="float32"),new Hi({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function Ki(r){if(r==null)return;let e=[],t=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){let o=await Promise.all(e);for(let s=0;s<o.length;++s)r[t[s]]=o[s][0];De(n)}}function Cx(r){if(r!=null)for(let e in r){let t=r[e];typeof t!="number"&&t.dispose()}}var NL;(function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"})(NL||(NL={}));var hQ=125,Il=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Ix=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},TL=class extends Il{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let o in t){let s=t[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;let i=V(()=>Q(this.totals[o],P(s,n)));this.totals[o]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:V(()=>{let o=P(fe(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),Dt(t[n])}))}},Sx=class extends Il{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let s in this.history){let a=this.history[s];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let l=a[i];e.push(l.data()),t.push(s),n.push(i)}}let o=await Promise.all(e);for(let s=0;s<o.length;++s)this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=o[s][0]}},Nx=class extends Il{constructor(e,t){super();if(this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=hQ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=nL(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let o=[];this.yield!=null&&(await Ki(n),o.push(this.yield(e,t,n))),o.push(lf()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Ki(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Ki(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(lf()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Ki(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Ki(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(lf()):y.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Ki(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Ki(e),await this.trainEnd(e))}};function Tx(r,e){return r==null&&(r={}),r instanceof Il?[r]:Array.isArray(r)&&r[0]instanceof Il?r:_t(r).map(n=>new Nx(n,e))}var cn=class{constructor(){}static registerCallbackConstructor(e,t){y.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),cn.checkForDuplicate(t),cn.constructors[e]==null&&(cn.constructors[e]=[]),cn.constructors[e].push(t)}static checkForDuplicate(e){for(let t in cn.constructors)cn.constructors[+t].forEach(o=>{if(o===e)throw new B("Duplicate callback constructor.")})}static clear(){cn.constructors={}}static createCallbacks(e){let t=[];for(let n in cn.constructors){let o=+n;e>=o&&t.push(...cn.constructors[o])}return t.map(n=>new n)}};cn.constructors={};function Ex(r,e,t,n,o,s,a,i,l){let u=new Sx,c=[new TL,...cn.createCallbacks(e)];r!=null&&c.push(...r),c.push(u);let p=new Ix(c);return p.setParams({epochs:t,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:e,doValidation:i,metrics:l}),{callbackList:p,history:u}}function Qr(r,e={},t=!1){return Ui(r,ee.SerializationMap.getMap().classNameMap,e,"layer",t)}function td(r,e){return V(()=>{r.dtype!=="float32"&&(r=r.asType("float32"));let t=we(ac(r),e,!0),n=Sa(t.shape,er()),o=bt(Nr(t,n));return fe(r,o)})}function Xi(r,e){return V(()=>yt(ac(ce(e,r)),-1))}function zp(r,e){return V(()=>yt(Et(ce(e,r)),-1))}function Sl(r,e){return V(()=>{let t=ce(r,e),n=ar(Et(r),er(),Number.MAX_VALUE),o=Et(fe(t,n));return P(100,yt(o,-1))})}function gQ(r,e){return V(()=>{let t=ar(e,er(),Number.MAX_VALUE),n=lr(Q(1,t)),o=ar(r,er(),Number.MAX_VALUE),s=lr(Q(1,o));return yt(ac(ce(n,s)),-1)})}function xQ(r,e){return V(()=>{let t=Nr(0,ce(1,P(r,e)));return yt(ac(t),-1)})}function yQ(r,e){return V(()=>{let t=Nr(0,ce(1,P(r,e)));return yt(t,-1)})}function bQ(r,e){return V(()=>{let t=we(P(r,e),-1),n=ur(P(ce(1,r),e),-1);return Nr(0,Q(1,ce(n,t)))})}function wQ(r,e){return V(()=>{let t=Math.log(2),n=ce(e,r),o=ce(Q(n,Es(P(-2,n))),t);return yt(o,-1)})}function uc(r,e,t=!1){return V(()=>{if(t)e=Ra(e);else{let n=we(e,e.shape.length-1,!0);e=fe(e,n)}return e=ar(e,er(),1-er()),qe(we(P(r.toFloat(),lr(e)),e.shape.length-1))})}function Bp(r,e,t=!1){return V(()=>{let n=Ts(xL(r)).toInt();e=ar(e,er(),1-er());let o=e.shape,s=Is(n,o[o.length-1]).reshape(o);return uc(s,e,t)})}function _Q(r,e){if(!y.arraysEqual(r.shape,e.shape))throw new B(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(e.shape)}`);return V(()=>{let t=e.relu(),n=e.abs().neg();return t.sub(e.mul(r)).add(n.exp().log1p())})}function Vp(r,e){return V(()=>{let t;return t=ar(e,er(),1-er()),t=lr(fe(t,ce(1,t))),yt(_Q(r,t),-1)})}function vQ(r,e){return V(()=>{let t=ar(r,er(),1),n=ar(e,er(),1);return we(P(r,lr(fe(t,n))),-1)})}function kQ(r,e){return V(()=>{let t=lr(Q(er(),e));return yt(ce(e,P(r,t)),-1)})}function rd(r,e){return V(()=>{let t=td(r,-1),n=td(e,-1),o=P(t,n);return qe(we(o,-1))})}var nd={meanSquaredError:Xi,meanAbsoluteError:zp,meanAbsolutePercentageError:Sl,meanSquaredLogarithmicError:gQ,squaredHinge:xQ,hinge:yQ,categoricalHinge:bQ,logcosh:wQ,categoricalCrossentropy:uc,sparseCategoricalCrossentropy:Bp,binaryCrossentropy:Vp,kullbackLeiblerDivergence:vQ,poisson:kQ,cosineProximity:rd};function Ax(r){if(typeof r=="string"){if(r in nd)return nd[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new B(e)}else return r}function od(r,e){return V(()=>{let t=P(.5,nr(e)),n=Ua(Yt(e,t),r.dtype);return yt(Xr(r,n),-1)})}function sd(r,e){return V(()=>Ua(Xr(ul(r,-1),ul(e,-1)),"float32"))}function EL(r,e){return V(()=>hr(r.equal(1),e.equal(1)).sum().cast("float32"))}function CQ(r,e){return V(()=>hr(r.equal(1),e.equal(0)).sum().cast("float32"))}function IQ(r,e){return V(()=>hr(r.equal(0),e.equal(1)).sum().cast("float32"))}function K0(r,e){return V(()=>{let t=EL(r,e),n=IQ(r,e),o=t.add(n);return $t(Yt(o,0),t.div(o),0).cast("float32")})}function AL(r,e){return V(()=>{let t=EL(r,e),n=CQ(r,e),o=t.add(n);return $t(Yt(o,0),t.div(o),0).cast("float32")})}function Dx(r,e){return Vp(r,e)}function $x(r,e){return r.rank===e.rank&&(r=r.squeeze([r.rank-1])),e=e.argMax(-1),e.dtype!==r.dtype&&(e=e.asType(r.dtype)),Xr(r,e).asType("float32")}var SQ=Xi,NQ=Xi,TQ=zp,EQ=zp,AQ=Sl,DQ=Sl,id=uc,$Q=rd,X0=Bp,Rx={binaryAccuracy:od,categoricalAccuracy:sd,precision:K0,categoricalCrossentropy:id,sparseCategoricalCrossentropy:X0,mse:SQ,MSE:NQ,mae:TQ,MAE:EQ,mape:AQ,MAPE:DQ,cosine:$Q};function DL(r){if(typeof r=="string"&&r in Rx)return Rx[r];if(typeof r!="string"&&r!=null)return r;throw new B(`Unknown metric ${r}`)}function ad(r){if(Wn(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let e;for(let t of Object.keys(nd))if(nd[t]===r){e=t;break}if(e!==void 0)return e;for(let t of Object.keys(Rx))if(Rx[t]===r){e=t;break}return e!==void 0?e:r.name}}function $L(r){let e={Adagrad:()=>fl.adagrad(.01),Adadelta:()=>fl.adadelta(1,.95,er()),Adam:()=>fl.adam(.001,.9,.999,er()),Adamax:()=>fl.adamax(.002,.9,.999,er(),0),RMSProp:()=>fl.rmsprop(.001,.9,0,er()),SGD:()=>fl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,r in e)return e[r]();throw new B(`Unknown Optimizer ${r}`)}var RL=1*1024*1024;function Z0(r,e,t=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!Y0(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){let n=JSON.stringify(r);n.length>RL&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${RL}.`)}}function Y0(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let e=Object.keys(r);for(let t of e)if(typeof t!="string"||!Y0(r[t]))return!1;return!0}else if(Array.isArray(r)){for(let e of r)if(!Y0(e))return!1;return!0}else return!1;else{let e=typeof r;return e==="string"||e==="number"||e==="boolean"}}function FL(r,e,t,n=console.log){let o=FQ(r),s=["Layer (type)","Output shape","Param #"];o?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(c=>Math.floor(e*c)));let a;if(!o){s.push("Receives inputs"),a=[];for(let c in r.nodesByDepth)a.push(...r.nodesByDepth[c])}n("_".repeat(e)),Fx(s,t,n),n("=".repeat(e));let i=r.layers;for(let c=0;c<i.length;++c)o?OQ(i[c],t,n):PQ(i[c],t,a,n),n((c===i.length-1?"=":"_").repeat(e));r.checkTrainableWeightsConsistency();let l=RQ(r),u=Mp(r.nonTrainableWeights);n(`Total params: ${l+u}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${u}`),n("_".repeat(e))}function RQ(r){let e;return r.collectedTrainableWeights!=null?e=Mp(r.collectedTrainableWeights):e=Mp(r.trainableWeights),e}function FQ(r){let e=!0,t=[],n=[];for(let o in r.nodesByDepth)t.push(r.nodesByDepth[o]);for(let o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){e=!1;break}else s=!0;if(!e)break}return e}function Fx(r,e,t=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function OQ(r,e,t){let n;try{n=JSON.stringify(r.outputShape)}catch(i){n="multiple"}let o=r.name,s=r.getClassName(),a=[`${o} (${s})`,n,r.countParams().toString()];Fx(a,e,t)}function PQ(r,e,t,n){let o;try{o=JSON.stringify(r.outputShape)}catch(c){o="multiple"}let s=[];for(let c of r.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(c)===-1))for(let p=0;p<c.inboundLayers.length;++p){let m=c.inboundLayers[p].name,f=c.nodeIndices[p],d=c.tensorIndices[p];s.push(`${m}[${f}][${d}]`)}let a=r.name,i=r.getClassName(),l=s.length===0?"":s[0],u=[`${a} (${i})`,o,r.countParams().toString(),l];Fx(u,e,n);for(let c=1;c<s.length;++c)Fx(["","","",s[c]],e,n)}function OL(r,e,t){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&e===0&&typeof t=="string"}function cc(r,e){if(r===null)return null;if(typeof r=="string")return Ga(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];OL(e,o,s)?t.push(s):t.push(cc(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")t[n]=o;else{let s=Ga(n);t[s]=cc(o,s)}}return t}}function Ox(r,e){if(r==null)return null;if(typeof r=="string")return Jo(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let t=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];OL(e,o,s)?t.push(s):t.push(Ox(s,e))}return t}else{let t={};for(let n of Object.keys(r)){let o=r[n],s=Jo(n);(n==="name"||n==="className")&&typeof o=="string"?t[s]=o:t[s]=Ox(o,n)}return t}}var Wp="2.8.5";function MQ(r,e){if(r.dtype==null||r.dtype===e.dtype)return e;try{return ne(e,r.dtype)}catch(t){throw new B(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var zs=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof zs)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=MQ(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new B(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof jr){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof jr){if(this.id2Value[e.id]==null)throw new B(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new B(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&De(this.id2Mask)}},J0={},PL={};function pc(r,e,t,n){let o=t==null?!1:t.training,s=Array.isArray(r),a=s?r:[r],i=a.map(d=>d.name),l=[],u=e.names();for(let d of i)u.indexOf(d)!==-1?l.push(e.getValue(d)):l.push(null);n!=null&&(n.maxNumTensors=-Infinity,n.minNumTensors=Infinity);let c=i.join(",")+"|"+e.names().join(","),p,m;if(J0[c]==null){let d=LQ(a,e);p=d.sorted,m=d.recipientCounts,J0[c]=p,PL[c]=m}p=J0[c],m={},o||Object.assign(m,PL[c]);let f=new zs(e);for(let d=0;d<p.length;++d){if(n!=null){let O=qc().numTensors;O>n.maxNumTensors&&(n.maxNumTensors=O),O<n.minNumTensors&&(n.minNumTensors=O)}let h=p[d],g=h.sourceLayer;if(g instanceof Hi)continue;let x=[],b=[],w=[],_=!1;for(let O of h.inputs){let M=f.getValue(O),j=f.getMask(O);x.push(M),b.push(j),j!=null&&(_=!0),o||(m[O.name]--,m[O.name]===0&&!e.hasKey(O)&&i.indexOf(O.name)===-1&&!M.isDisposed&&O.sourceLayer.stateful!==!0&&w.push(M))}_&&(t=t||{},t.mask=b[0]);let k=_t(g.apply(x,t)),E=null;g.supportsMasking&&(E=g.computeMask(x,b));let T=zQ(h),F=Array.isArray(T)?T:[T];for(let O=0;O<F.length;++O){f.hasKey(F[O])||f.add(F[O],k[O],Array.isArray(E)?E[0]:E);let M=i.indexOf(F[O].name);M!==-1&&(l[M]=k[O])}o||De(w)}return f.disposeMasks(),s?l:l[0]}function LQ(r,e){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(r.length===1){let o=ML(r[0],e);t=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=ML(s,e);for(let l of a)o.has(l.name)||(t.push(l),o.add(l.name));for(let l in i)n[l]==null&&(n[l]=new Set),i[l].forEach(u=>n[l].add(u))}}return{sorted:t,recipientCounts:BQ(n)}}function BQ(r){let e={};for(let t in r)e[t]=r[t].size;return e}function ML(r,e){let t=new Set,n=[],o={};for(let i of e.names())t.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(t.has(i.name)){s.pop();continue}let l=a[a.length-1]===s.length-1;if(i.inputs.length===0||l)s.pop(),n.push(i),t.add(i.name),l&&a.pop();else{a.push(s.length-1);for(let u of i.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(i.name),!t.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:o}}function zQ(r){let e;if(r.sourceLayer.inboundNodes.length===1)e=r.sourceLayer.output;else{let t=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){t=n;break}e=r.sourceLayer.getOutputAt(t)}return e}var jn=class extends Le{constructor(e){super({});if(this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=kl(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],es(this.inputs).length!==this.inputs.length)throw new B(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);es(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let w=b.sourceLayer,_=b.nodeIndex,k=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(_),this.outputLayersTensorIndices.push(k)}for(let b of this.inputs){let w=b.sourceLayer,_=b.nodeIndex,k=b.tensorIndex;Wn(_===0,"input layer has >1 nodes"),Wn(k===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(_),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let w=this.inputLayers[b];if(!(w instanceof Hi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},o={},s={},a={},i=[],l=(b,w,_,k,E,T)=>{(k==null||E==null||T==null)&&(k=b.sourceLayer,E=b.nodeIndex,T=b.tensorIndex);let F=k.inboundNodes[E];if(_.indexOf(F)!==-1)throw new Br(`The tensor ${b.name} at layer "${k.name}" is part of a cycle.`);if(w.indexOf(F)!==-1)return;this.containerNodes.add(jn.nodeKey(k,E)),k.id in a||(a[k.id]=Object.keys(a).length),_.indexOf(F)===-1&&_.push(F);let O=F.inboundLayers.length;for(let M=0;M<O;M++){let j=F.inputTensors[M],W=F.inboundLayers[M],U=F.nodeIndices[M],Y=F.tensorIndices[M];l(j,w,_,W,U,Y)}for(w.push(F);_.indexOf(F)>=0;)_.splice(_.indexOf(F),1);i.push(F)},u=[],c=[];for(let b of this.outputs)l(b,u,c);let p=i.slice().reverse();for(let b of p){n[b.id]=b,b.id in t||(t[b.id]=0);let w=t[b.id],_=o[b.outboundLayer.id]==null?0:o[b.outboundLayer.id];w=Math.max(w,_),o[b.outboundLayer.id]=w,s[b.outboundLayer.id]=b.outboundLayer,t[b.id]=w;for(let k=0;k<b.inboundLayers.length;k++){let E=b.inboundLayers[k],T=b.nodeIndices[k],F=E.inboundNodes[T],O=t[F.id]==null?0:t[F.id];t[F.id]=Math.max(w+1,O),n[F.id]=F}}let m={};for(let b in t){let w=t[b];w in m||(m[w]=[]),m[w].push(n[b])}let f={};for(let b in o){let w=o[b];w in f||(f[w]=[]),f[w].push(s[b])}let d=Object.keys(f).map(b=>parseInt(b,10)).sort(zf);this.layers=[];for(let b of d){let w=f[b];w.sort((_,k)=>{let E=a[_.id],T=a[k.id];return E<T?-1:E>T?1:0});for(let _ of w)_ instanceof jn&&this.internalContainerRefs.push(_),this.layers.push(_)}this.layersByDepth=f,d=Object.keys(m).map(b=>parseInt(b,10)).sort(zf);let h=this.inputs.slice(),g=[];for(let b of d)for(let w of m[b]){let _=w.outboundLayer;if(_!=null){for(let k of w.inputTensors)if(h.indexOf(k)===-1)throw new Br(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${_.name}". The following previous layers were accessed without issue: ${g}`);for(let k of w.outputTensors)h.push(k);g.push(_.name)}}this.nodesByDepth=m;let x=this.layers.map(b=>b.name);for(let b of x){let w=x.filter(_=>_===b).length;if(w!==1)throw new Br(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Cl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount==0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new B("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},o=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new B(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,o++}let s=[];for(let a in e){let i=a;if(n[a]==null){let l=a.split("/");i=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(n[i]!=null)s.push([n[i],e[a]]);else if(t)throw new B(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new B(`${a.length} of ${o} weights are not set: ${a}`)}Lp(s)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Wp}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Ox(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return V(()=>{e=_t(e);let n=new zs;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return pc(this.outputs,n,t)})}computeMask(e,t){return V(()=>{e=_t(e);let n;return t==null?n=Zo(null,e.length):n=_t(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Pp(e);if(t.length!==this.inputLayers.length)throw new B(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let l=this.inputLayers[i],u=t[i],c=l.name+"_0_0";n[c]=u}let o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(zf);if(o.length>1)for(let i of o){let l=this.nodesByDepth[i];for(let u of l){let c=u.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(c.id)!==-1)continue;let p=[];for(let h=0;h<u.inboundLayers.length;h++){let g=u.inboundLayers[h],x=u.nodeIndices[h],b=u.tensorIndices[h],w=`${g.name}_${x}_${b}`,_=n[w];p.push(_)}let m=c.computeOutputShape(xr(p)),f=Pp(m),d=c.inboundNodes.indexOf(u);for(let h=0;h<f.length;h++){let g=`${c.name}_${d}_${h}`;n[g]=f[h]}}}let s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],c=this.outputLayersTensorIndices[i],p=`${l.name}_${u}_${c}`;a.push(p)}for(let i=0;i<a.length;i++){let l=a[i];Wn(l in n),s.push(n[l])}return xr(s)}runInternalGraph(e,t){t==null&&(t=Zo(null,e.length));let n={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],c=e[l],p=t[l];n[u.id]=[c,p]}let o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(zf);for(let l of o){let u=this.nodesByDepth[l];for(let c of u){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,d=new Array;for(let h of m)h.id in n&&d.push(n[h.id]);if(d.length===m.length){let h={},g,x,b,w;if(c.callArgs!=null&&(h=c.callArgs),d.length===1){let[_,k]=d[0];h.mask==null&&(h.mask=k),b=_t(p.call(_,h)),w=_t(p.computeMask(_,k)),g=[_],x=[k]}else g=d.map(_=>_[0]),x=d.map(_=>_[1]),h.mask==null&&(h.mask=x),b=_t(p.call(g,h)),w=_t(p.computeMask(g,x));if(p.activityRegularizer)throw new Te("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let _=0;_<f.length;++_){let k=f[_],E=b[_],T=w[_];n[k.id]=[E,T]}}}}let s=[],a=[],i=[];for(let l of this.outputs){Wn(l.id in n,`Could not compute output ${l.name} : ${l.id}`);let[u,c]=n[l.id];i.push(u.shape),s.push(u),a.push(c)}return[s,a,i]}buildNodeConversionMap(e){let t={},n;for(let o of this.layers){n=o instanceof jn?1:0;for(let s=0;s<o.inboundNodes.length;s++){let a=jn.nodeKey(o,s);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new B(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new B("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new B(`No such layer: ${e}`)}calculateLosses(){return V(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let o=jn.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),l=a.getConfig(),u=[];for(let p=0;p<a.inboundNodes.length;p++){let m=a.inboundNodes[p],f=jn.nodeKey(a,p),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch(h){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let x=m.inboundLayers[g],b=m.nodeIndices[g],w=m.tensorIndices[g],_=jn.nodeKey(x,b),k=t[_];k==null&&(k=0),h.push([x.name,k,w,d])}u.push(h)}}}let c={};c.name=a.name,c.className=i,c.config=l,c.inboundNodes=u,n.push(c)}e.layers=n;let o=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=jn.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.inputLayersTensorIndices[a];o.push([i.name,c,p])}e.inputLayers=o;let s=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=jn.nodeKey(i,l);if(!this.containerNodes.has(u))continue;let c=t[u];c==null&&(c=0);let p=this.outputLayersTensorIndices[a];s.push([i.name,c,p])}return e.outputLayers=s,e}static fromConfig(e,t,n={},o=!1){let s={},a={};function i(g,x){g.name in a?a[g.name].push(x):a[g.name]=[x]}function l(g,x){let b=[],w;for(let _ of x){let k=_[0],E=_[1],T=_[2];if(w=_[3]==null?{}:_[3],!(k in s)){i(g,x);return}let F=s[k];if(F.inboundNodes.length<=E){i(g,x);return}let O=F.inboundNodes[E];b.push(O.outputTensors[T])}b.length>0&&g.apply(xr(b),w)}function u(g){let x=g.name,b=Qr(g,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(o),s[x]=b,g.inboundNodes.forEach(_=>{if(!(_ instanceof Array))throw new B(`Corrupted configuration, expected array for nodeData: ${_}`);i(b,_)})}let c=t.name,p=t.layers;for(let g of p)u(g);for(;!tL(a);)for(let g of p){let x=s[g.name];if(x.name in a){let b=a[x.name];delete a[x.name];for(let w of b)l(x,w)}}let m=[],f=[],d=t.inputLayers;for(let g of d){let x=g[0],b=g[1],w=g[2];Wn(x in s);let k=s[x].inboundNodes[b].outputTensors;m.push(k[w])}let h=t.outputLayers;for(let g of h){let x=g[0],b=g[1],w=g[2];Wn(x in s);let k=s[x].inboundNodes[b].outputTensors;f.push(k[w])}return new e({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new B("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function VQ(r,e,t){let n=e.length;if(r==null||Array.isArray(r)&&r.length===0)return e.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&e[0]in r?[r[e[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${t} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return e.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(r)}`)}function Px(r,e){return VQ(r,e,"classWeight")}async function Mx(r,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){let o=V(()=>{if(r.shape.length===1)return r.clone();if(r.shape.length===2)if(r.shape[1]>1){let i=1;return r.argMax(i)}else{if(r.shape[1]===1)return r.reshape([r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());De(o);let a=[];return s.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Gt(a,"float32")}else return null}function LL(r,e){return P(r,e)}var WQ=32;function BL(r,e){let t,n,o=e;t=o.xs,n=o.ys,y.assert(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);let s=zL("input",r.inputNames,t),a=zL("output",r.outputNames,n),i=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)y.assert(s[l].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let l=0;l<a.length;l++)y.assert(a[l].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function zL(r,e,t){if(t instanceof R)return[t];if(Array.isArray(t))return y.assert(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{let n=[];for(let o of e){if(t[o]==null)throw new B(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(t[o])}return n}}function jQ(r){if(r.length===3)throw new Te("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function WL(r,e,t){let n=t.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),y.assert(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),y.assert(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=t.validationData!=null,s,a;if(o)if(VL(t.validationData))y.assert(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{let g=jQ(t.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),u;o?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=Tx(t.callbacks,t.yieldEvery),p=t.verbose==null?1:t.verbose,{callbackList:m,history:f}=Ex(c,p,t.epochs,null,null,GQ(e,t),null,o,u);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=t.initialEpoch==null?0:t.initialEpoch,h=await e.iterator();for(;d<t.epochs;){let g={};await m.onEpochBegin(d);let x=0,b=0;for(n||(h=await e.iterator());n?x<t.batchesPerEpoch:!0;){let w=await h.next();if(n&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){let{xs:_,ys:k}=BL(r,w.value),E={};E.batch=b,E.size=_[0].shape[0],await m.onBatchBegin(b,E);let T=[];if(t.classWeight!=null){let M=Px(t.classWeight,r.outputNames);for(let j=0;j<M.length;++j)T.push(await Mx(k[j],null,M[j]))}let F=_.concat(k).concat(T),O=i(F);De(F);for(let M=0;M<l.length;++M){let j=l[M],W=O[M];E[j]=W,Dt(W)}await m.onBatchEnd(b,E),Cx(E),b++,x++}if(n?x>=t.batchesPerEpoch:w.done){if(o){let _;VL(t.validationData)?_=_t(await r.evaluateDataset(t.validationData,{batches:t.validationBatches})):_=_t(r.evaluate(s,a,{batchSize:t.validationBatchSize==null?WQ:t.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=_[k]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function GQ(r,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(r.size)&&(t=r.size),t}function VL(r){return typeof r.iterator=="function"}function UQ(r){return typeof r.next=="function"}async function jL(r,e,t){t=t||{};let n=t.batches!=null,o=r.testFunction,s=[];if(t.verbose>0)throw new Te("Verbose mode is not implemented yet.");y.assert(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);let a=UQ(e)?e:await e.iterator(),i=0,l=0;for(;n?l<t.batches:!0;){let u=await a.next();if(s=V(()=>{if(u.value){let{xs:c,ys:p}=BL(r,u.value),m=c.concat(p),f=V(()=>o(m));if(De(m),l===0)for(let h=0;h<f.length;++h)s.push(ue(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],x=s[h];s[h]=V(()=>Q(s[h],P(d,g))),l>0&&De(x)}De(f),i+=d,++l}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let c=s[u];s[u]=fe(s[u],i),De(c)}return xr(s)}function Lx(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function jp(r,e,t){return r==null?[null]:Array.isArray(r)?r.map(n=>Ha(n,e,t-e)):Ha(r,e,t-e)}function zx(r,e){return V(()=>r==null?null:Array.isArray(r)?r.map(t=>zx(t,e)):yx(r,e.dtype==="int32"?e:e.toInt()))}function Bx(r,e){let t=[],n=0,o=null;for(;n<r;)o=n+e,o>=r&&(o=r),t.push([n,o]),n=o;return t}async function qQ(r,e,t,n,o,s,a,i,l,u,c,p,m,f,d){o==null&&(o=32),s==null&&(s=1),c==null&&(c=!0),m==null&&(m=0);let h=!1;if(l!=null&&u!=null&&(h=!0),d!=null&&(h=!0,f==null))throw new B("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=r.checkNumSamples(t,o,f,"steps_per_epoch"),x;g!=null&&(x=Vr(0,g)),a==null&&(a=1);let{callbackList:b,history:w}=Ex(i,a,s,m,g,f,o,h,p);b.setModel(r),r.history=w,await b.onTrainBegin(),r.stopTraining_=!1;for(let _=m;_<s;++_){await b.onEpochBegin(_);let k={};if(f!=null)throw new Te("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Te("batch shuffling is not implemneted yet");c&&y.shuffle(x);let E=Gt(x),T=Bx(g,o);for(let F=0;F<T.length;++F){let O={};if(await b.onBatchBegin(F,O),V(()=>{let M=T[F][0],j=T[F][1],W=Ha(E,M,j-M);O.batch=F,O.size=j-M;let U=zx(t,W),Y=e(U);for(let K=0;K<n.length;++K){let Z=n[K],re=Y[K];O[Z]=re,Dt(re)}if(F===T.length-1&&h){let K=r.testLoop(l,u,o);for(let Z=0;Z<n.length;++Z){let re=n[Z],X=K[Z];Dt(X),k["val_"+re]=X}}}),await b.onBatchEnd(F,O),Cx(O),r.stopTraining_)break}E.dispose()}if(await b.onEpochEnd(_,k),r.stopTraining_)break}return await b.onTrainEnd(),await r.history.syncData(),r.history}async function GL(r,e,t,n={}){if(r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;let o,s,a,i,l,u,c;try{let p=n.batchSize==null?32:n.batchSize;Lx(p);let m=!1,f=await r.standardizeUserData(e,t,n.sampleWeight,n.classWeight,m,p);o=f[0],s=f[1],c=f[2];let d=!1,h;if(n.validationData!=null&&n.validationData.length>0){if(d=!0,n.validationData.length===2)a=n.validationData[0],i=n.validationData[1];else throw n.validationData.length===3?new Te("validationData including sample weights is not supported yet."):new B(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let T=!0,F=await r.standardizeUserData(a,i,null,null,T,p);l=F[0],u=F[1],h=l.concat(u)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){d=!0;let T=Math.floor(o[0].shape[0]*(1-n.validationSplit)),F=o[0].shape[0];l=jp(o,T,F),o=jp(o,0,T),u=jp(s,T,F),s=jp(s,0,T),h=l.concat(u)}else n.validationSteps!=null&&(d=!0);let g=o.concat(s).concat(c);r.checkTrainableWeightsConsistency();let x=r.makeTrainFunction(),b=r.getDedupedMetricsNames(),w,_;d?(r.makeTestFunction(),w=r.testFunction,_=b.slice().concat(b.map(T=>"val_"+T))):(w=null,h=[],_=b.slice());let k=Tx(n.callbacks,n.yieldEvery);return await qQ(r,x,g,b,p,n.epochs,n.verbose,k,w,h,n.shuffle,_,n.initialEpoch,null,null)}finally{r.isTraining=!1,Nl(o,e),Nl(s,t),Nl(l,a),Nl(u,i),c!=null&&De(c)}}function Q0(r){let e=[];r instanceof R&&(r=[r]);for(let t=0;t<r.length;++t){let n=r[t];if(n.rank===1)e.push(qa(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Nl(r,e){if(r==null)return;let t=[];if(e instanceof R)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(let o in e){let s=e[o];t.push(s.id)}let n=[];if(r instanceof R)t.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];t.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function HQ(r){return r instanceof R}function eC(r){return Array.isArray(r)}function UL(r){return!HQ(r)&&!eC(r)}function qL(r,e,t,n=!0,o=""){if(e==null||e.length===0){if(r!=null){let a=!1;if(eC(r)&&r.length>0)a=!0;else if(UL(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new B(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return e.map(a=>null);let s;if(UL(r)){r=r,s=[];for(let a of e){if(r[a]==null)throw new B(`No data provided for "${a}". Need data for each key in: ${e}`);s.push(r[a])}}else if(eC(r)){if(r=r,r.length!==e.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,e.length>1)throw new B(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=Q0(s),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new B(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!n)continue;let u=i.shape[l],c=t[a][l];if(c!=null&&c>=0&&u!==c)throw new B(`Error when checking ${o}: expected ${e[a]} to have shape [${t[a]}], but got array with shape [${i.shape}].`)}}return s}function KQ(r,e,t){let n=es(r.map(s=>s.shape[0]));n.sort();let o=es(e.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new B(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new B(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new B(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function XQ(r,e,t){let n=[Xi,Vp,uc];for(let o=0;o<r.length;++o){let s=r[o],a=e[o],i=t[o];if(a!=null){if(a===uc&&s.shape[s.shape.length-1]===1)throw new B(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let l=s.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){let p=l[c],m=u[c];if(m!=null&&p!==m)throw new B(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function HL(r,e,t,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==e.length)throw new B(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(e.length>1)throw new B(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;let i=s[a];if(i.shape.length!==t[a].length)throw new B(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!n)continue;let u=i.shape[l],c=t[a][l];if(c!=null&&c!==u)throw new B(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function YQ(r,e){if(r==null||Array.isArray(r)&&r.length===0)return e.map(n=>[]);let t;if(typeof r=="string"||typeof r=="function")t=[r];else if(Array.isArray(r)||typeof r=="object")t=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(t))return e.map(n=>t);{let n=[];for(let o of e){let s=t.hasOwnProperty(o)?t[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var ZQ="layers-model",Tn=class extends jn{constructor(e){super(e);this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new B("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");FL(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=$L(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Lr))throw new B("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new B(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Ax(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new B(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Ax(i))}else{let a=Ax(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ms("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let o=YQ(e.metrics,this.outputNames),s=(a,i,l)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([l,a])};Ms("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=o[a];(u=>{let c="",p,m,f;for(let d of u){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Vp?["accuracy","acc"].indexOf(d)!==-1?m=od:["crossentropy","ce"].indexOf(d)!==-1&&(m=Dx):this.lossFunctions[a]===Bp?["accuracy","acc"].indexOf(d)!==-1?m=$x:["crossentropy","ce"].indexOf(d)!==-1&&(m=X0):["accuracy","acc"].indexOf(d)!==-1?m=sd:["crossentropy","ce"].indexOf(d)!==-1&&(m=id);let x;["accuracy","acc"].indexOf(d)!==-1?x="acc":["crossentropy","ce"].indexOf(d)!==-1&&(x="ce"),f=m,p=c+x}else f=DL(d),p=c+ad(d);let h;Ms(p,()=>{h=f}),s(a,p,h)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let o=n.batchSize==null?32:n.batchSize;Lx(o);let s=!0,a=this.standardizeUserDataXY(e,t,s,o);try{let i=a[0].concat(a[1]);this.makeTestFunction();let l=this.testFunction,u=this.testLoop(l,i,o,n.verbose,n.steps);return xr(u)}finally{Nl(a[0],e),Nl(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),jL(this,e,t)}checkNumSamples(e,t,n,o="steps"){let s;if(n!=null){if(s=null,t!=null)throw new B(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?s=e[0].shape[0]:s=e.shape[0];else throw new B(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new B("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),o=n?t:[t],s=this.retrieveSymbolicTensors(o),a=new zs;if(e instanceof R&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new B(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(let l of this.inputs){let u=e[l.name];if(u==null)throw new B(`No value is provided for the model's input ${l.name}`);a.add(l,u)}let i=pc(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Zo(null,e.length),n=e.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],a=s.map(i=>i.name);for(let i=0;i<e.length;++i){let l=a.indexOf(e[i]);if(l!==-1&&(t[i]=s[l],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw t.forEach((s,a)=>{s==null&&o.push(e[a])}),new B(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return V(()=>{let o=this.checkNumSamples(e);if(n)throw new Te("Verbose predictLoop() is not implemented yet.");let s=Bx(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<s.length;++i)V(()=>{let u=s[i][0],c=s[i][1],p=jp(e,u,c),m=[];if(Array.isArray(p))for(let d=0;d<p.length;++d)m.push({key:this.inputs[d],value:p[d]});else m.push({key:this.inputs[0],value:p});let f=new zs(m);return pc(this.outputs,f)}).forEach((u,c)=>a[c].push(u));return xr(a.map(i=>et(i,0)))})}predict(e,t={}){let n=Q0(e);HL(n,this.inputNames,this.feedInputShapes,!1);try{let o=t.batchSize==null?32:t.batchSize;return Lx(o),this.predictLoop(n,o)}finally{Nl(n,e)}}predictOnBatch(e){HL(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new Br("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===Bp?s.push(i.slice(0,i.length-1).concat([1])):s.push(i)}if(e=qL(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=qL(t,this.feedOutputNames,s,!1,"target"),KQ(e,t,null),XQ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!=0)throw new B(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,s=!0,a){let[i,l]=this.standardizeUserDataXY(e,t,s,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){let c=Px(o,this.outputNames);u=[];for(let p=0;p<c.length;++p)u.push(await Mx(l[p],null,c[p]))}return[i,l,u]}testLoop(e,t,n,o=0,s){return V(()=>{let a=this.checkNumSamples(t,n,s,"steps"),i=[];if(o>0)throw new Te("Verbose mode is not implemented yet.");if(s!=null)throw new Te("steps mode in testLoop() is not implemented yet");{let l=Bx(a,n),u=Gt(Vr(0,a));for(let c=0;c<l.length;++c){let p=l[c][0],m=l[c][1],f=Ha(u,p,m-p),d=zx(t,f),h=e(d);if(c===0)for(let g=0;g<h.length;++g)i.push(ue(0));for(let g=0;g<h.length;++g){let x=h[g];i[g]=Q(i[g],P(m-p,x))}}for(let c=0;c<i.length;++c)i[c]=fe(i[c],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let o=e[n],s=o;L0(e,o)>1&&(s+=`_${L0(e.slice(0,n),o)}`),t.push(s)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let p=[];for(let h=0;h<this.inputs.length;++h)p.push({key:this.inputs[h],value:n[h]});let m=new zs(p),f=pc(this.outputs,m,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let x=this.lossFunctions[h](o[h],f[h]);s[h]!=null&&(x=LL(x,s[h]));let b=yt(x);t.push(b),h===0?d=x:d=Q(d,x)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=t[h];else{let x=this.metricsTensors[h][0],b=this.metricsTensors[h][1];g=yt(x(o[b],f[b]))}Dt(g),a.push(g)}return d=yt(d),this.calculateLosses().forEach(h=>{d=Q(d,h)}),d},l=this.collectedTrainableWeights.map(p=>p.read()),u=!0;return[this.optimizer_.minimize(i,u,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>V(()=>{let t=[],n,o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:o[u]});let i=new zs(a),l=pc(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let c=this.lossFunctions[u],p=yt(c(s[u],l[u]));u===0?n=p:n=Q(n,p),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let c=this.metricsTensors[u][0],p=this.metricsTensors[u][1],m=yt(c(s[p],l[p]));t.push(m)}return t})}async fit(e,t,n={}){return GL(this,e,t,n)}async fitDataset(e,t){return WL(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),o=n[0],s=n[1],i=this.makeTrainFunction()(o.concat(s)),l=[];for(let u of i){let c=await u.data();l.push(c[0])}return De(i),xr(l)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=qc().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-qc().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Jo(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Jo(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let o of t)if(typeof n[o]=="string")e[o]=Jo(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Jo(ad(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Jo(ad(e)));{let e={};for(let t in this.metrics)e[t]=Jo(ad(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=cc(e.optimizer_config),n=Qr(t),o;if(typeof e.loss=="string")o=Ga(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>Ga(a));else if(e.loss!=null){o={};for(let a in e.loss)o[a]=Ga(e.loss[a])}let s;if(Array.isArray(e.metrics))s=e.metrics.map(a=>Ga(a));else if(e.metrics!=null){s={};for(let a in e.metrics)s[a]=Ga(e.metrics[a])}this.compile({loss:o,metrics:s,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=Sr.getSaveHandlers(e);if(u.length===0)throw new B(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new B(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new B("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Sr.encodeWeights(this.getNamedWeights(t)),o=!1,s=null,i={modelTopology:this.toJSON(s,o),format:ZQ,generatedBy:`TensorFlow.js tfjs-layers v${Wp}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:c,specs:p}=await Sr.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...p),n.data=Sr.concatenateArrayBuffers([n.data,c])}if(this.userDefinedMetadata!=null){let u=!0;Z0(this.userDefinedMetadata,this.name,u),i.userDefinedMetadata=this.userDefinedMetadata}return i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){Z0(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Tn.className="Model";ee.registerClass(Tn);var tC=class extends Tn{};tC.className="Functional";ee.registerClass(tC);async function KL(r,e){"modelTopology"in r||(r={modelTopology:r}),r=r;let t=r.modelTopology;t.model_config!=null&&(t=t.model_config);let n=cc(t),o=Qr(n,e);if(r.weightsManifest!=null){let s=await Sr.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),De(s)}return o}async function XL(r,e){if(e==null&&(e={}),typeof r=="string"){let t=Sr.getLoadHandlers(r,e);if(t.length===0)t.push(Sr.browserHTTPRequest(r,e));else if(t.length>1)throw new B(`Found more than one (${t.length}) load handlers for URL '${r}'`);r=t[0]}return JQ(r,void 0,e)}async function JQ(r,e,t){if(t==null&&(t={}),r.load==null)throw new B("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=t.strict==null?!0:t.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=Qr(cc(o),e,a),l=n.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new B("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:c}=QQ(n.weightData,n.weightSpecs);i.loadWeights(u,s),i.optimizer!=null&&c.length>0&&await i.optimizer.setWeights(c),De(u),De(c.map(p=>p.tensor))}return i}function QQ(r,e){let t=Sr.decodeWeights(r,e),n={},o=[];return e.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:t[s.name]}):n[s.name]=t[s.name]}),{modelWeights:n,optimizerWeights:o}}var Yi=class extends Tn{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:kl("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new B(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Yi||e instanceof Tn,n;if(t){if(n=e,n.outputs.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new B("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new B("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=kx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new B(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new B("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=H0(this.outputs[0])}this.inboundNodes=[],new Cl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Zo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(tt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Tn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Br("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let s,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new B("Legacy serialization format not supported yet.");s=t}else y.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof Yi))throw new Te(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let l of s){let c=Qr(l,void 0,o);o&&c.setFastWeightInitDuringBuild(!0),i.add(c)}return i}set stopTraining(e){if(this.model==null)throw new B("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new B("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};Yi.className="Sequential";ee.registerClass(Yi);function YL(r){return new Tn(r)}function ZL(r){return new Yi(r)}function JL(r,e){return e==null&&(e={}),XL(r,e)}function Vx(r){return kx(r)}function QL(r,e){cn.registerCallbackConstructor(r,e)}var pn=class extends ee.Serializable{getConfig(){return{}}},rC=class extends pn{apply(e,t=1){return bL(e,t)}};rC.className="elu";ee.registerClass(rC);var nC=class extends pn{apply(e){return Lu(e)}};nC.className="selu";ee.registerClass(nC);var oC=class extends pn{apply(e){return Er(e)}};oC.className="relu";ee.registerClass(oC);var sC=class extends pn{apply(e){return V(()=>Bn(6,Er(e)))}};sC.className="relu6";ee.registerClass(sC);var iC=class extends pn{apply(e){return e}};iC.className="linear";ee.registerClass(iC);var aC=class extends pn{apply(e){return Hr(e)}};aC.className="sigmoid";ee.registerClass(aC);var lC=class extends pn{apply(e){return _L(e)}};lC.className="hardSigmoid";ee.registerClass(lC);var uC=class extends pn{apply(e){return Es(e)}};uC.className="softplus";ee.registerClass(uC);var cC=class extends pn{apply(e){return wL(e)}};cC.className="softsign";ee.registerClass(cC);var pC=class extends pn{apply(e){return Li(e)}};pC.className="tanh";ee.registerClass(pC);var ld=class extends pn{apply(e,t=-1){return Ra(e,t)}};ld.className="softmax";ee.registerClass(ld);var mC=class extends pn{apply(e,t=-1){return Du(e,t)}};mC.className="logSoftmax";ee.registerClass(mC);var fC=class extends pn{apply(e,t=1){return V(()=>Hr(e.mul(t)).mul(e))}};fC.className="swish";ee.registerClass(fC);function Bs(r){return r.getClassName()}function dC(r,e={}){return Ui(r,ee.SerializationMap.getMap().classNameMap,e,"activation")}function Vs(r){if(r==null){let e={};return e.className="linear",e.config={},dC(e)}if(typeof r=="string"){let e={};return e.className=r,e.config={},dC(e)}else return r instanceof pn?r:dC(r)}function hC(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var gC=class extends ee.Serializable{},mc=class extends gC{constructor(e){super();hC(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return V(()=>{let t=mt([1]);return this.hasL1&&(t=Q(t,we(P(this.l1,Et(e))))),this.hasL2&&(t=Q(t,we(P(this.l2,ac(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};mc.className="L1L2";ee.registerClass(mc);function ez(r){return hC(r),new mc({l1:r!=null?r.l1:null,l2:0})}function tz(r){return hC(r),new mc({l2:r!=null?r.l2:null,l1:0})}var rz={l1l2:"L1L2"};function ut(r){return Ip(r)}function nz(r,e={}){return Ui(r,ee.SerializationMap.getMap().classNameMap,e,"regularizer")}function vt(r){if(r==null)return null;if(typeof r=="string"){let t={className:r in rz?rz[r]:r,config:{}};return nz(t)}else return r instanceof gC?r:nz(r)}var ud=class extends Le{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Pe(e);let n=Er(e);return this.maxValue!=null&&(n=ar(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};ud.className="ReLU";ee.registerClass(ud);var cd=class extends Le{constructor(e){super(e==null?{}:e);this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Pe(e);return Na(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};cd.className="LeakyReLU";ee.registerClass(cd);var pd=class extends Le{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=gt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=vt(e.alphaRegularizer),this.alphaConstraint=Bt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new B(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=tt(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new At({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Pe(e),$a(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Nt(this.alphaInitializer),alphaRegularizer:ut(this.alphaRegularizer),alphaConstraint:zt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};pd.className="PReLU";ee.registerClass(pd);var md=class extends Le{constructor(e){super(e==null?{}:e);if(this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Te(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Pe(e);return Ns(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};md.className="ELU";ee.registerClass(md);var fd=class extends Le{constructor(e){super(e==null?{}:e);this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Pe(e);return n.mul(Ua(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};fd.className="ThresholdedReLU";ee.registerClass(fd);var dd=class extends Le{constructor(e){super(e==null?{}:e);this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new ld().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Pe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};dd.className="Softmax";ee.registerClass(dd);function Tl(r,e,t){if(typeof r=="number")return Zo(r,e);if(r.length!==e)throw new B(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let n=0;n<e;++n){let o=r[n];if(!dL(o))throw new B(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function mn(r,e,t,n,o=1){if(r==null)return r;let s=e+(e-1)*(o-1),a;return t==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function hd(r,e,t,n){if(r==null)return null;if(n==="valid")r=r*e+Ls([t-e,0]);else if(n==="same")r=r*e;else throw new B(`Unsupport padding mode: ${n}.`);return r}function gd(r,e){return V(()=>(Ft(e),e==="channelsFirst"?Ue(r,[0,2,3,1]):r))}function xC(r,e){return V(()=>(Ft(e),e==="channelsFirst"?Ue(r,[0,2,3,4,1]):r))}function eee(r,e,t,n=1,o="valid",s,a=1){return V(()=>{if(s==null&&(s=Zr()),Ft(s),r.shape.length!==3)throw new B(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(e.shape.length!==3)throw new B(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new B(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=Ue(r,[0,2,1])),o==="causal")throw new Te("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Iu(r,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=ln(i,t)),i})}function oz(r,e,t,n=[1,1],o="valid",s,a,i=null){return V(()=>{if(s==null&&(s=Zr()),Ft(s),r.rank!==3&&r.rank!==4)throw new B(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(e.rank!==3&&e.rank!==4)throw new B(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=gd(r,s);if(o==="causal")throw new Te("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Wo.conv2d({x:l,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),s==="channelsFirst"&&(l=Ue(l,[0,3,1,2])),l})}function tee(r,e,t,n=[1,1,1],o="valid",s,a){return V(()=>{if(s==null&&(s=Zr()),Ft(s),r.rank!==4&&r.rank!==5)throw new B(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(e.rank!==4&&e.rank!==5)throw new B(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=xC(r,s);if(o==="causal")throw new Te("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Mm(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=ln(i,t)),s==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}var Gp=class extends Le{constructor(e,t){super(t);if(this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Gp.verifyArgs(t),this.rank=e,Kt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Te(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Tl(t.kernelSize,e,"kernelSize"),this.strides=Tl(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Jr(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ft(this.dataFormat),this.activation=Vs(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Bt(t.biasConstraint),this.biasRegularizer=vt(t.biasRegularizer),this.activityRegularizer=vt(t.activityRegularizer),this.dilationRate=Tl(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new B(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new B(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new B(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Wn("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!fx(e.kernelSize,"number",1,3))throw new B(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Bs(this.activation),useBias:this.useBias,biasInitializer:Nt(this.biasInitializer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},fc=class extends Gp{constructor(e,t){super(e,t);this.kernel=null,fc.verifyArgs(t),this.filters=t.filters,Kt(this.filters,"filters"),this.kernelInitializer=gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Bt(t.kernelConstraint),this.kernelRegularizer=vt(t.kernelRegularizer)}build(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return V(()=>{e=Pe(e);let n,o=this.bias==null?null:this.bias.read(),s=dx(this.activation.getClassName());if(s!=null&&this.rank===2)n=oz(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=eee(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=oz(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=tee(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Te("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=tt(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){let a=mn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){let e={filters:this.filters,kernelInitializer:Nt(this.kernelInitializer),kernelRegularizer:ut(this.kernelRegularizer),kernelConstraint:zt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new B(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},El=class extends fc{constructor(e){super(2,e);El.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!fx(e.kernelSize,"number",1,2))throw new B(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};El.className="Conv2D";ee.registerClass(El);var dc=class extends fc{constructor(e){super(3,e);dc.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new B(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};dc.className="Conv3D";ee.registerClass(dc);var xd=class extends El{constructor(e){super(e);if(this.inputSpec=[new At({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new B(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=tt(e),e.length!==4)throw new B("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new B("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new At({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return V(()=>{let n=Pe(e);if(n.shape.length!==4)throw new B(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let l=o[a],u=o[i],c=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],f=this.strides[1],d=hd(l,m,c,this.padding),h=hd(u,f,p,this.padding),g=[s,d,h,this.filters];this.dataFormat!=="channelsLast"&&(n=Ue(n,[0,2,3,1]));let x=Su(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ue(x,[0,3,1,2])),this.bias!=null&&(x=ln(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=tt(e);let t=e.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[o]=hd(t[o],l,a,this.padding),t[s]=hd(t[s],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};xd.className="Conv2DTranspose";ee.registerClass(xd);var yC=class extends fc{constructor(e,t){super(e,t);if(this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new B("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new B("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new B(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=vt(t.depthwiseRegularizer),this.depthwiseConstraint=Bt(t.depthwiseConstraint),this.pointwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=vt(t.pointwiseRegularizer),this.pointwiseConstraint=Bt(t.pointwiseConstraint)}build(e){if(e=tt(e),e.length<this.rank+2)throw new B(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new At({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return V(()=>{e=Pe(e);let n;if(this.rank===1)throw new Te("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),n=Ym(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=ln(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ue(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Nt(this.depthwiseInitializer),e.pointwiseInitializer=Nt(this.pointwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.pointwiseRegularizer=ut(this.pointwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseConstraint),e.pointwiseConstraint=zt(this.pointwiseConstraint),e}};yC.className="SeparableConv";var yd=class extends yC{constructor(e){super(2,e)}};yd.className="SeparableConv2D";ee.registerClass(yd);var hc=class extends fc{constructor(e){super(1,e);hc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!fx(e.kernelSize,"number",1,1))throw new B(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};hc.className="Conv1D";ee.registerClass(hc);var bd=class extends Le{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return V(()=>{if(e=Pe(e),this.dataFormat==="channelsLast"){let n=Uf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Uf(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Uf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Uf(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};bd.className="Cropping2D";ee.registerClass(bd);var wd=class extends Le{constructor(e){super(e);this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ft(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,pL(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return V(()=>{let n=Pe(e),o=n.shape;if(this.dataFormat==="channelsFirst"){n=Ue(n,[0,2,3,1]);let s=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?n.resizeNearestNeighbor([s,a]):n.resizeBilinear([s,a]);return Ue(i,[0,3,1,2])}else{let s=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?n.resizeNearestNeighbor([s,a]):n.resizeBilinear([s,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};wd.className="UpSampling2D";ee.registerClass(wd);function ree(r,e,t=[1,1],n="valid",o,s){return V(()=>{o==null&&(o=Zr()),Ft(o);let a=gd(r,o);if(r.rank!==4)throw new B(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(e.rank!==4)throw new B(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Ln(a,e,t,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=Ue(a,[0,3,1,2])),a})}var _d=class extends Gp{constructor(e){super(2,e);this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=gt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Bt(e.depthwiseConstraint),this.depthwiseRegularizer=vt(e.depthwiseRegularizer)}build(e){if(e=tt(e),e.length<4)throw new B(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new B(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{e=Pe(e);let n=ree(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=ln(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=mn(t,this.kernelSize[0],this.padding,this.strides[0]),a=mn(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,s,a]:[e[0],s,a,o]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Nt(this.depthwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseRegularizer),e}};_d.className="DepthwiseConv2D";ee.registerClass(_d);function bC(r,e,t,n){if(Array.isArray(r)){if(e!=null||t!=null)throw new B("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return e=o(e),t=o(t),{inputs:r,initialState:e,constants:t}}function wC(r,e,t,n=!1,o,s,a=!1,i=!1){return V(()=>{let l=e.shape.length;if(l<3)throw new B(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Vr(2,l));if(e=Ue(e,u),s!=null)throw new Te("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=o.asType("bool").asType("float32"),o.rank===l-1&&(o=wr(o,-1)),o=Ue(o,u)),n&&(e=Zt(e,0),o!=null&&(o=Zt(o,0)));let c=[],p,m=t,f=e.shape[0],d=pr(e),h;o!=null&&(h=pr(o));for(let x=0;x<f;++x){let b=d[x],w=V(()=>r(b,m));if(o==null)p=w[0],m=w[1];else{let _=V(()=>{let k=h[x],E=nr(k).sub(k),T=w[0].mul(k).add(m[0].mul(E)),F=m.map((O,M)=>w[1][M].mul(k).add(O.mul(E)));return{output:T,newStates:F}});p=_.output,m=_.newStates}i&&c.push(p)}let g;return i&&(g=jt(c,1)),[p,g,m]})}var fn=class extends Le{constructor(e){super(e);let t;if(e.cell==null)throw new B("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Up({cells:e.cell}):t=e.cell,t.stateSize==null)throw new B("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new At({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Vr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){vx(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){let s=[];for(let a of t)s.push([e[0],a]);return[o].concat(s)}else return o}computeMask(e,t){return V(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){let t=null;if(this.numConstants!=null)throw new Te("Constants support is not implemented in RNN yet.");vx(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new At({shape:[n,null,...o]});let s=[e[0]].concat(e.slice(2));if(t!=null)throw new Te("Constants support is not implemented in RNN yet.");this.cell.build(s);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new B(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new At({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Nn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>mt([n,o])):this.states_=[mt([n,this.cell.stateSize])];else if(e==null)De(this.states_),this.keptStates!=null&&(De(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>mt([n,o])):this.states_[0]=mt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):De(this.states_);for(let o=0;o<this.states_.length;++o){let s=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!y.arraysEqual(s.shape,i))throw new B(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>Dt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=bC(e,n,o,this.numConstants);e=s.inputs,n=s.initialState,o=s.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new At({shape:u.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof jr){let u=[e].concat(a),c=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return V(()=>{let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;e=Pe(e),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new B(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:o},u=wC((d,h)=>{let g=this.cell.call([d].concat(h),i);return[g[0],g.slice(1)]},e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),c=u[0],p=u[1],m=u[2];this.stateful&&this.resetStates(m,o);let f=this.returnSequences?p:c;return this.returnState?[f].concat(m):f})}getInitialState(e){return V(()=>{let t=mt(e.shape);return t=we(t,[1,2]),t=qa(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?xx(t,[1,n]):t):this.cell.stateSize>1?[xx(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===fn.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){let o=t.cell,s=Qr(o,n);return new e(Object.assign(t,{cell:s}))}};fn.className="RNN";ee.registerClass(fn);var Al=class extends Le{},qp=class extends Al{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Kt(this.units,"units"),this.activation=Vs(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=ic([1,Ls([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ic([1,Ls([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new B(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ka({ones:()=>nr(e),rate:this.dropout,training:o})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ka({ones:()=>nr(n),rate:this.recurrentDropout,training:o}));let s,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?s=rs(P(e,a),this.kernel.read()):s=rs(e,this.kernel.read()),this.bias!=null&&(s=ln(s,this.bias.read())),i!=null&&(n=P(n,i));let l=Q(s,rs(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Bs(this.activation),useBias:this.useBias,kernelInitializer:Nt(this.kernelInitializer),recurrentInitializer:Nt(this.recurrentInitializer),biasInitializer:Nt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}};qp.className="SimpleRNNCell";ee.registerClass(qp);var vd=class extends fn{constructor(e){e.cell=new qp(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return new e(t)}};vd.className="SimpleRNN";ee.registerClass(vd);var Hp=class extends Al{constructor(e){super(e);if(this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new B("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Kt(this.units,"units"),this.activation=Vs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=ic([1,Ls([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ic([1,Ls([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=tt(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new B(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ka({ones:()=>nr(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ka({ones:()=>nr(o),rate:this.recurrentDropout,training:n,count:3}));let s=this.dropoutMask,a=this.recurrentDropoutMask,i,l,u;0<this.dropout&&this.dropout<1&&(e=P(e,s[0]));let c=rs(e,this.kernel.read());this.useBias&&(c=ln(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=P(o,a[0]));let p=this.recurrentKernel.read(),[m,f]=cr(p,[2*this.units,this.units],p.rank-1),d=rs(o,m),[h,g,x]=cr(c,3,c.rank-1),[b,w]=cr(d,2,d.rank-1);i=this.recurrentActivation.apply(Q(h,b)),l=this.recurrentActivation.apply(Q(g,w));let _=rs(P(l,o),f);u=this.activation.apply(Q(x,_));let k=Q(P(i,o),P(Q(1,qe(i)),u));return[k,k]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Bs(this.activation),recurrentActivation:Bs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Nt(this.kernelInitializer),recurrentInitializer:Nt(this.recurrentInitializer),biasInitializer:Nt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}};Hp.className="GRUCell";ee.registerClass(Hp);var kd=class extends fn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hp(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};kd.className="GRU";ee.registerClass(kd);var Dl=class extends Al{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Kt(this.units,"units"),this.activation=Vs(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vs(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=vt(e.kernelRegularizer),this.recurrentRegularizer=vt(e.recurrentRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=ic([1,Ls([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ic([1,Ls([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=tt(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,a=this.units;o=new(t=class extends un{apply(l,u){let c=s.apply([a]),p=new lc().apply([a]),m=s.apply([a*2]);return G0(G0(c,p),m)}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return V(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new B(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ka({ones:()=>nr(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ka({ones:()=>nr(o),rate:this.recurrentDropout,training:n,count:4}));let a=this.dropoutMask,i=this.recurrentDropoutMask,l,u,c,p;0<this.dropout&&this.dropout<1&&(e=P(e,a[0]));let m=rs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=P(o,i[0])),m=Q(m,rs(o,this.recurrentKernel.read())),this.useBias&&(m=ln(m,this.bias.read()));let[f,d,h,g]=cr(m,4,m.rank-1);l=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(d),c=Q(P(u,s),P(l,this.activation.apply(h))),p=this.recurrentActivation.apply(g);let x=P(p,this.activation.apply(c));return[x,x,c]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Bs(this.activation),recurrentActivation:Bs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Nt(this.kernelInitializer),recurrentInitializer:Nt(this.recurrentInitializer),biasInitializer:Nt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}};Dl.className="LSTMCell";ee.registerClass(Dl);var Cd=class extends fn{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Dl(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Cd.className="LSTM";ee.registerClass(Cd);var Up=class extends Al{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return V(()=>{e=e;let n=e.slice(1),o=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],a;for(let i=0;i<this.cells.length;++i){let l=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=l.call(a,t),s.push(a.slice(1))}n=[];for(let i of s.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){vx(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{Ms(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(t)};return Object.assign({},e,o)}static fromConfig(e,t,n={}){let o=[];for(let s of t.cells)o.push(Qr(s,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return ed(e)}setWeights(e){let t=[];for(let n of this.cells){let o=n.weights.length,s=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],s[a]])}Lp(t)}};Up.className="StackedRNNCells";ee.registerClass(Up);function Ka(r){let{ones:e,rate:t,training:n=!1,count:o=1}=r,s=()=>bx(e(),t),a=()=>vl(s,e,n);return!o||o<=1?Dt(a().clone()):Array(o).fill(void 0).map(a).map(l=>Dt(l.clone()))}var nee=function(r,e){var t={};for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&e.indexOf(n)<0&&(t[n]=r[n]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,n=Object.getOwnPropertySymbols(r);o<n.length;o++)e.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(r,n[o])&&(t[n[o]]=r[n[o]]);return t};var _C=class extends fn{constructor(e){if(e.unroll)throw new Te("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Te("It is not possible at the moment to stack convolutional cells.");super(e);this.inputSpec=[new At({ndim:5})]}call(e,t){return V(()=>{if(this.cell.dropoutMask!=null&&(De(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(De(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new B("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,o=t==null?null:t.training,s=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:s})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return V(()=>{let{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=mt(s);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Nn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new B("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>mt(s)):this.states_=[mt(s)];else if(e==null)De(this.states_),this.keptStates!=null&&(De(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>mt(s)):this.states_[0]=mt(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new B(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):De(this.states_);for(let i=0;i<this.states_.length;++i){let l=e[i],u=s;if(!y.arraysEqual(l.shape,u))throw new B(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[i]=l}}this.states_=this.states_.map(i=>Dt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,l=t==="channelsFirst",u=e[l?3:2],c=e[l?4:3],p=mn(u,o[0],s,a[0],i[0]),m=mn(c,o[1],s,a[1],i[1]);return[...e.slice(0,2),...l?[n,p,m]:[p,m,n]]}};_C.className="ConvRNN2D";var Kp=class extends Dl{constructor(e){let{filters:t,kernelSize:n,strides:o,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t}));this.filters=t,Kt(this.filters,"filters"),this.kernelSize=Tl(n,2,"kernelSize"),this.kernelSize.forEach(l=>Kt(l,"kernelSize")),this.strides=Tl(o||1,2,"strides"),this.strides.forEach(l=>Kt(l,"strides")),this.padding=s||"valid",Jr(this.padding),this.dataFormat=a||"channelsLast",Ft(this.dataFormat),this.dilationRate=Tl(i||1,2,"dilationRate"),this.dilationRate.forEach(l=>Kt(l,"dilationRate"))}build(e){var t;e=tt(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new B(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=4,a=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let u=this.biasInitializer,c=this.filters;l=new(t=class extends un{apply(m,f){let d=u.apply([c]),h=Tr([c]),g=u.apply([c*2]);return Tp([d,h,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return V(()=>{if(e.length!==3)throw new B(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,o=e[0],s=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ka({ones:()=>nr(o),rate:this.dropout,training:n,count:i}));let l=this.dropoutMask,u=(ae,ie,pe)=>!ie||!ie[pe]?ae:P(ie[pe],ae),c=u(o,l,0),p=u(o,l,1),m=u(o,l,2),f=u(o,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ka({ones:()=>nr(s),rate:this.recurrentDropout,training:n,count:i}));let d=this.recurrentDropoutMask,h=u(s,d,0),g=u(s,d,1),x=u(s,d,2),b=u(s,d,3),w=3,[_,k,E,T]=cr(this.kernel.read(),i,w),[F,O,M,j]=this.useBias?cr(this.bias.read(),i):[null,null,null,null];c=this.inputConv(c,_,F,this.padding),p=this.inputConv(p,k,O,this.padding),m=this.inputConv(m,E,M,this.padding),f=this.inputConv(f,T,j,this.padding);let[W,U,Y,K]=cr(this.recurrentKernel.read(),i,w);h=this.recurrentConv(h,W),g=this.recurrentConv(g,U),x=this.recurrentConv(x,Y),b=this.recurrentConv(b,K);let Z=this.recurrentActivation.apply(Q(c,h)),re=this.recurrentActivation.apply(Q(p,g)),X=Q(P(re,a),P(Z,this.activation.apply(Q(m,x)))),oe=P(this.recurrentActivation.apply(Q(f,b)),this.activation.apply(X));return[oe,oe,X]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=nee(e,["units"]),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,o)}inputConv(e,t,n,o){let s=Kr(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?ln(s,n,this.dataFormat):s}recurrentConv(e,t){return Kr(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Kp.className="ConvLSTM2DCell";ee.registerClass(Kp);var Id=class extends _C{constructor(e){let t=new Kp(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}};Id.className="ConvLSTM2D";ee.registerClass(Id);var Xp=class extends Le{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e);if(0<this.rate&&this.rate<1){let o=t.training==null?!1:t.training,s=this.getNoiseShape(n);return vl(()=>bx(n,this.rate,s,this.seed),()=>n,o)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Xp.className="Dropout";ee.registerClass(Xp);var Sd=class extends Xp{constructor(e){super(e);this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Sd.className="SpatialDropout1D";ee.registerClass(Sd);var Nd=class extends Le{constructor(e){super(e);if(this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Kt(this.units,"units"),this.activation=Vs(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Bt(e.kernelConstraint),this.biasConstraint=Bt(e.biasConstraint),this.kernelRegularizer=vt(e.kernelRegularizer),this.biasRegularizer=vt(e.biasRegularizer),this.activityRegularizer=vt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=tt(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=tt(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e),o=dx(this.activation.getClassName()),s;return o!=null?s=rs(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=rs(n,this.kernel.read()),this.bias!=null&&(s=ln(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let e={units:this.units,activation:Bs(this.activation),useBias:this.useBias,kernelInitializer:Nt(this.kernelInitializer),biasInitializer:Nt(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Nd.className="Dense";ee.registerClass(Nd);var Td=class extends Le{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=tt(e);for(let t of e.slice(1))if(t==null)throw new B(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ts(e,1)]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=n.transpose(o)}return yL(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Td.className="Flatten";ee.registerClass(Td);var Ed=class extends Le{constructor(e){super(e);this.supportsMasking=!0,this.activation=Vs(e.activation)}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Bs(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Ed.className="Activation";ee.registerClass(Ed);var Ad=class extends Le{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return V(()=>(e=Pe(e),gL(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Ad.className="RepeatVector";ee.registerClass(Ad);var Dd=class extends Le{constructor(e){super(e);this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",o=t.slice(),s=1,a=null;for(let l=0;l<o.length;++l){let u=o[l];if(this.isUnknown(u))if(a===null)a=l;else throw new B("Can only specifiy one unknown dimension.");else s*=u}let i=ts(e);if(a!==null){if(s===0||i%s!=0)throw new B(n);o[a]=i/s}else if(i!==s)throw new B(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Dd.className="Reshape";ee.registerClass(Dd);var $d=class extends Le{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Vr(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new At({ndim:this.dims.length+1})]}computeOutputShape(e){e=tt(e);let t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return Ue(Pe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};$d.className="Permute";ee.registerClass($d);var Rd=class extends Le{constructor(e){super(e==null?{}:e);this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Pe(e),o=-1;return ll(kn(n,this.maskValue),o)}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e),o=-1,s=!0,a=ll(kn(n,this.maskValue),o,s);return n.mul(a.asType(n.dtype))})}};Rd.className="Masking";ee.registerClass(Rd);var Fd=class extends Le{constructor(e){super(e);if(this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(_t(e.inputLength))}this.inputDim=e.inputDim,Kt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Kt(this.outputDim,"outputDim"),this.embeddingsInitializer=gt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=vt(e.embeddingsRegularizer),this.activityRegularizer=vt(e.activityRegularizer),this.embeddingsConstraint=Bt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return V(()=>this.maskZero?(e=Pe(e),kn(e,Se(e))):null)}computeOutputShape(e){if(e=tt(e),this.inputLength==null)return[...e,this.outputDim];let t=_t(this.inputLength);if(t.length!==e.length-1)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){let s=t[o],a=e[o+1];if(s!=null&&a!=null&&s!==a)throw new B(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);s==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e);return n.dtype!=="int32"&&(n=Ua(n,"int32")),yx(this.embeddings.read(),n.as1D()).reshape(tt(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Nt(this.embeddingsInitializer),embeddingsRegularizer:ut(this.embeddingsRegularizer),activityRegularizer:ut(this.activityRegularizer),embeddingsConstraint:zt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Fd.className="Embedding";ee.registerClass(Fd);var $l=class extends Le{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Te}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){let s=e[e.length-t.length+o],a=t[o];if(s==null||a==null||s<0||a<0)n.push(null);else if(s===1)n.push(a);else if(a===1)n.push(s);else{if(s!==a)throw new B("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[tt(e)]),e=e,e.length<2)throw new B(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let s of e)s!=null&&s[0]!==null&&t.push(s[0]);if(t=es(t),t.length>1)throw new B(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=e.map(s=>s.length);e.indexOf(null)===-1&&es(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return V(()=>{if(e=e,this.reshapeRequired){let n=[],o=e.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Ls(o);for(let a of e){let i=a.rank;for(let l=0;l<s-i;++l)a=qa(a,1);n.push(a)}return this.mergeFunction(n)}else{let s=!1;for(let l of e){let u=l.rank;if(u==null){let c=l.shape,p=c[0],m=c.slice(1).concat([p]),f=l.reshape([p].concat(ts(c.slice(1))));f=Ue(f,[1,0]),f=f.reshape(m),n.push(f),s=!0}else if(u>1){let c=Vr(1,u).concat([0]);n.push(Ue(l,c)),s=!0}else n.push(l)}let a=this.mergeFunction(n),i=a.rank;if(s){if(i==null){let l=a.shape,u=l.length,c=l[u-1],p=[c].concat(l.slice(0,l.length-1));a=Ue(a.reshape([-1,c]),[1,0]).reshape(p)}else if(i>1){let l=[i-1].concat(Vr(0,i-1));a=Ue(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){let s=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(let o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=es(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return V(()=>{if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an Array");if(!Array.isArray(e))throw new B("`inputs` should be an Array");if(t.length!==e.length)throw new B(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:wr(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=hr(n,t[o]);return n})}},Od=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Q(t,e[n]);return t})}};Od.className="Add";ee.registerClass(Od);var Pd=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=P(t,e[n]);return t})}};Pd.className="Multiply";ee.registerClass(Pd);var Md=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Q(t,e[n]);return P(1/e.length,t)})}};Md.className="Average";ee.registerClass(Md);var Ld=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Nr(t,e[n]);return t})}};Ld.className="Maximum";ee.registerClass(Ld);var zd=class extends $l{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Bn(t,e[n]);return t})}};zd.className="Minimum";ee.registerClass(zd);var Bd=class extends $l{constructor(e){super(e);this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new B("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let o of e)if(o!=null){t=!1;break}if(t)return;let n=[];for(let o=0;o<e.length;++o){let s=e[o].slice();s.splice(this.axis,1);let a=!1;for(let i of n)if(y.arraysEqual(i,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new B("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return V(()=>Tp(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new B("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of t.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new B("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new B("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new B(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return V(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(nr(e[a]).asType("bool")):t[a].rank<e[a].rank?o.push(wr(t[a],-1)):o.push(t[a]);let s=et(o,this.axis);return vu(s,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Bd.className="Concatenate";ee.registerClass(Bd);function Vd(r,e){for(;r<0;)r+=e;return r}function oee(r,e,t){if(r.shape.length>3||e.shape.length>3)throw new Te("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),r.dtype==="complex64"||e.dtype==="complex64")throw new Te("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);let s=t;return V(()=>{let a;if(n>o){a=n-o;let l=[];for(let u=0;u<a;++u)l.push(1);e=e.reshape(e.shape.concat(l))}else if(o>n){a=o-n;let l=[];for(let u=0;u<a;++u)l.push(1);r=r.reshape(r.shape.concat(l))}else a=0;let i;if(r.shape.length===2&&e.shape.length===2)s[0]===s[1]?i=r.mul(e).sum(s[0]):i=r.transpose([1,0]).mul(e).sum(s[1]);else{let l=s[0]!==r.shape.length-1,u=s[1]===e.shape.length-1;i=r.matMul(e,l,u)}if(a>0){let l;n>o?l=n+o-3:l=n-1;let u=[];for(let c=l;c<l+a;++c)u.push(c);i=i.squeeze(u)}return i.shape.length===1&&(i=i.expandDims(1)),i})}var Wd=class extends $l{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Te("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new B(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new B(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,a)=>Vd(s,e[a].shape.length)):o=[Vd(this.axes,t.shape.length),Vd(this.axes,n.shape.length)],this.normalize&&(t=td(t,o[0]),n=td(n,o[1])),oee(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Vd(this.axes,e.length),Vd(this.axes,t.length)],n}computeOutputShape(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Te("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=t.concat(n);return s.length===1&&s.push(1),s}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Wd.className="Dot";ee.registerClass(Wd);var jd=class extends Le{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e);return vl(()=>Ep(n.shape,0,this.stddev).add(n),()=>n,t.training||!1)})}};jd.className="GaussianNoise";ee.registerClass(jd);var Gd=class extends Le{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);let n=Pe(e);return this.rate>0&&this.rate<1?vl(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return n.mul(Ep(n.shape,1,s))},()=>n,t.training||!1):n})}};Gd.className="GaussianDropout";ee.registerClass(Gd);var Ud=class extends Le{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Pe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return vl(()=>{let s=Pe(e),a=1.6732632423543772,i=1.0507009873554805,l=-a*i,u=Pr(As(n),this.rate);u=Ua(u,"float32");let c=((1-this.rate)*(1+this.rate*l**2))**-.5,p=-c*l*this.rate;return s.mul(u).add(u.add(-1).mul(l)).mul(c).add(p)},()=>Pe(e),t.training||!1)}return e})}};Ud.className="AlphaDropout";ee.registerClass(Ud);function qd(r,e,t,n,o,s=.001){let a;if(r.rank===2)a=ww(r,e,t,n,o,s);else if(r.rank===3)a=_w(r,e,t,n,o,s);else if(r.rank===4)a=vw(r,e,t,n,o,s);else throw new Te(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function see(r,e,t,n,o=.001){return V(()=>{let s=Yc(r,n),a=s.mean,i=s.variance;return[qd(r,a,i,t,e,o),a,i]})}function iee(r,e,t,n,o=.001){return V(()=>{let s=Yc(r,n),a=s.mean,i=s.variance,l=[];for(let d of Vr(0,r.rank))n.indexOf(d)!==-1?l.push(1):l.push(r.shape[d]);let u=a.reshape(l),c=i.reshape(l),p=e==null?null:e.reshape(l),m=t==null?null:t.reshape(l);return[qd(r,u,c,m,p,o),a,i]})}function aee(r,e,t,n,o=.001){return y.arraysEqual(n.slice().sort(),Vr(0,r.rank-1))?see(r,e,t,n,o):iee(r,e,t,n,o)}var Hd=class extends Le{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.movingMeanInitializer=gt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Bt(e.betaConstraint),this.gammaConstraint=Bt(e.gammaConstraint),this.betaRegularizer=vt(e.betaRegularizer),this.gammaRegularizer=vt(e.gammaRegularizer)}build(e){e=tt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new B(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new At({ndim:e.length,axes:{[t]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return V(()=>{let n=t.training==null?!1:t.training,o=Pe(e),s=o.shape,a=s.length,i=Vr(0,a),l=this.axis>=0?this.axis:this.axis+a;i.splice(l,1);let u=Zo(1,a);u[l]=s[l];let c=i.slice();c.sort();let p=!y.arraysEqual(c,Vr(0,a).slice(0,a-1)),m=()=>{if(p){let b=this.movingMean.read().reshape(u),w=this.movingVariance.read().reshape(u),_=this.center?this.beta.read().reshape(u):null,k=this.scale?this.gamma.read().reshape(u):null;return qd(o,b,w,_,k,this.epsilon)}else return qd(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return m();let[f,d,h]=aee(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(b,w,_)=>{V(()=>{let k=1-_,E=b.read(),T=E.sub(w).mul(k);b.write(E.sub(T))})};return(()=>{g(this.movingMean,d,this.momentum),g(this.movingVariance,h,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Nt(this.betaInitializer),gammaInitializer:Nt(this.gammaInitializer),movingMeanInitializer:Nt(this.movingMeanInitializer),movingVarianceInitializer:Nt(this.movingVarianceInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer),betaConstraint:zt(this.betaConstraint),gammaConstraint:zt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Hd.className="BatchNormalization";ee.registerClass(Hd);var Kd=class extends Le{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.betaRegularizer=vt(e.betaRegularizer),this.gammaRegularizer=vt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=tt(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(let s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==es(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>e[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){let n=Pe(e),o=n.shape,s=o.length;return V(()=>{let a=!0,{mean:i,variance:l}=Yc(n,this.axis,a),u=Zo(1,s);for(let h of this.axis)u[h]=o[h];let c=h=>h!=null&&h.shape.length!==s&&this.axis!==[s-1]?h.reshape(u):h,p=c(this.gamma.read()),m=c(this.beta.read()),f=[],d=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(f.push(o[h]),d.push(1)):(f.push(1),d.push(o[h]));return i=i.tile(f),l=l.tile(f),p=p.tile(d),m=m.tile(d),qd(n,i,l,m,p,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Nt(this.betaInitializer),gammaInitializer:Nt(this.gammaInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Kd.className="LayerNormalization";ee.registerClass(Kd);function lee(r,e,t){return V(()=>{if(r.rank!==4)throw new B(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new B("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Zr()),t!=="channelsLast"&&t!=="channelsFirst")throw new B(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],Mr(r,n)})}var Xd=class extends Le{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Zr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new B(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new B(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new B(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=tt(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return V(()=>lee(Pe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Xd.className="ZeroPadding2D";ee.registerClass(Xd);function Wx(r,e,t,n,o,s){return V(()=>{Ft(o),W0(s),Jr(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=Zr()),s==null&&(s="max"),r=gd(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=Aa(r,e,t,i):a=ka(r,e,t,i),o==="channelsFirst"&&(a=Ue(a,[0,3,1,2])),a})}function sz(r,e,t,n,o,s){return V(()=>{Ft(o),W0(s),Jr(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=Zr()),s==null&&(s="max"),r=xC(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=qm(r,e,t,i):a=Om(r,e,t,i),o==="channelsFirst"&&(a=Ue(a,[0,4,1,2,3])),a})}var vC=class extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new B(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Kt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new B(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Jr(this.padding),this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){e=tt(e);let t=mn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return V(()=>{this.invokeCallHook(e,t),e=qa(Pe(e),2);let n=this.poolingFunction(Pe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Cn(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Yd=class extends vC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Jr(o),Wx(e,t,n,o,s,"max")}};Yd.className="MaxPooling1D";ee.registerClass(Yd);var Zd=class extends vC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Jr(o),Wx(e,t,n,o,s,"avg")}};Zd.className="AveragePooling1D";ee.registerClass(Zd);var kC=class extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new B(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Kt(this.poolSize,"poolSize"),Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ft(this.dataFormat),Jr(this.padding),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=mn(t,this.poolSize[0],this.padding,this.strides[0]),n=mn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(Pe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Jd=class extends kC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Jr(o),Wx(e,t,n,o,s,"max")}};Jd.className="MaxPooling2D";ee.registerClass(Jd);var Qd=class extends kC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Jr(o),Wx(e,t,n,o,s,"avg")}};Qd.className="AveragePooling2D";ee.registerClass(Qd);var CC=class extends Le{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new B(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Kt(this.poolSize,"poolSize"),Kt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ft(this.dataFormat),Jr(this.padding),this.inputSpec=[new At({ndim:5})]}computeOutputShape(e){e=tt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=mn(t,this.poolSize[0],this.padding,this.strides[0]),n=mn(n,this.poolSize[1],this.padding,this.strides[1]),o=mn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(Pe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},eh=class extends CC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Jr(o),sz(e,t,n,o,s,"max")}};eh.className="MaxPooling3D";ee.registerClass(eh);var th=class extends CC{constructor(e){super(e)}poolingFunction(e,t,n,o,s){return Ft(s),Jr(o),sz(e,t,n,o,s,"avg")}};th.className="AveragePooling3D";ee.registerClass(th);var IC=class extends Le{constructor(e){super(e);this.inputSpec=[new At({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Te}},rh=class extends IC{constructor(e){super(e||{})}call(e,t){return V(()=>{let n=Pe(e);return yt(n,1)})}};rh.className="GlobalAveragePooling1D";ee.registerClass(rh);var nh=class extends IC{constructor(e){super(e||{})}call(e,t){return V(()=>{let n=Pe(e);return ur(n,1)})}};nh.className="GlobalMaxPooling1D";ee.registerClass(nh);var SC=class extends Le{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ft(this.dataFormat),this.inputSpec=[new At({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Te}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},oh=class extends SC{call(e,t){return V(()=>{let n=Pe(e);return this.dataFormat==="channelsLast"?yt(n,[1,2]):yt(n,[2,3])})}};oh.className="GlobalAveragePooling2D";ee.registerClass(oh);var sh=class extends SC{call(e,t){return V(()=>{let n=Pe(e);return this.dataFormat==="channelsLast"?ur(n,[1,2]):ur(n,[2,3])})}};sh.className="GlobalMaxPooling2D";ee.registerClass(sh);var NC=class extends Le{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let o=t.layer,s=Qr(o,n);delete t.layer;let a={layer:s};return Object.assign(a,t),new e(a)}},ih=class extends NC{constructor(e){super(e);this.supportsMasking=!0}build(e){if(e=tt(e),e.length<3)throw new B(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=tt(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return V(()=>(e=Pe(e),wC((a,i)=>[Pe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};ih.className="TimeDistributed";ee.registerClass(ih);function uee(r){qi(cL,"BidirectionalMergeMode",r)}var cee="concat",ah=class extends NC{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Qr(n),t.goBackwards=t.goBackwards!==!0;let o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=Qr(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?cee:e.mergeMode,uee(this.mergeMode),e.weights)throw new Te("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,s;return this.returnState&&(s=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):xr(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});let s=bC(e,n,o,this.numConstants);if(e=s.inputs,n=s.initialState,o=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new B("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let c=n.map(p=>new At({shape:p.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),i.push(...c)}if(o!=null)throw new Te("Support for constants in Bidirectional layers is not implemented yet.");let l=a[0]instanceof jr;for(let u of a)if(u instanceof jr!==l)throw new B("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let u=[e].concat(a),c=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,t);return this.inputSpec=p,m}else return super.apply(e,t)}call(e,t){return V(()=>{let n=t.initialState,o,s;if(n==null)o=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{let l=n.slice(0,n.length/2),u=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=Zt(s,1));let i;return this.mergeMode==="concat"?i=Tp([o,s]):this.mergeMode==="sum"?i=Q(o,s):this.mergeMode==="ave"?i=P(.5,Q(o,s)):this.mergeMode==="mul"?i=P(o,s):this.mergeMode==null&&(i=[o,s]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ms(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ms(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Qr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Te("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=t;return o.layer=n,new e(o)}};ah.className="Bidirectional";ee.registerClass(ah);function pee(r){return new Hi(r)}function mee(r){return new md(r)}function fee(r){return new ud(r)}function dee(r){return new cd(r)}function hee(r){return new pd(r)}function gee(r){return new dd(r)}function xee(r){return new fd(r)}function yee(r){return new hc(r)}function bee(r){return new El(r)}function wee(r){return new xd(r)}function _ee(r){return new dc(r)}function vee(r){return new yd(r)}function kee(r){return new bd(r)}function Cee(r){return new wd(r)}function Iee(r){return new _d(r)}function See(r){return new Ed(r)}function Nee(r){return new Nd(r)}function Tee(r){return new Xp(r)}function Eee(r){return new Sd(r)}function Aee(r){return new Td(r)}function Dee(r){return new Ad(r)}function $ee(r){return new Dd(r)}function Ree(r){return new $d(r)}function Fee(r){return new Fd(r)}function Oee(r){return new Od(r)}function Pee(r){return new Md(r)}function Mee(r){return new Bd(r)}function Lee(r){return new Ld(r)}function zee(r){return new zd(r)}function Bee(r){return new Pd(r)}function Vee(r){return new Wd(r)}function Wee(r){return new Hd(r)}function jee(r){return new Kd(r)}function Gee(r){return new Xd(r)}function EC(r){return new Zd(r)}function Uee(r){return EC(r)}function qee(r){return EC(r)}function AC(r){return new Qd(r)}function Hee(r){return AC(r)}function Kee(r){return AC(r)}function DC(r){return new th(r)}function Xee(r){return DC(r)}function Yee(r){return DC(r)}function Zee(r){return new rh(r)}function Jee(r){return new oh(r)}function iz(r){return new nh(r)}function az(r){return new sh(r)}function lz(r){return new Yd(r)}function uz(r){return new Jd(r)}function Qee(r){return new eh(r)}function ete(r){return new kd(r)}function tte(r){return new Hp(r)}function rte(r){return new Cd(r)}function nte(r){return new Dl(r)}function ote(r){return new vd(r)}function ste(r){return new qp(r)}function ite(r){return new Id(r)}function ate(r){return new Kp(r)}function lte(r){return new fn(r)}function ute(r){return new Up(r)}function cte(r){return new ah(r)}function pte(r){return new ih(r)}var mte=iz,fte=az,dte=lz,hte=uz;function gte(r){return new jd(r)}function xte(r){return new Gd(r)}function yte(r){return new Ud(r)}function bte(r){return new Rd(r)}var $C={};Ze($C,{MAPE:()=>Ate,MSE:()=>Rte,binaryAccuracy:()=>wte,binaryCrossentropy:()=>_te,categoricalAccuracy:()=>kte,categoricalCrossentropy:()=>Cte,cosineProximity:()=>Nte,mape:()=>Dte,meanAbsoluteError:()=>Tte,meanAbsolutePercentageError:()=>Ete,meanSquaredError:()=>$te,mse:()=>Fte,precision:()=>Ite,recall:()=>Ste,sparseCategoricalAccuracy:()=>vte});function wte(r,e){return od(r,e)}function _te(r,e){return Dx(r,e)}function vte(r,e){return $x(r,e)}function kte(r,e){return sd(r,e)}function Cte(r,e){return id(r,e)}function Ite(r,e){return K0(r,e)}function Ste(r,e){return AL(r,e)}function Nte(r,e){return rd(r,e)}function Tte(r,e){return zp(r,e)}function Ete(r,e){return Sl(r,e)}function Ate(r,e){return Sl(r,e)}function Dte(r,e){return Sl(r,e)}function $te(r,e){return Xi(r,e)}function Rte(r,e){return Xi(r,e)}function Fte(r,e){return Xi(r,e)}var RC={};Ze(RC,{modelFromJSON:()=>KL});var FC={};Ze(FC,{l1:()=>Pte,l1l2:()=>Ote,l2:()=>Mte});function Ote(r){return new mc(r)}function Pte(r){return ez(r)}function Mte(r){return tz(r)}var jx=class extends Il{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof Tn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Gx(r,e){return r<e}function cz(r,e){return r>e}var Ux=class extends jx{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Te("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Gx:this.mode==="max"?this.monitorFunc=cz:this.monitor.indexOf("acc")!==-1?this.monitorFunc=cz:this.monitorFunc=Gx,this.monitorFunc===Gx&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Gx?Infinity:-Infinity}async onEpochEnd(e,t){await Ki(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function Lte(r){return new Ux(r)}var pz={earlyStopping:Lte};var ns;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(ns||(ns={}));var mz;(function(r){let e;(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(mz||(mz={}));var OC={};function fz(r,e){let t={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e};OC[r]=t}function qx(r){return OC[r]}function dz(r){delete OC[r]}function C(r,e,t,n,o){let s=e.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd;if(s.type==="tensor")return yr(e.inputNames[s.inputIndexStart],t,n,o);if(s.type==="tensors")return e.inputNames.slice(i,l).map(m=>yr(m,t,n,o));let u=yr(e.inputNames.slice(i)[0],t,n,o),c=u.dataSync();return s.type==="number"?c[0]:y.toNestedArray(u.shape,c)}let a=e.attrParams[r];return a&&a.value}function yr(r,e,t,n){let[o,s]=en(r);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=t.currentContextIds.find(i=>!!e[Hx(o,i)]);return a!==void 0?e[Hx(o,a)][s]:void 0}function hz(r,e,t){return e[Hx(r,t.currentContextId)]}function Ws(r,e){let[t,n]=en(r);return[Hx(t,e&&e.currentContextId),n]}function Hx(r,e){return e?`${r}-${e}`:r}function en(r){let e=r.split(":");return e.length===1?[r,0]:[e[0],Number(e[e.length-1])]}function lh(r,e,t){let n=C("pad",r,e,t);if(n==="explicit"){n=C("explicitPaddings",r,e,t);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function js(r){return r.kept?r:Pn(r)}var PC={};Ze(PC,{json:()=>zte});var zte=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var MC={};Ze(MC,{json:()=>Bte});var Bte=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var LC={};Ze(LC,{json:()=>Vte});var Vte=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var zC={};Ze(zC,{json:()=>Wte});var Wte=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var BC={};Ze(BC,{json:()=>jte});var jte=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var VC={};Ze(VC,{json:()=>Gte});var Gte=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var WC={};Ze(WC,{json:()=>Ute});var Ute=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var jC={};Ze(jC,{json:()=>qte});var qte=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var GC={};Ze(GC,{json:()=>Hte});var Hte=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}];var UC={};Ze(UC,{json:()=>Kte});var Kte=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var qC={};Ze(qC,{json:()=>Xte});var Xte=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var HC={};Ze(HC,{json:()=>Yte});var Yte=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var KC={};Ze(KC,{json:()=>Zte});var Zte=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var XC={};Ze(XC,{json:()=>Jte});var Jte=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var YC={};Ze(YC,{json:()=>Qte});var Qte=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var ZC={};Ze(ZC,{json:()=>ere});var ere=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var JC={};Ze(JC,{json:()=>tre});var tre=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];var Kx=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[PC,MC,LC,zC,BC,VC,WC,qC,UC,jC,HC,KC,XC,YC,ZC,JC,GC],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){let n=e.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),l=[],u=[],c={},p={};t!=null&&(c=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let m=Object.keys(i);m.forEach(h=>{let g=i[h];g.inputNames.forEach(x=>{let[b]=Ws(x);g.inputs.push(i[b]),i[b].children.push(g)})}),Object.keys(p).length===0?m.forEach(h=>{let g=i[h];g.children.length===0&&u.push(g)}):Object.keys(p).forEach(h=>{let[g]=Ws(h),x=i[g];x!=null&&(x.signatureKey=p[h],u.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(h=>{let[g]=Ws(h),x=i[g];x&&(x.signatureKey=c[h],l.push(x))}):l=o;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:i,inputs:l,outputs:u,weights:s,placeholders:o,signature:t,functions:f};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=qx(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.substr(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=Xx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Xx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=ry(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ry(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=Zx(e.attr,s.tfName,s.defaultValue||0),i===void 0&&!!s.tfDeprecatedName&&(i=Zx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=ty(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ty(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=Yx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Yx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=oy(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=oy(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=ey(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ey(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=ny(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=ny(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=Jx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Jx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=Qx(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=Qx(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=gz(e.attr,s.tfName,s.defaultValue),i===void 0&&!!s.tfDeprecatedName&&(i=gz(e.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${e.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(e){let t=e.nodeDef,n=[],o=[],s={};t!=null&&(s=t.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&o.push(p[m.name]),p),{}));let a=[],i=[];e.signature.inputArg.forEach(p=>{let[m]=Ws(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:QC(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,a.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach(f=>{let[d]=Ws(f);m.inputs.push(s[d]),s[d].children.push(m)})});let u=e.ret;e.signature.outputArg.forEach(p=>{let[m,f]=Ws(u[p.name]),d=s[m];d!=null&&(d.defaultOutput=f,i.push(d))});let c=this.mapArgsToSignature(e);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function rre(r){let e=G().global;if(typeof e.atob!="undefined")return e.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function xz(r,e){let t=Array.isArray(r)?String.fromCharCode.apply(null,r):rre(r);return e?t:t.toLowerCase()}function Xx(r,e,t,n=!1){let o=r[e];return o!=null?xz(o.s,n):t}function Yx(r,e,t){let n=r[e];return n?n.b:t}function Zx(r,e,t){let n=r[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function QC(r){switch(typeof r=="string"&&(r=ns[r]),r){case ns.DT_FLOAT:return"float32";case ns.DT_INT32:case ns.DT_INT64:case ns.DT_INT8:case ns.DT_UINT8:return"int32";case ns.DT_BOOL:return"bool";case ns.DT_DOUBLE:return"float32";case ns.DT_STRING:return"string";default:return null}}function gz(r,e,t){let n=r[e];return n&&n.func?n.func.name:t}function Jx(r,e,t){let n=r[e];return n&&n.type?QC(n.type):t}function Qx(r,e,t){let n=r[e];return n&&n.list&&n.list.type?n.list.type.map(o=>QC(o)):t}function yz(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function ey(r,e,t){let n=r[e];return n&&n.shape?yz(n.shape):t}function ty(r,e,t){let n=r[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function ry(r,e,t,n=!1){let o=r[e];return o&&o.list&&o.list.s?o.list.s.map(s=>xz(s,n)):t}function ny(r,e,t){let n=r[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>yz(o)):t}function oy(r,e,t){let n=r[e];return n&&n.list&&n.list.b?n.list.b:t}var eI=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(e){return yr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return yr(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return Zx(this.node.rawAttrs,e,t);if(n.s!=null)return Xx(this.node.rawAttrs,e,t);if(n.b!=null)return Yx(this.node.rawAttrs,e,t);if(n.shape!=null)return ey(this.node.rawAttrs,e,t);if(n.type!=null)return Jx(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return ty(this.node.rawAttrs,e,t);if(n.list.s!=null)return ry(this.node.rawAttrs,e,t);if(n.list.shape!=null)return ny(this.node.rawAttrs,e,t);if(n.list.b!=null)return oy(this.node.rawAttrs,e,t);if(n.list.type!=null)return Qx(this.node.rawAttrs,e,t)}return t}};var bz=(r,e,t)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[Q(C("a",r,e,t),C("b",r,e,t))];case"AddN":return[gw(C("tensors",r,e,t))];case"FloorMod":case"Mod":return[Ru(C("a",r,e,t),C("b",r,e,t))];case"Mul":return[P(C("a",r,e,t),C("b",r,e,t))];case"RealDiv":case"Div":return[fe(C("a",r,e,t),C("b",r,e,t))];case"DivNoNan":return[Bm(C("a",r,e,t),C("b",r,e,t))];case"FloorDiv":return[_u(C("a",r,e,t),C("b",r,e,t))];case"Sub":return[ce(C("a",r,e,t),C("b",r,e,t))];case"Minimum":return[Bn(C("a",r,e,t),C("b",r,e,t))];case"Maximum":return[Nr(C("a",r,e,t),C("b",r,e,t))];case"Pow":return[_r(C("a",r,e,t),C("b",r,e,t))];case"SquaredDifference":return[Pa(C("a",r,e,t),C("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wz=(r,e,t)=>{switch(r.op){case"Abs":case"ComplexAbs":return[Et(C("x",r,e,t))];case"Acos":return[Nm(C("x",r,e,t))];case"Acosh":return[Tm(C("x",r,e,t))];case"Asin":return[Am(C("x",r,e,t))];case"Asinh":return[Dm(C("x",r,e,t))];case"Atan":return[$m(C("x",r,e,t))];case"Atan2":return[Rm(C("x",r,e,t),C("y",r,e,t))];case"Atanh":return[Fm(C("x",r,e,t))];case"Ceil":return[Pm(C("x",r,e,t))];case"Complex":return[vn(C("real",r,e,t),C("imag",r,e,t))];case"Cos":return[Ia(C("x",r,e,t))];case"Cosh":return[Nu(C("x",r,e,t))];case"Elu":return[Ns(C("x",r,e,t))];case"Erf":return[Vm(C("x",r,e,t))];case"Exp":return[Qt(C("x",r,e,t))];case"Expm1":return[Wm(C("x",r,e,t))];case"Floor":return[Ts(C("x",r,e,t))];case"Log":return[lr(C("x",r,e,t))];case"Log1p":return[Au(C("x",r,e,t))];case"Imag":return[Eu(C("x",r,e,t))];case"Neg":return[qe(C("x",r,e,t))];case"Reciprocal":return[Km(C("x",r,e,t))];case"Real":return[pl(C("x",r,e,t))];case"Relu":return[Er(C("x",r,e,t))];case"Round":return[Xm(C("x",r,e,t))];case"Selu":return[Lu(C("x",r,e,t))];case"Sigmoid":return[Hr(C("x",r,e,t))];case"Sin":return[zu(C("x",r,e,t))];case"Sign":return[Zm(C("x",r,e,t))];case"Sinh":return[Bu(C("x",r,e,t))];case"Softplus":return[Es(C("x",r,e,t))];case"Sqrt":return[bt(C("x",r,e,t))];case"Square":return[Me(C("x",r,e,t))];case"Tanh":return[Li(C("x",r,e,t))];case"Tan":return[tf(C("x",r,e,t))];case"ClipByValue":return[ar(C("x",r,e,t),C("clipValueMin",r,e,t),C("clipValueMax",r,e,t))];case"Relu6":return[Pu(C("x",r,e,t))];case"Rsqrt":return[Mu(yr(r.inputNames[0],e,t))];case"Prod":return[Fu(C("x",r,e,t),C("axes",r,e,t))];case"LeakyRelu":return[Na(C("x",r,e,t),C("alpha",r,e,t))];case"Prelu":return[$a(C("x",r,e,t),C("alpha",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function En(r,e,t=""){y.assert(nre(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function nre(r,e){if(r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==-1&&e[t]!==-1&&r[t]!==e[t])return!1;return!0}var tI=class{constructor(e,t,n,o,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=o,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ue(0),Dt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),En(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Dt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Or([],[0].concat(this.elementShape));let n=this.readMany(e);return En(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),jt(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Or([],[0].concat(this.elementShape));let t=[];for(let o=0;o<this.size();o++)t.push(o);let n=this.readMany(t);return En(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),et(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,pr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,o=e.map(l=>(n+=l,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:t.size/n,a=[];V(()=>{t=z(t,[1,n,s]);for(let l=0;l<e.length;++l){let u=l===0?0:o[l-1],c=[0,u,0],p=[1,e[l],s];a[l]=z(Oe(t,c,p),this.elementShape)}return a});let i=[];for(let l=0;l<e.length;l++)i[l]=l;this.writeMany(i,a)}};var gc=class{constructor(e,t,n,o=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);En(t,s.shape,"TensorList shape mismatch: "),Dt(s)}),this.idTensor=ue(0),this.maxNumElements=o,Dt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new gc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return En(e,this.elementShape,"TensorList shape mismatch: "),V(()=>{let o=this.tensors.map(s=>z(s,e));return jt(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=this.tensors.pop();return En(n.shape,e,"TensorList shape mismatch: "),z(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(En(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Dt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);return En(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);En(this.elementShape,t.shape,"TensorList shape mismatch: "),Dt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return En(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size()),e.length===0?Or([],[0].concat(this.elementShape)):V(()=>{let o=e.map(s=>z(this.tensors[s],n));return jt(o,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return En(this.elementShape,t,"TensorList shape mismatch: "),this.size()===0?Or([],[0].concat(this.elementShape)):V(()=>{let n=this.tensors.map(o=>z(o,t));return et(n,0)})}};function _z(r,e,t){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==t)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${t}`);let o=r.shape.slice(1);En(o,e,"TensorList shape mismatch: ");let s=pr(r);return new gc(s,e,n)}function vz(r,e,t){return new gc([],r,e,t)}function kz(r,e,t,n){if(e.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${r.shape[0]}`);let o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new gc([],t,r.dtype,n),a=pr(r,0);return e.forEach((i,l)=>{s.setItem(i,a[l])}),s}function Cz(r,e,t){let n=0,o=e.map(l=>(n+=l,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=n===0?0:r.size/n,a=V(()=>{let l=[];r=z(r,[1,n,s]);for(let u=0;u<e.length;++u){let c=u===0?0:o[u-1],p=[0,c,0],m=[1,e[u],s];l[u]=z(Oe(r,p,m),t)}return r.dispose(),l}),i=new gc([],t,r.dtype,e.length);for(let l=0;l<a.length;l++)i.setItem(l,a[l]);return i}var Iz=async(r,e,t)=>{switch(r.op){case"If":case"StatelessIf":{let n=C("thenBranch",r,e,t),o=C("elseBranch",r,e,t),s=C("cond",r,e,t),a=C("args",r,e,t);return(await s.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{let n=C("body",r,e,t),o=C("cond",r,e,t),s=C("args",r,e,t),a=await t.functionMap[o].executeFunctionAsync(s,t.tensorArrayMap,t.tensorListMap),i=s.map(c=>c.id),l=await a[0].data();a.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let u=s;for(;l[0];){let c=u;u=await t.functionMap[n].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);let p=u.map(f=>f.id);c.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=await t.functionMap[o].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await m[0].data(),m.forEach(f=>{!f.kept&&i.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{let n=C("pred",r,e,t);return[js(n)]}case"Switch":{let n=C("pred",r,e,t),o=C("data",r,e,t);return o.kept||(o=js(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>yr(o,e,t)!==void 0);if(n){let o=yr(n,e,t);return[js(o)]}return}case"Enter":{let n=C("frameName",r,e,t),o=C("tensor",r,e,t);return t.enterFrame(n),[js(o)]}case"Exit":{let n=C("tensor",r,e,t);return t.exitFrame(),[js(n)]}case"NextIteration":{let n=C("tensor",r,e,t);return t.nextIteration(),[js(n)]}case"TensorArrayV3":{let n=C("size",r,e,t),o=C("dtype",r,e,t),s=C("elementShape",r,e,t),a=C("dynamicSize",r,e,t),i=C("clearAfterRead",r,e,t),l=C("identicalElementShapes",r,e,t),u=C("name",r,e,t),c=new tI(u,o,n,s,l,a,i);return t.addTensorArray(c),[c.idTensor,ue(1)]}case"TensorArrayWriteV3":{let n=C("tensorArrayId",r,e,t),o=C("index",r,e,t),s=C("tensor",r,e,t),a=t.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=C("tensorArrayId",r,e,t),o=C("index",r,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=C("tensorArrayId",r,e,t),o=C("indices",r,e,t),s=C("dtype",r,e,t);return[t.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=C("tensorArrayId",r,e,t),o=C("indices",r,e,t),s=C("tensor",r,e,t),a=t.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id),s=C("dtype",r,e,t);return[o.concat(s)]}case"TensorArraySplitV3":{let n=C("tensorArrayId",r,e,t),o=C("tensor",r,e,t),s=C("lengths",r,e,t),a=t.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return[ue(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=C("tensorArrayId",r,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=C("tensorListId",r,e,t),o=C("index",r,e,t),s=C("tensor",r,e,t),a=t.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=C("tensorListId",r,e,t),o=C("index",r,e,t),s=C("elementShape",r,e,t),a=C("elementDType",r,e,t);return[t.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=C("indices",r,e,t),o=C("tensor",r,e,t),s=C("elementShape",r,e,t),a=C("numElements",r,e,t),i=kz(o,n,s,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=C("elementShape",r,e,t),o=C("elementDType",r,e,t),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=C(s,r,e,t),i=vz(n,o,a);return t.addTensorList(i),[i.idTensor]}case"TensorListGather":{let n=C("tensorListId",r,e,t),o=C("indices",r,e,t),s=C("elementShape",r,e,t),a=C("elementDType",r,e,t);return[t.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=C("tensorListId",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t),a=C("numElements",r,e,t);return[t.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=C("tensor",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t),a=_z(n,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":{let n=C("tensorListId",r,e,t),o=t.getTensorList(n.id),s=C("dtype",r,e,t),a=C("elementShape",r,e,t);return[o.concat(s,a)]}case"TensorListPushBack":{let n=C("tensorListId",r,e,t),o=C("tensor",r,e,t),s=t.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=C("tensorListId",r,e,t),o=C("elementShape",r,e,t),s=C("elementDType",r,e,t);return[t.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=C("tensor",r,e,t),o=C("elementShape",r,e,t),s=C("lengths",r,e,t),a=Cz(n,s,o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Sz(r,e,t){let[n,o]=C("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=n==="fusedbatchnorm",l=C("numArgs",r,e,t);if(s){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");let u=C("strides",r,e,t),c=lh(r,e,t),p=C("dataFormat",r,e,t).toUpperCase(),m=C("dilations",r,e,t),[f,d]=C("args",r,e,t),h=C("leakyreluAlpha",r,e,t);return{stride:u,pad:c,dataFormat:p,dilations:m,biasArg:f,preluArg:d,activationFunc:o,leakyreluAlpha:h}}var Nz=(r,e,t)=>{switch(r.op){case"Conv1D":{let n=C("stride",r,e,t),o=C("pad",r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilation",r,e,t);return[Iu(C("x",r,e,t),C("filter",r,e,t),n,o,s,a)]}case"Conv2D":{let n=C("strides",r,e,t),o=lh(r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilations",r,e,t);return[Kr(C("x",r,e,t),C("filter",r,e,t),[n[1],n[2]],o,s,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Sz(r,e,t);return[Wo.conv2d({x:C("x",r,e,t),filter:C("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:o,dataFormat:s,dilations:a,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=Sz(r,e,t);return[Wo.depthwiseConv2d({x:C("x",r,e,t),filter:C("filter",r,e,t),strides:[n[1],n[2]],pad:o,dataFormat:s,dilations:[a[1],a[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=C("outputShape",r,e,t),o=C("strides",r,e,t),s=lh(r,e,t);return[Su(C("x",r,e,t),C("filter",r,e,t),n,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=C("strides",r,e,t),o=lh(r,e,t),s=C("dilations",r,e,t),a=C("dataFormat",r,e,t).toUpperCase();return[Ln(C("input",r,e,t),C("filter",r,e,t),[n[1],n[2]],o,a,[s[1],s[2]])]}case"Conv3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("dataFormat",r,e,t).toUpperCase(),a=C("dilations",r,e,t);return[Mm(C("x",r,e,t),C("filter",r,e,t),[n[1],n[2],n[3]],o,s,[a[1],a[2],a[3]])]}case"AvgPool":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[ka(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPool":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[Aa(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o)]}case"MaxPoolWithArgmax":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t),a=C("includeBatchInIndex",r,e,t),{result:i,indexes:l}=zw(C("x",r,e,t),[s[1],s[2]],[n[1],n[2]],o,a);return[i,l]}case"AvgPool3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[Om(C("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"MaxPool3D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("kernelSize",r,e,t);return[qm(C("x",r,e,t),[s[1],s[2],s[3]],[n[1],n[2],n[3]],o)]}case"Dilation2D":{let n=C("strides",r,e,t),o=C("pad",r,e,t),s=C("dilations",r,e,t),a=n[1],i=n[2],l=s[1],u=s[2];return[zm(C("x",r,e,t),C("filter",r,e,t),[a,i],o,[l,u],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Tz=(r,e,t)=>{switch(r.op){case"Fill":{let n=C("shape",r,e,t),o=C("dtype",r,e,t),s=C("value",r,e,t);return[Sa(n,s,o)]}case"LinSpace":{let n=C("start",r,e,t),o=C("stop",r,e,t),s=C("num",r,e,t);return[Rw(n,o,s)]}case"Multinomial":{let n=C("logits",r,e,t),o=C("numSamples",r,e,t),s=C("seed",r,e,t);return[Bw(n,o,s)]}case"OneHot":{let n=C("indices",r,e,t),o=C("depth",r,e,t),s=C("onValue",r,e,t),a=C("offValue",r,e,t);return[Is(n,o,s,a)]}case"Ones":return[Tr(C("shape",r,e,t),C("dtype",r,e,t))];case"OnesLike":return[nr(C("x",r,e,t))];case"RandomUniform":return[As(C("shape",r,e,t),C("minval",r,e,t),C("maxval",r,e,t),C("dtype",r,e,t))];case"Range":{let n=C("start",r,e,t),o=C("stop",r,e,t),s=C("step",r,e,t);return[Jc(n,o,s,C("dtype",r,e,t))]}case"TruncatedNormal":{let n=C("shape",r,e,t),o=C("mean",r,e,t),s=C("stdDev",r,e,t),a=C("seed",r,e,t);return[Wu(n,o,s,C("dtype",r,e,t),a)]}case"Zeros":return[mt(C("shape",r,e,t),C("dtype",r,e,t))];case"ZerosLike":return[Se(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function rI(r,e,t){let n=C("boxes",r,e,t),o=C("scores",r,e,t),s=C("maxOutputSize",r,e,t),a=C("iouThreshold",r,e,t),i=C("scoreThreshold",r,e,t),l=C("softNmsSigma",r,e,t);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}}var Ez=async(r,e,t)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}=rI(r,e,t),u=await $s.nonMaxSuppressionWithScoreAsync(n,o,s,a,i,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=rI(r,e,t),l=C("padToMaxOutputSize",r,e,t),u=await $s.nonMaxSuppressionPaddedAsync(n,o,s,a,i,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i}=rI(r,e,t);return[await $s.nonMaxSuppressionAsync(n,o,s,a,i)]}case"Where":{let n=ne(C("condition",r,e,t),"bool"),o=[await of(n)];return n.dispose(),o}case"ListDiff":return Yw(C("x",r,e,t),C("y",r,e,t));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Az=(r,e,t)=>{switch(r.op){case"TopKV2":{let n=C("x",r,e,t),o=C("k",r,e,t),s=C("sorted",r,e,t),a=rf(n,o,s);return[a.values,a.indices]}case"Unique":{let n=C("x",r,e,t),o=ep(n);return[o.values,o.indices]}case"UniqueV2":{let n=C("x",r,e,t),o=C("axis",r,e,t),s=ep(n,o);return[s.values,s.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Dz=(r,e,t)=>{switch(r.op){case"Const":return e[r.name];case"PlaceholderWithDefault":let n=C("default",r,e,t);return[yr(r.name,e,t)||n];case"Placeholder":return[yr(r.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let u=C("x",r,e,t);return[js(u)]}case"IdentityN":return C("x",r,e,t).map(u=>js(u));case"Snapshot":let o=C("x",r,e,t);return[js(o)];case"Shape":return[Gt(C("x",r,e,t).shape,"int32")];case"ShapeN":return C("x",r,e,t).map(u=>Gt(u.shape));case"Size":return[ue(C("x",r,e,t).size,"int32")];case"Rank":return[ue(C("x",r,e,t).rank,"int32")];case"NoOp":return[ue(1)];case"Print":let s=C("x",r,e,t),a=C("data",r,e,t),i=C("message",r,e,t),l=C("summarize",r,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var nI=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ue(0),this.tensorMap=new Map,Dt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),V(()=>{let o=pr(t),s=n.length,a=o.length;y.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let l=n[i],u=o[i];Dt(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return V(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,t);o.push(i)}return jt(o)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};var $z=async(r,e,t,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=C("keyDType",r,e,t),s=C("valueDType",r,e,t),a=new nI(o,s);return n.addHashTable(r.name,a),[a.handle]}case"LookupTableImport":case"LookupTableImportV2":{let o=C("tableHandle",r,e,t,n),s=C("keys",r,e,t),a=C("values",r,e,t);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=C("tableHandle",r,e,t,n),s=C("keys",r,e,t),a=C("defaultValue",r,e,t);return[await n.getHashTableById(o.id).find(s,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Rz=(r,e,t)=>{switch(r.op){case"ResizeBilinear":{let n=C("images",r,e,t),o=C("size",r,e,t),s=C("alignCorners",r,e,t),a=C("halfPixelCenters",r,e,t);return[$s.resizeBilinear(n,[o[0],o[1]],s,a)]}case"ResizeNearestNeighbor":{let n=C("images",r,e,t),o=C("size",r,e,t),s=C("alignCorners",r,e,t),a=C("halfPixelCenters",r,e,t);return[$s.resizeNearestNeighbor(n,[o[0],o[1]],s,a)]}case"CropAndResize":{let n=C("image",r,e,t),o=C("boxes",r,e,t),s=C("boxInd",r,e,t),a=C("cropSize",r,e,t),i=C("method",r,e,t),l=C("extrapolationValue",r,e,t);return[$s.cropAndResize(n,o,s,a,i,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Fz=(r,e,t)=>{switch(r.op){case"Equal":return[Xr(C("a",r,e,t),C("b",r,e,t))];case"NotEqual":return[kn(C("a",r,e,t),C("b",r,e,t))];case"Greater":return[Yt(C("a",r,e,t),C("b",r,e,t))];case"GreaterEqual":return[Pr(C("a",r,e,t),C("b",r,e,t))];case"Less":return[Ta(C("a",r,e,t),C("b",r,e,t))];case"LessEqual":return[on(C("a",r,e,t),C("b",r,e,t))];case"LogicalAnd":return[hr(C("a",r,e,t),C("b",r,e,t))];case"LogicalNot":return[Ea(C("a",r,e,t))];case"LogicalOr":return[$u(C("a",r,e,t),C("b",r,e,t))];case"Select":case"SelectV2":return[$t(C("condition",r,e,t),C("a",r,e,t),C("b",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Oz=(r,e,t)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Ge(C("a",r,e,t),C("b",r,e,t),C("transposeA",r,e,t),C("transposeB",r,e,t))];case"Transpose":return[Ue(C("x",r,e,t),C("perm",r,e,t))];case"_FusedMatMul":let[n,o]=C("fusedOps",r,e,t),s=n==="biasadd",a=o==="prelu",i=C("numArgs",r,e,t),l=C("leakyreluAlpha",r,e,t);if(s){if(a&&i!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,c]=C("args",r,e,t);return[Wo.matMul({a:C("a",r,e,t),b:C("b",r,e,t),transposeA:C("transposeA",r,e,t),transposeB:C("transposeB",r,e,t),bias:u,activation:o,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Pz=(r,e,t)=>{switch(r.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[zo(C("x",r,e,t),C("mean",r,e,t),C("variance",r,e,t),C("offset",r,e,t),C("scale",r,e,t),C("epsilon",r,e,t))];case"FusedBatchNormV3":return[zo(C("x",r,e,t),C("mean",r,e,t),C("variance",r,e,t),C("offset",r,e,t),C("scale",r,e,t),C("epsilon",r,e,t))];case"LRN":return[jm(C("x",r,e,t),C("radius",r,e,t),C("bias",r,e,t),C("alpha",r,e,t),C("beta",r,e,t))];case"Softmax":return[Ra(C("x",r,e,t))];case"LogSoftmax":return[Du(C("x",r,e,t))];case"SparseToDense":return[sf(C("sparseIndices",r,e,t),C("outputShape",r,e,t),C("sparseValues",r,e,t),C("defaultValue",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Mz=(r,e,t)=>{switch(r.op){case"Max":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[ur(C("x",r,e,t),a,i)]}case"Mean":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[yt(C("x",r,e,t),a,i)]}case"Min":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[zi(C("x",r,e,t),a,i)]}case"Sum":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[we(C("x",r,e,t),a,i)]}case"All":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[vu(C("x",r,e,t),a,i)]}case"Any":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[ll(C("x",r,e,t),a,i)]}case"ArgMax":{let a=C("axis",r,e,t);return[ul(C("x",r,e,t),a)]}case"ArgMin":{let a=C("axis",r,e,t);return[Em(C("x",r,e,t),a)]}case"Prod":{let a=C("axis",r,e,t),i=C("keepDims",r,e,t);return[Fu(C("x",r,e,t),a,i)]}case"Cumsum":{let a=C("axis",r,e,t),i=C("exclusive",r,e,t),l=C("reverse",r,e,t);return[Tu(C("x",r,e,t),a,i,l)]}case"Bincount":let n=C("x",r,e,t),o=C("weights",r,e,t),s=C("size",r,e,t);return[kw(n,o,s)];case"DenseBincount":{let a=C("x",r,e,t),i=C("weights",r,e,t),l=C("size",r,e,t),u=C("binaryOutput",r,e,t);return[Tw(a,i,l,u)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Lz=(r,e,t)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=C("n",r,e,t),o=C("axis",r,e,t),s=C("tensors",r,e,t);return s=s.slice(0,n),[et(s,o)]}case"Gather":{let n=C("x",r,e,t),o=C("indices",r,e,t);return[Bo(n,ne(o,"int32"),0)]}case"GatherV2":{let n=C("axis",r,e,t),o=C("batchDims",r,e,t),s=C("x",r,e,t),a=C("indices",r,e,t);return[Bo(s,ne(a,"int32"),n,o)]}case"Reverse":{let n=C("dims",r,e,t),o=[];for(let a=0;a<n.length;a++)n[a]&&o.push(a);let s=C("x",r,e,t);return[Zt(s,o)]}case"ReverseV2":{let n=C("axis",r,e,t),o=C("x",r,e,t);return[Zt(o,n)]}case"Slice":{let n=C("begin",r,e,t),o=C("size",r,e,t);return[Oe(C("x",r,e,t),n,o)]}case"StridedSlice":{let n=C("begin",r,e,t),o=C("end",r,e,t),s=C("strides",r,e,t),a=C("beginMask",r,e,t),i=C("endMask",r,e,t),l=C("ellipsisMask",r,e,t),u=C("newAxisMask",r,e,t),c=C("shrinkAxisMask",r,e,t),p=C("x",r,e,t);return[ef(p,n,o,s,a,i,l,u,c)]}case"Pack":return V(()=>{let n=C("axis",r,e,t),o=C("tensors",r,e,t),s=o[0].shape,a=Cn(o[0]).shape,i=o.map(l=>{let u=y.arraysEqual(l.shape,s);if(!u&&!y.arraysEqual(Cn(l).shape,a))throw new Error("the input tensors shape does not match");return u?l:z(l,s)});return[jt(i,n)]});case"Unpack":{let n=C("axis",r,e,t),o=C("tensor",r,e,t);return pr(o,n)}case"Tile":{let n=C("reps",r,e,t);return[zn(C("x",r,e,t),n)]}case"Split":case"SplitV":{let n=C("axis",r,e,t),o=C("numOrSizeSplits",r,e,t),s=C("x",r,e,t);return cr(s,o,n)}case"ScatterNd":{let n=C("indices",r,e,t),o=C("values",r,e,t),s=C("shape",r,e,t);return[d_(n,o,s)]}case"GatherNd":{let n=C("x",r,e,t),o=C("indices",r,e,t);return[h_(n,o)]}case"SparseToDense":{let n=C("sparseIndices",r,e,t),o=C("outputShape",r,e,t),s=C("sparseValues",r,e,t),a=C("defaultValue",r,e,t);return[sf(n,s,o,s.dtype===a.dtype?a:ne(a,s.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var zz=(r,e,t)=>{switch(r.op){case"FFT":return[Fa(C("x",r,e,t))];case"IFFT":return[Bi(C("x",r,e,t))];case"RFFT":return[Oa(C("x",r,e,t))];case"IRFFT":return[Vu(C("x",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Bz=(r,e,t)=>{switch(r.op){case"Cast":return[ne(C("x",r,e,t),C("dtype",r,e,t))];case"ExpandDims":{let n=C("axis",r,e,t);return[wr(C("x",r,e,t),n)]}case"Squeeze":{let n=C("axis",r,e,t);return[Cn(C("x",r,e,t),n)]}case"Reshape":return[z(C("x",r,e,t),C("shape",r,e,t))];case"MirrorPad":return[Hm(C("x",r,e,t),C("padding",r,e,t),C("mode",r,e,t))];case"PadV2":case"Pad":return[Mr(C("x",r,e,t),C("padding",r,e,t),C("constantValue",r,e,t))];case"SpaceToBatchND":{let n=C("blockShape",r,e,t),o=C("paddings",r,e,t);return[Da(C("x",r,e,t),n,o)]}case"BatchToSpaceND":{let n=C("blockShape",r,e,t),o=C("crops",r,e,t);return[Ca(C("x",r,e,t),n,o)]}case"DepthToSpace":{let n=C("blockSize",r,e,t),o=C("dataFormat",r,e,t).toUpperCase();return[Lm(C("x",r,e,t),n,o)]}case"BroadcastTo":return[cl(C("x",r,e,t),C("shape",r,e,t))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function oI(r,e,t,n){let o=((s,a,i)=>{switch(s.category){case"arithmetic":return V(()=>bz(s,a,i));case"basic_math":return V(()=>wz(s,a,i));case"control":return Iz(s,a,i);case"convolution":return V(()=>Nz(s,a,i));case"creation":return V(()=>Tz(s,a,i));case"dynamic":return Ez(s,a,i);case"evaluation":return V(()=>Az(s,a,i));case"image":return V(()=>Rz(s,a,i));case"graph":return V(()=>Dz(s,a,i));case"logical":return V(()=>Fz(s,a,i));case"matrices":return V(()=>Oz(s,a,i));case"normalization":return V(()=>Pz(s,a,i));case"reduction":return V(()=>Mz(s,a,i));case"slice_join":return V(()=>Lz(s,a,i));case"spectral":return V(()=>zz(s,a,i));case"transformation":return V(()=>Bz(s,a,i));case"hash_table":return $z(s,a,i,n);case"custom":let l=qx(s.op);if(l&&l.customExecutor)return l.customExecutor(new eI(s,a,i));throw TypeError(`Custom op ${s.op} is not registered.`);default:throw TypeError(`Unknown op '${s.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return y.isPromise(o)?o.then(s=>[].concat(s)):[].concat(o)}var sy=class{constructor(e={},t={},n={},o={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function iI(r,e,t,n){let o=new Set,s=[],a=null,i=null,l=new Set,u=Object.keys(r).map(m=>en(m)[0]),c=[];n!=null&&(c=n.map(m=>en(m.name)[0]));let p=[...e];for(;p.length>0;){let m=p.pop();if((sI(m)||ore(m)||sre(m))&&a==null&&(a=m,i=a.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),t[m.name]==null&&u.indexOf(m.name)===-1&&c.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),p.push(f))})}}return{inputs:r,outputs:e,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function Vz(r,e,t){let{usedNodes:n,inputs:o}=t,s=[],a=Object.keys(o).map(c=>en(c)[0]).map(c=>r.nodes[c]),i=r.initNodes;a.forEach(c=>{n.has(c.name)&&s.push(c)}),r.weights.forEach(c=>{n.has(c.name)&&s.push(c)}),i!=null&&i.forEach(c=>{n.has(c.name)&&s.push(c)});let l=new Set,u=[];for(;s.length>0;){let c=s.pop();l.add(c.name),e[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&n.has(p.name)&&p.inputs.every(m=>l.has(m.name))&&s.push(p)})}return u}var ire=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],are=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],lre=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function sI(r){return ire.indexOf(r.op)>=0}function ore(r){return are.indexOf(r.op)>=0}function sre(r){return lre.indexOf(r.op)>=0}var Yp=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Yp(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(s=>s.name).sort(),o=t.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(e,t){let n=iI(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let i=t.map(u=>u.name),l=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${l}]. Missing the following inputs: [${o}]`)}return Vz(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let o=n.map(p=>this.graph.nodes[en(p)[0]]),s=t.map(p=>en(p)[0]),a=s.map(p=>this.graph.nodes[p]);a.length===0&&(a=this._outputs);let i=this.getCompilationKey(o,a),l=this.compiledMap.get(i);l==null&&(l=this.compile(e,a),this.compiledMap.set(i,l));let u={},c={};return V(()=>{let p=new sy(this.weightMap,u,c,this.functionExecutorMap),m=Object.assign({},this.weightMap);Object.keys(e).forEach(h=>{let[g,x]=en(h),b=[];b[x]=e[h],m[g]=b});let f=this.getFrozenTensorIds(m),d={};for(let h=0;h<l.length;h++){let g=l[h];if(!m[g.name]){let x=oI(g,m,p,this._resourceManager);if(y.isPromise(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=x,this.checkTensorForDisposal(g.name,g,m,p,f,s,d)}}return this.parent==null&&p.dispose(f),t.map(h=>yr(h,m,p))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,s,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(l=>{l!=null&&(i[l.id]=(i[l.id]||0)+t.children.length)}),t.inputs.forEach(l=>{if(l.category!=="control"){let u=hz(l.name,n,o);u!=null&&u.forEach(c=>{if(c&&!s.has(c.id)){let p=i[c.id];p===1?(c.dispose(),delete i[c.id]):p!=null&&i[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,o={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));let a=new sy(this.weightMap,o,s,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),l=t.map(m=>yr(m,i,a)),u=l.map(m=>m.id),c=Object.keys(e).map(m=>e[m].id),p=new Set([...u,...c,...this.weightIds]);return Object.keys(i).forEach(m=>{i[m].forEach(d=>{d&&!d.isDisposed&&!p.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(p),l}async executeFunctionAsync(e,t,n){let o=e.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){let s=Object.keys(e),a=s.map(w=>this.graph.nodes[en(w)[0]]),i=n.map(w=>en(w)[0]),l=i.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);let{usedNodes:u,missingInputs:c,dynamicNode:p,syncInputs:m}=iI(e,l,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:t.currentContext})),d=Object.assign({},this.weightMap);Object.keys(e).forEach(w=>{let[_,k]=en(w),E=[];E[k]=e[w],d[_]=E});let h={},g=this.getFrozenTensorIds(d),x={};for(;f.length>0;){let w=this.processStack(a,f,t,d,x,g,i,h,u);await Promise.all(w)}p==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(w=>!sI(w)&&!yr(w.name,d,t)).map(w=>w.name);if(b.length>0){let w="";throw p!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${w}`)}return d}processStack(e,t,n,o,s,a,i,l,u){let c=[];for(;t.length>0;){let p=t.pop();n.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&C("isConstant",p.node,o,n)&&([m]=Ws(p.node.name,n)),o[p.node.name]==null){let f=oI(p.node,o,n,this._resourceManager);m||([m]=Ws(p.node.name,n));let d=n.currentContext;y.isPromise(f)?c.push(f.then(h=>(o[m]=h,n.currentContext=d,this.checkTensorForDisposal(m,p.node,o,n,a,i,l),this.processChildNodes(p.node,t,n,o,s,u),h))):(o[m]=f,this.checkTensorForDisposal(m,p.node,o,n,a,i,l),this.processChildNodes(p.node,t,n,o,s,u))}else this.processChildNodes(p.node,t,n,o,s,u)}return c}processChildNodes(e,t,n,o,s,a){e.children.forEach(i=>{let[l]=Ws(i.name,n);s[l]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!yr(u,o,n))&&(s[l]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!yr(u,o,n))&&(s[l]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[o]=en(t),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((l,u)=>a[u]===-1||a[u]===l);y.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let o=this._signature.inputs[n];t[o.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[o]=en(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=en(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}};var aI=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}};var ure="?tfjs-format=file",cre="model.json",iy=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new aI}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Sr.browserHTTPRequest(e,this.loadOptions);else{let t=Sr.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(Sr.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?n=this.artifacts.userDefinedMetadata.signature:n=this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let o=Sr.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Yp(Kx.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let s=Kx.Instance.transformGraph(e.modelInitializer);this.initializer=new Yp(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=Sr.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof R)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,o)=>(t[n]=e[o],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function Wz(r,e={}){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&r.load==null&&(r.endsWith("/")||(r=r+"/"),r=`${r}${cre}${ure}`);let t=new iy(r,e);return await t.load(),t}var jz="2.8.5";var dy={};Ze(dy,{CSVDataset:()=>fh,Dataset:()=>Zi,FileDataSource:()=>yh,TextLineDataset:()=>ph,URLDataSource:()=>bh,array:()=>S3,csv:()=>P3,func:()=>M3,generator:()=>L3,microphone:()=>B3,version_data:()=>V3,webcam:()=>z3,zip:()=>N3});var I3=Ec(dI());var c3=Ec(dI());function s3(r,e){return ly(r,e)}function ly(r,e,t=new Map,n=new Set){if(r==null)return null;if(n.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(Rl(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],l=ly(i,e,t,n);s[a]=l}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return t.set(r,o.value),o.value}function a3(r,e=hI){return i3(r,e)}function i3(r,e,t=new Set){let n=r[0];if(t.has(n))throw new Error("Circular references are not supported.");let o=e(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(Rl(n)){let s=Array.isArray(n)?[]:{};t.add(n);for(let a in n){let i=r.map(u=>u[a]),l=i3(i,e,t);s[a]=l}return t.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function hI(r){return r===null?null:Rl(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function uy(r,e){let t=new Map;ly(r,e,t);for(let o of Array.from(t.keys())){let s=t.get(o);if(y.isPromise(s)){let a=await s;t.set(o,a)}}return ly(r,e,t)}function Rl(r){return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof R))}function l3(r){return r==null||xre(r)||Array.isArray(r)||typeof r=="object"&&r instanceof R||y.isTypedArray(r)}function xre(r){return r===null||typeof r!="object"&&typeof r!="function"}function u3(r){return s3(r,yre)}function yre(r){return r instanceof R?{value:r.clone(),recurse:!1}:Rl(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var uh=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}};var Zp=class extends uh{constructor(){super(Zp.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let o=0;o<n;o++)t[o]=this.get(this.wrap(this.begin+o));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};Zp.INITIAL_CAPACITY=32;function gI(r){return new p3(r)}function ch(r){return new m3(r)}function f3(r,e){return new xI(r,e)}function h3(r,e=Xa.FAIL){return new d3(r,e)}var Jt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new v3(this,e)}filter(e){return new w3(this,e)}map(e){return new _3(this,e)}mapAsync(e){return new yI(this,e)}serialMapAsync(e){return new yI(this,e).serial()}flatmap(e){return new k3(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new b3(this,e,t)}columnMajorBatch(e,t=!0,n=hI){return this.rowMajorBatch(e,t).map(s=>a3(s,n))}concatenate(e,t){return new xI(gI([this,e]),t)}take(e){return e<0||e==null?this:new y3(this,e)}skip(e){return e<0||e==null?this:new x3(this,e)}prefetch(e){return new bI(this,e)}shuffle(e,t){return new C3(this,e,t)}serial(){return new g3(this)}},p3=class extends Jt{constructor(e){super();this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:u3(e),done:!1}}},m3=class extends Jt{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},g3=class extends Jt{constructor(e){super();this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},x3=class extends Jt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;De(e.value)}return this.upstream.next()}},y3=class extends Jt{constructor(e,t){super();this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},b3=class extends Jt{constructor(e,t,n=!0){super();this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},w3=class extends Jt{constructor(e,t){super();this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;De(e.value)}}},_3=class extends Jt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Lo.getTensorsInContainer(e.value),n=this.transform(e.value),o=Lo.getTensorsInContainer(n);for(let s of t)Lo.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},v3=class extends Jt{constructor(e,t){super();this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},yI=class extends Jt{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Lo.getTensorsInContainer(e.value),n=await this.transform(e.value),o=Lo.getTensorsInContainer(n);for(let s of t)Lo.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},Jp=class extends Jt{constructor(){super();this.outputQueue=new Zp,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},k3=class extends Jp{constructor(e,t){super();this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Lo.getTensorsInContainer(e.value),n=this.transform(e.value),o=Lo.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of t)Lo.isTensorInList(s,o)||s.dispose();return!0}},xI=class extends Jt{constructor(e,t){super();this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},Xa;(function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"})(Xa||(Xa={}));var d3=class extends Jt{constructor(e,t=Xa.FAIL){super();this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function o(a){return a instanceof Jt?{value:a.next().then(l=>(t++,l.done&&n++,l.value)),recurse:!1}:{value:null,recurse:!0}}let s=await uy(this.iterators,o);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Xa.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Xa.SHORTEST:return{value:null,done:!0};case Xa.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},bI=class extends Jt{constructor(e,t){super();this.upstream=e,this.bufferSize=t,this.buffer=new uh(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},C3=class extends bI{constructor(e,t,n){super(e,t);this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=c3.alea(n||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}};var Zi=class{constructor(){this.size=null}batch(e,t=!0){let n=this;y.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let o;return this.size===Infinity||this.size==null?o=this.size:t?o=Math.ceil(this.size/e):o=Math.floor(this.size/e),dn(async()=>(await n.iterator()).columnMajorBatch(e,t,bre),o)}concatenate(e){let t=this,n;return this.size===Infinity||e.size===Infinity?n=Infinity:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,dn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===Infinity?n=Infinity:n=null,dn(async()=>(await t.iterator()).filter(o=>V(()=>e(o))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return dn(async()=>(await t.iterator()).map(n=>V(()=>e(n))),this.size)}mapAsync(e){let t=this;return dn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return dn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=Infinity:n=null,dn(async()=>{let o=ch(async()=>({value:await t.iterator(),done:!1}));return f3(o.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,dn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=I3.alea(t||y.now().toString());return dn(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,dn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===Infinity)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Zi.MAX_BUFFER_SIZE=1e4;function dn(r,e=null){return new class extends Zi{constructor(){super(...arguments);this.size=e}async iterator(){return r()}}}function S3(r){return dn(async()=>gI(r),r.length)}function N3(r){if(!Rl(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=e==null?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(let t in r)e=e==null?r[t].size:Math.min(e,r[t].size);return dn(async()=>{let t=await uy(r,n=>{if(n instanceof Zi)return{value:n.iterator(),recurse:!1};if(Rl(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return h3(t,Xa.SHORTEST)},e)}function bre(r){if(r===null)return null;let e=r[0];return l3(e)?{value:wre(r),recurse:!1}:{value:null,recurse:!0}}function wre(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof R?jt(r):Or(r)}var ph=class extends Zi{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var cy='"',mh=Symbol("out"),T3=Symbol("field"),py=Symbol("quote"),wI=Symbol("quoteafterquote"),E3=Symbol("quoteinquote"),fh=class extends Zi{constructor(e,t){super();this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new ph(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(y.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&y.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(t).filter(o=>t[o]>1);if(y.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let l=t[s],u=null;if(l==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let c=Number(l);if(isNaN(c))i&&i.dtype==="bool"?u=this.getBoolean(l):u=l;else if(!i||!i.dtype)u=c;else switch(i.dtype){case"float32":u=c;break;case"int32":u=Math.floor(c);break;case"bool":u=this.getBoolean(l);break;default:u=c}}i&&i.isLabel?o[a]=u:n[a]=u}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],o=0,s=e.length,a=mh;for(let i=0;i<s;i++)switch(a){case mh:switch(e.charAt(i)){case cy:o=i+1,a=py;break;case this.delimiter:if(o=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=mh;break;default:a=T3,o=i;break}break;case T3:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i)),a=mh,o=i+1;break;default:}break;case py:switch(e.charAt(i)){case cy:a=wI;break;default:}break;case wI:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(o,i-1)),a=mh,o=i+1;break;case cy:a=py;break;default:a=E3;break}break;case E3:switch(e.charAt(i)){case cy:a=py;break;default:}break;default:}if(a===wI?n.push(e.substring(o,s-1)):n.push(e.substring(o)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var dh=class extends Jt{constructor(e){super();this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(G().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");let t=new dh(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-Infinity&&o({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((o,s)=>n.set(o,s*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(y.sizeFromShape(t));return n.set(e,n.length-e.length),Or(n,t)}};var hh=class extends Jt{constructor(e,t){super();if(this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Gt([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,a=(1-o)/2,i=s+n,l=o+a;this.cropBox=Vi([a,s,l,i],[1,4])}else this.cropBox=Vi([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(G().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new hh(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Qh.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return V(()=>{let t=e.toFloat().expandDims(0),n;n=$s.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return n.reshape(o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var gh=class{};var my=class extends Jt{split(e){return new A3(this,e)}},A3=class extends my{constructor(e,t){super();this.upstream=e,this.impl=new D3(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},D3=class extends Jp{constructor(e,t){super();this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}};var _I=class extends Jt{decodeUTF8(){return new R3(this)}},R3=class extends my{constructor(e){super();this.upstream=e,this.impl=new F3(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},F3=class extends Jp{constructor(e){super();if(this.upstream=e,G().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=$3();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return G().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}};var xh=class extends _I{constructor(e,t={}){super();this.file=e,this.options=t,y.assert(e instanceof Uint8Array||(G().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=i=>{let l=s.result;if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),!(l instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(l)},s.onabort=i=>n(new Error("Aborted")),s.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,o);s.readAsArrayBuffer(a)}this.offset=o}),done:!1}}};async function O3(r,e={}){let t,n;typeof r=="string"?t=r:(t=r.url,n=_re(r));let o=await y.fetch(t,n);if(o.ok){let s=new Uint8Array(await o.arrayBuffer());return new xh(s,e)}else throw new Error(o.statusText)}var _re=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function fy(r){return typeof r=="string"&&r.substr(0,7)==="file://"}var yh=class extends gh{constructor(e,t={}){super();this.input=e,this.options=t}async iterator(){if(fy(this.input)&&G().get("IS_NODE")){let e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new xh(this.input,this.options)}};var bh=class extends gh{constructor(e,t={}){super();this.url=e,this.fileOptions=t}async iterator(){return fy(this.url)?new yh(this.url,this.fileOptions).iterator():O3(this.url,this.fileOptions)}};function P3(r,e={}){return new fh(new bh(r),e)}function M3(r){let e=ch(r);return dn(async()=>e)}function L3(r){return dn(async()=>{let e=await r();return ch(()=>e.next())})}async function z3(r,e){return hh.create(r,e)}async function B3(r){return dh.create(r)}var V3="2.8.5";var vre={tfjs:RI,"tfjs-core":FI,"tfjs-data":OI,"tfjs-layers":PI,"tfjs-converter":MI,"tfjs-backend-cpu":L_,"tfjs-backend-webgl":ek,"tfjs-backend-wasm":O0};export{ls as Abs,Ks as Acos,Xs as Acosh,rp as AdadeltaOptimizer,np as AdagradOptimizer,op as AdamOptimizer,sp as AdamaxOptimizer,wn as Add,Kn as AddN,jl as All,Gl as Any,Xn as ArgMax,na as ArgMin,Ys as Asin,Zs as Asinh,Js as Atan,ei as Atan2,Qs as Atanh,Yn as AvgPool,oa as AvgPool3D,ql as AvgPool3DGrad,Ul as AvgPoolGrad,px as BackendWasm,Zn as BatchMatMul,sa as BatchToSpaceND,Hl as Bincount,Pb as BroadcastTo,jx as Callback,Ix as CallbackList,Rn as Cast,ti as Ceil,Fn as ClipByValue,Kl as Complex,ia as ComplexAbs,us as Concat,Jn as Conv2D,Xl as Conv2DBackpropFilter,Qn as Conv2DBackpropInput,aa as Conv3D,Yl as Conv3DBackpropFilterV2,Zl as Conv3DBackpropInputV2,eo as Cos,ri as Cosh,ni as CropAndResize,to as Cumsum,Nx as CustomCallback,el as DataStorage,Jl as DenseBincount,oi as DepthToSpace,ro as DepthwiseConv2dNative,Ql as DepthwiseConv2dNativeBackpropFilter,eu as DepthwiseConv2dNativeBackpropInput,tu as Diag,la as Dilation2D,Oc as Dilation2DBackpropFilter,Fc as Dilation2DBackpropInput,$b as ENV,Ux as EarlyStopping,si as Elu,ru as EluGrad,Wh as Environment,ai as Equal,ii as Erf,oo as Exp,cs as ExpandDims,li as Expm1,nu as FFT,ua as Fill,ui as FlipLeftRight,so as Floor,io as FloorDiv,Pc as FromPixels,ao as FusedBatchNorm,ks as FusedConv2D,Cs as FusedDepthwiseConv2D,Gg as GPGPUContext,ci as GatherNd,ps as GatherV2,iy as GraphModel,pi as Greater,lo as GreaterEqual,Sx as History,ou as IFFT,ms as Identity,su as Imag,At as InputSpec,mi as IsFinite,fi as IsInf,di as IsNan,Us as KernelBackend,ca as LRN,au as LRNGrad,Qf as LayerVariable,Tn as LayersModel,uo as LeakyRelu,hi as Less,gi as LessEqual,iu as LinSpace,co as Log,xi as Log1p,Mb as LogSoftmax,yi as LogicalAnd,tl as LogicalNot,rl as LogicalOr,kg as MathBackendCPU,Kg as MathBackendWebGL,po as Max,fo as MaxPool,pa as MaxPool3D,uu as MaxPool3DGrad,lu as MaxPoolGrad,cu as MaxPoolWithArgmax,mo as Maximum,ho as Mean,go as Min,xo as Minimum,ma as MirrorPad,bi as Mod,ip as MomentumOptimizer,pu as Multinomial,yo as Multiply,fs as Neg,_i as NonMaxSuppressionV3,vi as NonMaxSuppressionV4,ki as NonMaxSuppressionV5,wi as NotEqual,rS as OP_SCOPE_SUFFIX,bo as OneHot,ds as OnesLike,Lr as Optimizer,hs as Pack,wo as PadV2,NV as Pool,_o as Pow,vo as Prelu,Ci as Prod,ap as RMSPropOptimizer,fn as RNN,fa as Range,Wb as Rank,mu as Real,no as RealDiv,Ii as Reciprocal,Ut as Reduction,ko as Relu,Io as Relu6,gs as Reshape,Co as ResizeBilinear,du as ResizeBilinearGrad,da as ResizeNearestNeighbor,fu as ResizeNearestNeighborGrad,So as Reverse,Fi as RotateWithOffset,No as Round,To as Rsqrt,ml as SGDOptimizer,Si as ScatterNd,xs as Select,Ni as Selu,Yi as Sequential,Ao as Sigmoid,Ei as Sign,Eo as Sin,Ti as Sinh,ys as Slice,Ro as Softmax,Ai as Softplus,ha as SpaceToBatchND,hu as SparseToDense,bs as SplitV,Do as Sqrt,ga as Square,Fo as SquaredDifference,On as Step,Di as StridedSlice,Oo as Sub,$o as Sum,jr as SymbolicTensor,$i as Tan,Po as Tanh,R as Tensor,pt as TensorBuffer,_n as Tile,Ri as TopK,Mo as Transpose,gu as Unique,ws as Unpack,xa as UnsortedSegmentSum,sl as Variable,_s as ZerosLike,vs as _FusedMatMul,Et as abs,Nm as acos,Tm as acosh,Q as add,gw as addN,s_ as addStrict,vu as all,ll as any,ul as argMax,Em as argMin,Am as asin,Dm as asinh,$m as atan,Rm as atan2,Fm as atanh,ka as avgPool,Om as avgPool3d,hw as backend,N as backend_util,Sj as basicLSTMCell,zo as batchNorm,ww as batchNorm2d,_w as batchNorm3d,vw as batchNorm4d,Ca as batchToSpaceND,kw as bincount,FU as booleanMaskAsync,cl as broadcastTo,Qh as browser,Ie as buffer,pz as callbacks,ne as cast,Pm as ceil,ar as clipByValue,Pn as clone,vn as complex,et as concat,Cw as concat1d,Iw as concat2d,Sw as concat3d,Nw as concat4d,V0 as constraints,Iu as conv1d,Kr as conv2d,Su as conv2dTranspose,Mm as conv3d,Hj as conv3dTranspose,AV as copyRegisteredKernels,Ia as cos,Nu as cosh,af as cosineWindow,Tu as cumsum,Yr as customGrad,dy as data,Tw as denseBincount,Pt as deprecationWarn,Lm as depthToSpace,Ln as depthwiseConv2d,dz as deregisterOp,Vc as device_util,tG as diag,zm as dilation2d,zW as disableDeprecationWarnings,De as dispose,BW as disposeVariables,fe as div,Bm as divNoNan,i_ as divStrict,Ew as dot,g_ as dropout,Ns as elu,LW as enableDebugMode,MW as enableProdMode,x_ as enclosingPowerOfTwo,Ss as engine,G as env,Xr as equal,Qw as equalStrict,Vm as erf,Qt as exp,wr as expandDims,Wm as expm1,Xc as eye,Fa as fft,Sa as fill,qW as findBackend,HW as findBackendFactory,Ts as floor,_u as floorDiv,tk as forceHalfFloat,Wo as fused,Bo as gather,h_ as gatherND,eg as gather_util,GW as getBackend,jh as getGradient,wm as getKernel,_m as getKernelsForBackend,yD as gpgpu_util,AG as grad,DG as grads,Yt as greater,Pr as greaterEqual,e_ as greaterEqualStrict,t_ as greaterStrict,Bi as ifft,Eu as imag,$s as image,oq as inTopKAsync,q0 as initializers,Vx as input,Sr as io,Vu as irfft,Aw as isFinite,Dw as isInf,$w as isNaN,Dt as keep,Dr as kernel_impls,TC as layers,Na as leakyRelu,Ta as less,on as lessEqual,r_ as lessEqualStrict,n_ as lessStrict,v_ as linalg,Rw as linspace,Wz as loadGraphModel,JL as loadLayersModel,jm as localResponseNormalization,lr as log,Au as log1p,Fw as logSigmoid,Du as logSoftmax,Um as logSumExp,hr as logicalAnd,Ea as logicalNot,$u as logicalOr,Lw as logicalXor,Yq as losses,Ge as matMul,RS as math,ur as max,Aa as maxPool,qm as maxPool3d,zw as maxPoolWithArgmax,Nr as maximum,a_ as maximumStrict,yt as mean,qc as memory,$C as metrics,zi as min,Bn as minimum,l_ as minimumStrict,Hm as mirrorPad,Ru as mod,u_ as modStrict,YL as model,RC as models,Yc as moments,JU as movingAverage,P as mul,c_ as mulStrict,i4 as multiRNNCell,Bw as multinomial,qe as neg,lf as nextFrame,ju as norm,kn as notEqual,o_ as notEqualStrict,Is as oneHot,Tr as ones,nr as onesLike,S as op,p4 as outerProduct,Mr as pad,d4 as pad1d,g4 as pad2d,y4 as pad3d,w4 as pad4d,Vw as pool,_r as pow,p_ as powStrict,$a as prelu,sw as print,Fu as prod,VW as profile,E4 as rand,M4 as randomGamma,mg as randomNormal,As as randomUniform,Jc as range,jW as ready,pl as real,Km as reciprocal,wu as registerBackend,QL as registerCallbackConstructor,zb as registerGradient,nl as registerKernel,fz as registerOp,FC as regularizers,Er as relu,Pu as relu6,UW as removeBackend,z as reshape,Zt as reverse,q4 as reverse1d,K4 as reverse2d,Y4 as reverse3d,J4 as reverse4d,Oa as rfft,Xm as round,Mu as rsqrt,ue as scalar,d_ as scatterND,tg as scatter_util,Lu as selu,Ym as separableConv2d,ZL as sequential,ee as serialization,XS as setBackend,KW as setPlatform,OJ as setWasmPath,PJ as setWasmPaths,sv as setWebGLContext,Yw as setdiff1dAsync,Ig as shared,Hr as sigmoid,Zm as sign,Xq as signal,zu as sin,Bu as sinh,Oe as slice,Jm as slice1d,fg as slice2d,Qm as slice3d,Qc as slice4d,ir as slice_util,Ra as softmax,Es as softplus,Da as spaceToBatchND,sf as sparseToDense,Kq as spectral,cr as split,bt as sqrt,Me as square,Pa as squaredDifference,m_ as squaredDifferenceStrict,Cn as squeeze,jt as stack,Ds as step,ef as stridedSlice,ce as sub,f_ as subStrict,we as sum,xu as sumOutType,tf as tan,Li as tanh,Or as tensor,Gt as tensor1d,Vi as tensor2d,uw as tensor3d,CU as tensor4d,IU as tensor5d,SU as tensor6d,Lo as tensor_util,qS as test_util,V as tidy,zn as tile,WW as time,rf as topk,fl as train,Ue as transpose,Wu as truncatedNormal,ep as unique,EV as unregisterGradient,TV as unregisterKernel,nf as unsortedSegmentSum,pr as unstack,dr as upcastType,y as util,$G as valueAndGrad,RG as valueAndGrads,Zw as variable,lg as variableGrads,vre as version,jz as version_converter,PW as version_core,L_ as version_cpu,Wp as version_layers,O0 as version_wasm,ek as version_webgl,V8 as webgl,fD as webgl_util,$t as where,of as whereAsync,mt as zeros,Se as zerosLike};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */
//# sourceMappingURL=tfjs.esm.js.map
